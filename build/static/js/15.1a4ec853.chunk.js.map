{"version":3,"sources":["resouces/logo_icon_character-min.png","common/ToolTips.tsx","component/header/header.view.tsx","component/header/header.tsx","common/stylesheet.ts","common/view.tsx"],"names":["module","exports","ToolTips","Tooltip","disableTouchListener","title","this","props","Button","style","padding","minWidth","children","Component","CreateDealComponent","getLazyComponent","LazyLoadComponent","CreateDeal","Drawer","HeaderView","CreateDealDrawer","anchor","onClose","onCloseCreateDeal","open","isCreateDealDrawerOpen","CreateNewDealButton","onClick","onClickCreateDeal","styles","createNewDealIcon","HeaderTextAndLogo","alt","src","logo","width","LocationButton","areaLabel","label","appContext","labels","header","selectedAddress","area","loading","currentLocation","locationIcon","TopBarSection","HeaderMenu","isFlexDirectionRow","buttonContainer","boxShadow","rootContainer","ApplicationComponent","alignItems","justifyContent","color","styleSchema","primaryColor","icon","greenMedium","backgroundColor","white","borderColor","greyDark","Header","console","debug","setState","state","isHamburgerMenuDrawerOpen","useAutoLocation","appState","address","ORANGE_GRADIENT","button","borderRadius","black","blueTransparent","green","greyLight","greyTransparent","orange","orangeGradient","orangeTransparent","primaryGradient","primaryColorTransparent","red","redDark","secondaryColor","secondaryColorTransparent","systemError","systemInform","systemSuccess","systemWarn","common","dimension","FILL_ALL_HEIGHT","FILL_ALL_WIDTH","font","fontSize","primaryFont","marginLeft","remind","textField","borderWidth","View","display","flexDirection"],"mappings":"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","file":"static/js/15.1a4ec853.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_icon_character-min.f8d459b6.png\";","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\ninterface Props {\n  children: React.ReactNode;\n  title: string;\n}\n\nexport default class ToolTips extends Component<Props> {\n  render() {\n    return (\n      <Tooltip disableTouchListener title={this.props.title}>\n        <Button style={{ padding: 0, minWidth: 0 }}>\n          {this.props.children}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { Address } from \"../../modal/deal\";\nimport View from \"../../common/view\";\nimport { styleSchema } from \"../../common/stylesheet\";\nimport logo from \"../../resouces/logo_icon_character-min.png\";\nimport { default as AddIcon } from \"@material-ui/icons/Add\";\nimport { default as LocationIcon } from \"@material-ui/icons/Room\";\nimport ToolTips from \"../../common/ToolTips\";\nimport { getLazyComponent } from \"../../lazyLoad/lazyLoad\";\nimport { LazyLoadComponent } from \"../../lazyLoad/lazyLoadComponent\";\n\nexport interface Props {\n  isCreateDealDrawerOpen: boolean;\n  onClickCreateDeal: () => void;\n  onCloseCreateDeal: () => void;\n  selectedAddress?: Address;\n}\n\nconst CreateDealComponent = getLazyComponent(LazyLoadComponent.CreateDeal);\nconst Drawer = getLazyComponent(LazyLoadComponent.Drawer);\n\nexport default class HeaderView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <>\n        <View\n          boxShadow={1}\n          isFlexDirectionRow={true}\n          style={styles.rootContainer}\n        >\n          <this.CreateDealDrawer />\n          <this.HeaderTextAndLogo />\n          <this.TopBarSection />\n        </View>\n      </>\n    );\n  }\n\n  CreateDealDrawer = () => {\n    return (\n      <Drawer\n        anchor={\"top\"}\n        onClose={this.props.onCloseCreateDeal}\n        open={this.props.isCreateDealDrawerOpen}\n      >\n        <CreateDealComponent onClose={this.props.onCloseCreateDeal} />\n      </Drawer>\n    );\n  };\n\n  CreateNewDealButton = () => {\n    return (\n      <AddIcon\n        onClick={this.props.onClickCreateDeal}\n        style={styles.createNewDealIcon}\n      />\n    );\n  };\n\n  HeaderTextAndLogo = () => {\n    return (\n      <View>\n        <img alt={\"app-logo\"} src={logo} style={{ width: 100 }} />\n      </View>\n    );\n  };\n\n  LocationButton = () => {\n    const label = this.appContext.labels.header;\n    let areaLabel;\n    if (this.props.selectedAddress && this.props.selectedAddress.area) {\n      areaLabel = this.props.selectedAddress.area;\n    } else {\n      areaLabel = label.loading;\n    }\n    return (\n      <ToolTips title={`${label.currentLocation} ${areaLabel}`}>\n        <LocationIcon style={styles.locationIcon} />\n      </ToolTips>\n    );\n  };\n\n  TopBarSection = () => {\n    const HeaderMenu = getLazyComponent(LazyLoadComponent.HeaderMenu);\n    return (\n      <View isFlexDirectionRow={true} style={styles.buttonContainer}>\n        <this.CreateNewDealButton />\n        <this.LocationButton />\n        <HeaderMenu />\n      </View>\n    );\n  };\n}\n\nconst styles = {\n  buttonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  createNewDealIcon: {\n    color: styleSchema.color.primaryColor,\n    ...styleSchema.icon,\n  },\n  locationIcon: {\n    color: styleSchema.color.greenMedium,\n    ...styleSchema.icon,\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    backgroundColor: styleSchema.color.white,\n    borderColor: styleSchema.color.greyDark,\n    justifyContent: \"space-between\",\n    padding: 15,\n  },\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { HeaderView } from \".\";\n\ninterface State {\n  isCreateDealDrawerOpen: boolean;\n  isHamburgerMenuDrawerOpen: boolean;\n  useAutoLocation: boolean;\n}\n\nexport default class Header extends ApplicationComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      isHamburgerMenuDrawerOpen: false,\n      useAutoLocation: true,\n    };\n  }\n\n  render() {\n    return (\n      <HeaderView\n        isCreateDealDrawerOpen={this.state.isCreateDealDrawerOpen}\n        onClickCreateDeal={this.onClickCreateDeal}\n        onCloseCreateDeal={this.onCloseCreateDeal}\n        selectedAddress={this.appState.address.selectedAddress}\n      />\n    );\n  }\n\n  protected onClickCreateDeal = () => {\n    console.debug(\"onClickCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: true,\n    });\n  };\n\n  protected onCloseCreateDeal = () => {\n    console.debug(\"onCloseCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: false,\n    });\n  };\n}\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_GRADIENT = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"EA4335\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\nconst SYSTEM_ERROR = \"#F44436\";\nconst SYSTEM_INFORM = \"#2196F3\";\nconst SYSTEM_SUCCESS = \"#4CAF51\";\nconst SYSTEM_WARN = \"#FF9800\";\n\n// dimension\nconst FILL_ALL_HEIGHT = \"-webkit-fill-available\";\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst PRIMARY_FONT = \"sans-serif\";\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeGradient: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryGradient: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    systemError: string;\n    systemInform: string;\n    systemSuccess: string;\n    systemWarn: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_HEIGHT: string;\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    primaryFont: string;\n  };\n  icon: any;\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeGradient: ORANGE_GRADIENT,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryGradient: ORANGE_GRADIENT,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    systemError: SYSTEM_ERROR,\n    systemInform: SYSTEM_INFORM,\n    systemSuccess: SYSTEM_SUCCESS,\n    systemWarn: SYSTEM_WARN,\n    white: WHITE\n  },\n  common: {\n    borderColor: GREY_LIGHT\n  },\n  dimension: {\n    FILL_ALL_HEIGHT,\n    FILL_ALL_WIDTH\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    primaryFont: PRIMARY_FONT\n  },\n  icon: {\n    fontSize: 38,\n    marginLeft: 18\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport Box, { BoxProps } from \"@material-ui/core/Box\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: (any?: any) => void;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n"],"sourceRoot":""}