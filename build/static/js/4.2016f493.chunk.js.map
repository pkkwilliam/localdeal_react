{"version":3,"sources":["common/stylesheet.ts","common/localStorage.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/imageProcessor.ts","common/applicationComponent.tsx","common/middleware/service.ts","common/view.tsx","common/feature/feature.ts"],"names":["ORANGE_GRADIENT","styleSchema","button","borderRadius","color","black","blueTransparent","blueTransparentSemi","green","greenMedium","greyDark","greyLight","greyTransparent","orange","orangeGradient","orangeTransparent","primaryColor","primaryGradient","primaryColorTransparent","red","redDark","secondaryColor","secondaryColorTransparent","systemError","systemInform","systemSuccess","systemWarn","white","common","borderColor","dimension","FILL_ALL_HEIGHT","FILL_ALL_WIDTH","font","fontSize","primaryFont","remind","textField","borderWidth","StorageType","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","isMultipartFileRequest","this","hasMock","Promise","resolve","getResponse","serviceName","requestParam","optionalRequestParam","requestUrl","externalService","url","fetch","body","credentials","customHeader","method","mode","then","result","isJsonResponse","get","match","status","json","reject","catch","exception","console","warn","response","JSON","parse","ex","debug","ServiceName","GET_DEALS","GET_DEALS_RESPONSE","GET_CURRENT_ADDRESS","GET_POSITION_RESPONSE","GET_SERVER_HEALTH","GET_SERVICE_HEALTH","GET_USER_PROFILE","deals","id","address","attendCount","createdBy","dealCreated","likedSum","name","imageUrl","oAuthProvider","OAuthProvider","GOOGLE","description","filesUrl","serverIdentifierName","title","timestamp","likedCount","verifiedLikedUserCount","liked","area","formattedAddress","country","city","up","Transformer","_lables","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","date","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","labels","isAllowDealRefresh","Feature","CREATE_DEAL_DRAFT","CONTACT_SHOW_EMAIL","HEADER_MENU","LOGIN_GOOGLE_OAUTH","LOGIN_WECHAT_OAUTH","XMADTAPPID","XMADTAPPVERSION","chineseTraditionalLabel","isProd","ImageProcessor","file","imageType","height","width","quality","Resizer","imageFileResizer","processedImage","image","Image","src","URL","createObjectURL","onload","size","type","transferToBlob","blob","getImageInfo","imageCompressQuality","imageNameSplit","split","imageCompress","length","originalImage","loadImage","img","toDataURL","guessImageMime","orientation","data","charAt","LocalStorage","value","localStorage","getItem","hideAnnouncement","hide","setItem","toString","ApplicationComponent","_localStorage","_appContext","_imageProcessor","executeGetDeals","appState","selectedAddress","appContext","serviceExecutor","execute","getDealResponse","deal","setDeals","search","window","location","params","URLSearchParams","state","code","NONE","authorizationCode","history","pushState","document","all","getServerStatus","setCurrentPosition","checkOAuthFromUrl","getUserProfile","setCurrentAddress","checkOAuth","LOGIN_OAUTH_GOOGLE","oAuthRedirectUrl","onOAuthLoginComplete","transformer","getCurrentLocation","coordinate","setGeolocation","addresses","setPredicteAddresses","setLoadingPosition","setSelectedAddress","service","setServiceUp","user","setUserProfile","context","Component","contextType","AppState","CREATE_DEAL","stringify","currentArea","generateCurrentAreaRequestParameter","generateParameter","GET_PRESIGNED_URL","fileType","fileName","redirectUrl","generateMultipleUrlParameters","LOGOUT_OAUTH","UPDATE_NICKNAME","nickname","UPLOAD_IMAGE_SIGNED_URL","signedUrl","VOTE_CHANGE","dealId","parameters","undefined","push","areaName","keyAndValue","parameter","i","key","View","display","flexDirection","props","isFlexDirectionRow","alignItems","justifyContent","onClick","children"],"mappings":"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","file":"static/js/4.2016f493.chunk.js","sourcesContent":["// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst BLUE_TRANSPARENT_SEMI = \"rgba(16, 137, 254,1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_GRADIENT = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"EA4335\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\nconst SYSTEM_ERROR = \"#F44436\";\nconst SYSTEM_INFORM = \"#2196F3\";\nconst SYSTEM_SUCCESS = \"#4CAF51\";\nconst SYSTEM_WARN = \"#FF9800\";\n\n// dimension\nconst FILL_ALL_HEIGHT = \"-webkit-fill-available\";\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst PRIMARY_FONT = \"sans-serif\";\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    blueTransparentSemi: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeGradient: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryGradient: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    systemError: string;\n    systemInform: string;\n    systemSuccess: string;\n    systemWarn: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_HEIGHT: string;\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    primaryFont: string;\n  };\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius,\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    blueTransparentSemi: BLUE_TRANSPARENT_SEMI,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeGradient: ORANGE_GRADIENT,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryGradient: ORANGE_GRADIENT,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    systemError: SYSTEM_ERROR,\n    systemInform: SYSTEM_INFORM,\n    systemSuccess: SYSTEM_SUCCESS,\n    systemWarn: SYSTEM_WARN,\n    white: WHITE,\n  },\n  common: {\n    borderColor: GREY_LIGHT,\n  },\n  dimension: {\n    FILL_ALL_HEIGHT,\n    FILL_ALL_WIDTH,\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    primaryFont: PRIMARY_FONT,\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE,\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2,\n  },\n};\n","enum StorageType {\n  hideAnnouncement = \"hideAnnouncement\",\n}\n\nexport default class LocalStorage {\n  getHideAnnouncement(): boolean {\n    const value = localStorage.getItem(StorageType.hideAnnouncement);\n    return value !== null && value === \"true\";\n  }\n\n  setHideAnnouncement(hide: boolean) {\n    localStorage.setItem(StorageType.hideAnnouncement, hide.toString());\n  }\n}\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\nimport { OAuthProvider } from \"../../modal/oAuthProvider\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = endpoint.externalService\n        ? endpoint.url\n        : this.serviceUrl + endpoint.url + requestParam;\n      return (\n        fetch(requestUrl, {\n          body: endpoint.body,\n          credentials: endpoint.externalService ? \"omit\" : \"include\", // this is for CORS sending cookies\n          headers: endpoint.externalService ? endpoint.customHeader : headers,\n          method: endpoint.method,\n          mode: \"cors\",\n        })\n          .then((result) => {\n            const isJsonResponse = result.headers\n              .get(\"content-type\")\n              ?.match(\"application/json\");\n            const status = result.status;\n            if (status < 400) {\n              if (status === 204 || !isJsonResponse) {\n                return Promise.resolve();\n              } else {\n                return Promise.resolve(result.json());\n              }\n            } else if (result.status > 400) {\n              return Promise.reject();\n            }\n          })\n          // .then(result => Promise.resolve(result))\n          .catch((exception) => {\n            console.warn(\n              \"Something is wrong while fetch: \",\n              requestUrl,\n              exception\n            );\n            return Promise.reject(exception);\n          })\n      );\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (endpoint: Endpoint) => {\n    return !endpoint.isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\",\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  console.debug(\"get mock response:\", serviceName);\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    case ServiceName.GET_SERVER_HEALTH:\n      return GET_SERVICE_HEALTH;\n    case ServiceName.GET_USER_PROFILE:\n      return GET_USER_PROFILE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      createdBy: {\n        id: 0,\n        dealCreated: [9, 8, 2],\n        likedSum: 0,\n        name: \"Mock User\",\n        imageUrl:\n          \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n        oAuthProvider: OAuthProvider.GOOGLE,\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582,\n      likedCount: 1378,\n      verifiedLikedUserCount: 521,\n      liked: false,\n    },\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      description:\n        \"The content of ExpansionPanels is mounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n    {\n      id: 2,\n      address: \"Mock Address 2\",\n      attendCount: 0,\n      description:\n        \"STTSTSDFounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n  ],\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n];\n\nconst GET_SERVICE_HEALTH = {\n  up: true,\n};\n\nconst GET_USER_PROFILE = {\n  id: 0,\n  dealCreated: [1, 3, 4],\n  likedSum: 1923,\n  name: \"Mock User\",\n  imageUrl:\n    \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n  oAuthProvider: \"GOOGLE\",\n};\n","import AppContext from \"./appContext\";\nimport { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  constructor(private readonly _lables: any) {}\n  timeDifferentCalcualtor(timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return this._lables.date.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(timeDifference: number): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${this._lables.date.day}`\n      : this._lables.date.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport chineseTraditionalLabel from \"../content/labels/chinese.traditional.json\";\nimport { Feature } from \"./feature/feature\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer(this.labels);\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get features(): Feature[] {\n    return [\n      Feature.CREATE_DEAL_DRAFT,\n      Feature.CONTACT_SHOW_EMAIL,\n      Feature.HEADER_MENU,\n      Feature.LOGIN_GOOGLE_OAUTH,\n      Feature.LOGIN_WECHAT_OAUTH,\n    ];\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION,\n    };\n  }\n\n  get labels() {\n    return chineseTraditionalLabel;\n  }\n\n  get isMock(): boolean {\n    return false;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get oAuthRedirectUrl(): string {\n    return this.isProd ? \"https://liuda.site\" : \"http://127.0.0.1:3000\";\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import Resizer from \"react-image-file-resizer\";\nimport loadImage from \"blueimp-load-image\";\n\nexport default class ImageProcessor {\n  public imageCompress(\n    file: File,\n    imageType: string,\n    height: number,\n    width: number,\n    quality: number\n  ): Promise<File> {\n    return new Promise((resolve, reject) => {\n      const callBackFunction = (processedImage: File) => {\n        resolve(processedImage);\n      };\n      Resizer.imageFileResizer(\n        file,\n        width / 5,\n        height,\n        imageType,\n        quality,\n        0,\n        callBackFunction,\n        \"blob\"\n      );\n    });\n  }\n\n  public async getImageInfo(\n    file: File\n  ): Promise<{ height: number; size: number; type: string; width: number }> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = URL.createObjectURL(file);\n      image.onload = () => {\n        return resolve({\n          height: image.height,\n          size: file.size,\n          type: file.type,\n          width: image.width,\n        });\n      };\n    });\n  }\n\n  public async imagePrecprocess(file: any): Promise<File> {\n    let blob = await this.transferToBlob(file);\n    const { height, size, type, width } = await this.getImageInfo(blob);\n    console.debug(\"original image size:\", size);\n    const imageCompressQuality = size > 100000 ? 10 : 100;\n    const imageNameSplit = type.split(\"/\");\n    const processedImage = await this.imageCompress(\n      blob,\n      imageNameSplit[imageNameSplit.length - 1],\n      height,\n      width,\n      imageCompressQuality\n    );\n    await this.getImageInfo(processedImage);\n    return Promise.resolve(processedImage);\n  }\n\n  protected transferToBlob(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return fetch(file)\n        .then((originalImage) => originalImage.blob())\n        .then((result) => resolve(result));\n    });\n  }\n\n  public fixRotation(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      loadImage(\n        file,\n        (img: any) => {\n          return resolve(img.toDataURL(this.guessImageMime(file)));\n        },\n        { orientation: true }\n      );\n    });\n  }\n\n  guessImageMime(data: string): string {\n    if (data.charAt(0) === \"/\") {\n      return \"image/jpeg\";\n    } else if (data.charAt(0) === \"R\") {\n      return \"image/gif\";\n    } else if (data.charAt(0) === \"i\") {\n      return \"image/png\";\n    } else {\n      return \"\";\n    }\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\nimport { OAuthProvider } from \"../modal/oAuthProvider\";\nimport ImageProcessor from \"./imageProcessor\";\nimport AppState from \"../common/context/appState\";\nimport AppStateInterface from \"./context/appStateInterface\";\nimport {\n  LOGIN_OAUTH_GOOGLE,\n  GET_CURRENT_ADDRESS,\n  GET_DEALS,\n  GET_SERVER_HEALTH,\n  GET_USER_PROFILE,\n} from \"./middleware/service\";\nimport LocalStorage from \"../common/localStorage\";\nimport { Coordinate, GetDealResponse, Address } from \"../modal/deal\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  static contextType = AppState;\n  private readonly _localStorage = new LocalStorage();\n  private readonly _appContext: AppContext = new AppContext();\n  private readonly _imageProcessor: ImageProcessor = new ImageProcessor();\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n\n  get appState(): AppStateInterface {\n    return this.context;\n  }\n\n  get imageProcessor(): ImageProcessor {\n    return this._imageProcessor;\n  }\n\n  get localStorage(): LocalStorage {\n    return this._localStorage;\n  }\n\n  public checkOAuth(): {\n    authorizationCode: string;\n    oAuthProvider: OAuthProvider;\n  } {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const state = params.get(\"state\");\n    const code = params.get(\"code\");\n    let oAuthProvider: OAuthProvider = OAuthProvider.NONE;\n    let authorizationCode: string = \"\";\n    if (state === OAuthProvider.GOOGLE) {\n      oAuthProvider = OAuthProvider.GOOGLE;\n      authorizationCode = code ?? \"\";\n    }\n    return {\n      authorizationCode,\n      oAuthProvider,\n    };\n  }\n\n  public onOAuthLoginComplete() {\n    window.history.pushState(null, document.title, \"/\");\n  }\n\n  async executeInit() {\n    let value = await Promise.all([\n      this.getServerStatus().then((result) => result),\n      this.setCurrentPosition(),\n    ]);\n    if (value[0]) {\n      this.checkOAuthFromUrl();\n      this.getUserProfile();\n      await this.setCurrentAddress();\n      await this.executeGetDeals();\n    }\n    return value[0];\n  }\n\n  protected checkOAuthFromUrl() {\n    const { authorizationCode, oAuthProvider } = this.checkOAuth();\n    if (oAuthProvider === OAuthProvider.GOOGLE) {\n      this.appContext.serviceExecutor\n        .execute(\n          LOGIN_OAUTH_GOOGLE(\n            authorizationCode,\n            this.appContext.oAuthRedirectUrl\n          )\n        )\n        .then(() => {\n          this.onOAuthLoginComplete();\n          this.getUserProfile();\n        });\n    }\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          this.appState.position.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.appState.position.coordinate,\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.appState.address.setPredicteAddresses(addresses);\n          this.appState.position.setLoadingPosition(false);\n          this.appState.address.setSelectedAddress(addresses[0]);\n          return resolve();\n        });\n    });\n  }\n\n  protected executeGetDeals = () => {\n    if (this.appState.address.selectedAddress?.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.appState.address.selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.appState.deal.setDeals(getDealResponse.deals);\n        });\n    }\n  };\n\n  protected async getServerStatus() {\n    return this.appContext.serviceExecutor\n      .execute(GET_SERVER_HEALTH())\n      .then((result) => {\n        this.appState.service.setServiceUp(result.up);\n        return Promise.resolve(result.up);\n      })\n      .catch((ex) => {\n        this.appState.service.setServiceUp(false);\n        return Promise.reject(false);\n      });\n  }\n\n  protected getUserProfile() {\n    this.appContext.serviceExecutor\n      .execute(GET_USER_PROFILE())\n      .then((result) => {\n        return this.appState.user.setUserProfile(result);\n      });\n  }\n}\n","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst AUTHORIZATION_CODE_PARAMETER: string = \"authorizationCode\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\nconst REDIRECT_URL_PARAMETER: string = \"redirectUrl\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_PRESIGNED_URL = \"GET_PRESIGNED_URL\",\n  GET_SERVER_HEALTH = \"GET_SERVER_HEALTH\",\n  GET_USER_PROFILE = \"GET_USER_PROFILE\",\n  LOGIN_OAUTH_GOOGLE = \"LOGIN_OAUTH_GOOGLE\",\n  LOGOUT_OAUTH = \"LOGOUT_OAUTH\",\n  UPDATE_NICKNAME = \"UPDATE_NICKNAME\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\",\n  UPLOAD_IMAGE_SIGNED_URL = \"UPLOAD_IMAGE_SIGNED_URL\",\n  VOTE_CHANGE = \"VOTE_CHANGE\",\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL,\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    externalService: false,\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS,\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS,\n  };\n};\n\nexport const GET_PRESIGNED_URL = (\n  fileType: string,\n  fileName: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/file\",\n    optionalRequestParam: () => `?contentType=${fileType}&fileName=${fileName}`,\n    serviceName: ServiceName.GET_PRESIGNED_URL,\n  };\n};\n\nexport const GET_SERVER_HEALTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/health\",\n  serviceName: ServiceName.GET_SERVER_HEALTH,\n});\n\nexport const GET_USER_PROFILE = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/userProfile\",\n  serviceName: ServiceName.GET_USER_PROFILE,\n});\n\nexport const LOGIN_OAUTH_GOOGLE = (\n  authorizationCode: string,\n  redirectUrl: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/oauth/google\",\n    optionalRequestParam: () =>\n      generateMultipleUrlParameters([\n        AUTHORIZATION_CODE_PARAMETER,\n        authorizationCode,\n        REDIRECT_URL_PARAMETER,\n        redirectUrl,\n      ]),\n    serviceName: ServiceName.LOGIN_OAUTH_GOOGLE,\n  };\n};\n\nexport const LOGOUT_OAUTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"DELETE\",\n  url: \"/oauth\",\n  serviceName: ServiceName.LOGOUT_OAUTH,\n});\n\nexport const UPDATE_NICKNAME = (nickname: string): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"PUT\",\n  optionalRequestParam: () =>\n    generateMultipleUrlParameters([\"nickname\", nickname]),\n  url: \"/userProfile/nickname\",\n  serviceName: ServiceName.UPDATE_NICKNAME,\n});\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE,\n  };\n};\n\nexport const UPLOAD_IMAGE_SIGNED_URL = (\n  image: File,\n  signedUrl: string\n): Endpoint => {\n  return {\n    body: image,\n    customHeader: { \"Content-Type\": image.type },\n    externalService: true,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"PUT\",\n    url: signedUrl,\n    serviceName: ServiceName.UPLOAD_IMAGE_SIGNED_URL,\n  };\n};\n\nexport const VOTE_CHANGE = (dealId: number, liked?: boolean) => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"PUT\",\n    optionalRequestParam: () => {\n      let parameters = [\"dealId\", dealId.toString()];\n      if (liked !== undefined) {\n        parameters.push(\"liked\");\n        parameters.push(liked.toString());\n      }\n      return generateMultipleUrlParameters(parameters);\n    },\n    url: \"/deals\",\n    serviceName: ServiceName.VOTE_CHANGE,\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateMultipleUrlParameters = (keyAndValue: string[]): string => {\n  let parameter: string = \"?\";\n  if (keyAndValue.length % 2 === 0) {\n    for (let i = 0; i < keyAndValue.length; i += 2) {\n      if (i !== 0) {\n        parameter += \"&\";\n      }\n      parameter += `${keyAndValue[i]}=${keyAndValue[i + 1]}`;\n    }\n  }\n  console.debug(\"generateUrlParameter:\", parameter);\n  return parameter;\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  customHeader?: {};\n  errorReturn?: any;\n  externalService: boolean;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport Box, { BoxProps } from \"@material-ui/core/Box\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: (any?: any) => void;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","export enum Feature {\n  CONTACT_SHOW_EMAIL = \"CONTACT_SHOW_EMAIL\",\n  HEADER_MENU = \"HEADER_MENU\",\n  CREATE_DEAL_DRAFT = \"CREATE_DEAL_DRAFT\",\n  LOGIN_GOOGLE_OAUTH = \"LOGIN_GOOGLE_OAUTH\",\n  LOGIN_WECHAT_OAUTH = \"LOGIN_WECHAT_OAUTH\",\n  USER_PROFILE_IN_HEADER = \"USER_PROFILE_IN_HEADER\",\n  USER_PROFILE_IN_HEADER_MENU = \"USER_PROFILE_IN_HEADER_MENU\",\n}\n"],"sourceRoot":""}