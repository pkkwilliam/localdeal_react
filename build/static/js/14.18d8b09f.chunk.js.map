{"version":3,"sources":["resouces/logo_icon_character-min.png","common/ToolTips.tsx","component/header/header.view.tsx","component/header/header.tsx","common/stylesheet.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/imageProcessor.ts","common/applicationComponent.tsx","common/middleware/service.ts","common/view.tsx","common/feature/feature.ts"],"names":["module","exports","ToolTips","Tooltip","disableTouchListener","title","this","props","Button","style","padding","minWidth","children","Component","CreateDealComponent","getLazyComponent","LazyLoadComponent","CreateDeal","Drawer","Modal","HeaderView","CreateDealDrawer","anchor","onClose","onCloseCreateDeal","open","isCreateDealDrawerOpen","CreateNewDealButton","onClick","onClickCreateDeal","styles","createNewDealIcon","ServerErrorModal","serverUp","label","appContext","labels","header","primaryButtonMessage","refresh","onClickPrimaryButton","onClickRefresh","message","serverError","HeaderTextAndLogo","alt","src","logo","width","LocationButton","areaLabel","selectedAddress","area","loading","currentLocation","locationIcon","TopBarSection","HeaderMenu","isFlexDirectionRow","buttonContainer","boxShadow","rootContainer","ApplicationComponent","alignItems","justifyContent","color","styleSchema","primaryColor","icon","greenMedium","backgroundColor","white","borderColor","greyDark","Header","console","debug","setState","executeInit","state","isHamburgerMenuDrawerOpen","useAutoLocation","appState","address","service","serviceUp","ORANGE_GRADIENT","button","borderRadius","black","blueTransparent","green","greyLight","greyTransparent","orange","orangeGradient","orangeTransparent","primaryGradient","primaryColorTransparent","red","redDark","secondaryColor","secondaryColorTransparent","systemError","systemInform","systemSuccess","systemWarn","common","dimension","FILL_ALL_HEIGHT","FILL_ALL_WIDTH","font","fontSize","primaryFont","marginLeft","remind","textField","borderWidth","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","isMultipartFileRequest","hasMock","Promise","resolve","getResponse","serviceName","requestParam","optionalRequestParam","requestUrl","externalService","url","fetch","body","credentials","customHeader","method","mode","then","result","isJsonResponse","get","match","status","json","reject","catch","exception","warn","response","JSON","parse","ex","ServiceName","GET_DEALS","GET_DEALS_RESPONSE","GET_CURRENT_ADDRESS","GET_POSITION_RESPONSE","GET_SERVER_HEALTH","GET_SERVICE_HEALTH","GET_USER_PROFILE","deals","id","attendCount","createdBy","name","imageUrl","oAuthProvider","OAuthProvider","GOOGLE","description","filesUrl","serverIdentifierName","timestamp","likedCount","verifiedLikedUserCount","liked","formattedAddress","country","city","up","Transformer","_lables","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","date","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","isAllowDealRefresh","Feature","CREATE_DEAL_DRAFT","CONTACT_SHOW_EMAIL","HEADER_MENU","LOGIN_GOOGLE_OAUTH","LOGIN_WECHAT_OAUTH","XMADTAPPID","XMADTAPPVERSION","chineseTraditionalLabel","isProd","ImageProcessor","file","imageType","height","quality","Resizer","imageFileResizer","processedImage","image","Image","URL","createObjectURL","onload","size","type","transferToBlob","blob","getImageInfo","imageCompressQuality","imageNameSplit","split","imageCompress","length","originalImage","loadImage","img","toDataURL","guessImageMime","orientation","data","charAt","_appContext","_imageProcessor","executeGetDeals","serviceExecutor","execute","getDealResponse","deal","setDeals","search","window","location","params","URLSearchParams","code","NONE","authorizationCode","history","pushState","document","all","getServerStatus","setCurrentPosition","value","checkOAuthFromUrl","getUserProfile","setCurrentAddress","checkOAuth","LOGIN_OAUTH_GOOGLE","oAuthRedirectUrl","onOAuthLoginComplete","transformer","getCurrentLocation","coordinate","setGeolocation","addresses","setPredicteAddresses","setLoadingPosition","setSelectedAddress","setServiceUp","user","setUserProfile","context","contextType","AppState","CREATE_DEAL","stringify","currentArea","generateCurrentAreaRequestParameter","generateParameter","GET_PRESIGNED_URL","fileType","fileName","redirectUrl","generateMultipleUrlParameters","LOGOUT_OAUTH","UPLOAD_IMAGE_SIGNED_URL","signedUrl","VOTE_CHANGE","dealId","parameters","toString","undefined","push","areaName","keyAndValue","parameter","i","key","View","display","flexDirection"],"mappings":"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","file":"static/js/14.18d8b09f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_icon_character-min.f8d459b6.png\";","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\ninterface Props {\n  children: React.ReactNode;\n  title: string;\n}\n\nexport default class ToolTips extends Component<Props> {\n  render() {\n    return (\n      <Tooltip disableTouchListener title={this.props.title}>\n        <Button style={{ padding: 0, minWidth: 0 }}>\n          {this.props.children}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { Address } from \"../../modal/deal\";\nimport View from \"../../common/view\";\nimport { styleSchema } from \"../../common/stylesheet\";\nimport logo from \"../../resouces/logo_icon_character-min.png\";\nimport { default as AddIcon } from \"@material-ui/icons/Add\";\nimport { default as LocationIcon } from \"@material-ui/icons/Room\";\nimport ToolTips from \"../../common/ToolTips\";\nimport { getLazyComponent } from \"../../lazyLoad/lazyLoad\";\nimport { LazyLoadComponent } from \"../../lazyLoad/lazyLoadComponent\";\n\nexport interface Props {\n  isCreateDealDrawerOpen: boolean;\n  onClickCreateDeal: () => void;\n  onCloseCreateDeal: () => void;\n  onClickRefresh: () => void;\n  selectedAddress?: Address;\n  serverUp: boolean;\n}\n\nconst CreateDealComponent = getLazyComponent(LazyLoadComponent.CreateDeal);\nconst Drawer = getLazyComponent(LazyLoadComponent.Drawer);\nconst Modal = getLazyComponent(LazyLoadComponent.Modal);\n\nexport default class HeaderView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <>\n        <View\n          boxShadow={1}\n          isFlexDirectionRow={true}\n          style={styles.rootContainer}\n        >\n          <this.ServerErrorModal />\n          <this.CreateDealDrawer />\n          <this.HeaderTextAndLogo />\n          <this.TopBarSection />\n        </View>\n      </>\n    );\n  }\n\n  CreateDealDrawer = () => {\n    return (\n      <Drawer\n        anchor={\"top\"}\n        onClose={this.props.onCloseCreateDeal}\n        open={this.props.isCreateDealDrawerOpen}\n      >\n        <CreateDealComponent onClose={this.props.onCloseCreateDeal} />\n      </Drawer>\n    );\n  };\n\n  CreateNewDealButton = () => {\n    return (\n      <AddIcon\n        onClick={this.props.onClickCreateDeal}\n        style={styles.createNewDealIcon}\n      />\n    );\n  };\n\n  ServerErrorModal = () => {\n    if (!this.props.serverUp) {\n      const label = this.appContext.labels.header;\n      return (\n        <Modal\n          primaryButtonMessage={label.refresh}\n          onClickPrimaryButton={this.props.onClickRefresh}\n          message={label.serverError}\n          open={true}\n        ></Modal>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  HeaderTextAndLogo = () => {\n    return (\n      <View>\n        <img alt={\"app-logo\"} src={logo} style={{ width: 100 }} />\n      </View>\n    );\n  };\n\n  LocationButton = () => {\n    const label = this.appContext.labels.header;\n    let areaLabel;\n    if (this.props.selectedAddress && this.props.selectedAddress.area) {\n      areaLabel = this.props.selectedAddress.area;\n    } else {\n      areaLabel = label.loading;\n    }\n    return (\n      <ToolTips title={`${label.currentLocation} ${areaLabel}`}>\n        <LocationIcon style={styles.locationIcon} />\n      </ToolTips>\n    );\n  };\n\n  TopBarSection = () => {\n    const HeaderMenu = getLazyComponent(LazyLoadComponent.HeaderMenu);\n    return (\n      <View isFlexDirectionRow={true} style={styles.buttonContainer}>\n        <this.CreateNewDealButton />\n        <this.LocationButton />\n        <HeaderMenu />\n      </View>\n    );\n  };\n}\n\nconst styles = {\n  buttonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  createNewDealIcon: {\n    color: styleSchema.color.primaryColor,\n    ...styleSchema.icon,\n  },\n  locationIcon: {\n    color: styleSchema.color.greenMedium,\n    ...styleSchema.icon,\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    backgroundColor: styleSchema.color.white,\n    borderColor: styleSchema.color.greyDark,\n    justifyContent: \"space-between\",\n    padding: 15,\n  },\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { HeaderView } from \".\";\n\ninterface State {\n  isCreateDealDrawerOpen: boolean;\n  isHamburgerMenuDrawerOpen: boolean;\n  useAutoLocation: boolean;\n}\n\nexport default class Header extends ApplicationComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      isHamburgerMenuDrawerOpen: false,\n      useAutoLocation: true,\n    };\n  }\n\n  componentDidMount() {\n    this.executeInit();\n  }\n\n  render() {\n    return (\n      <HeaderView\n        isCreateDealDrawerOpen={this.state.isCreateDealDrawerOpen}\n        onClickCreateDeal={this.onClickCreateDeal}\n        onCloseCreateDeal={this.onCloseCreateDeal}\n        onClickRefresh={this.onClickRefresh}\n        selectedAddress={this.appState.address.selectedAddress}\n        serverUp={this.appState.service.serviceUp}\n      />\n    );\n  }\n\n  protected onClickCreateDeal = () => {\n    console.debug(\"onClickCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: true,\n    });\n  };\n\n  protected onCloseCreateDeal = () => {\n    console.debug(\"onCloseCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: false,\n    });\n  };\n\n  protected onClickRefresh = () => {\n    console.debug(\"onClickRefresh\");\n    this.executeInit();\n  };\n}\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_GRADIENT = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"EA4335\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\nconst SYSTEM_ERROR = \"#F44436\";\nconst SYSTEM_INFORM = \"#2196F3\";\nconst SYSTEM_SUCCESS = \"#4CAF51\";\nconst SYSTEM_WARN = \"#FF9800\";\n\n// dimension\nconst FILL_ALL_HEIGHT = \"-webkit-fill-available\";\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst PRIMARY_FONT = \"sans-serif\";\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeGradient: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryGradient: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    systemError: string;\n    systemInform: string;\n    systemSuccess: string;\n    systemWarn: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_HEIGHT: string;\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    primaryFont: string;\n  };\n  icon: any;\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeGradient: ORANGE_GRADIENT,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryGradient: ORANGE_GRADIENT,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    systemError: SYSTEM_ERROR,\n    systemInform: SYSTEM_INFORM,\n    systemSuccess: SYSTEM_SUCCESS,\n    systemWarn: SYSTEM_WARN,\n    white: WHITE\n  },\n  common: {\n    borderColor: GREY_LIGHT\n  },\n  dimension: {\n    FILL_ALL_HEIGHT,\n    FILL_ALL_WIDTH\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    primaryFont: PRIMARY_FONT\n  },\n  icon: {\n    fontSize: 38,\n    marginLeft: 18\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2\n  }\n};\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\nimport { OAuthProvider } from \"../../modal/oAuthProvider\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = endpoint.externalService\n        ? endpoint.url\n        : this.serviceUrl + endpoint.url + requestParam;\n      return (\n        fetch(requestUrl, {\n          body: endpoint.body,\n          credentials: endpoint.externalService ? \"omit\" : \"include\", // this is for CORS sending cookies\n          headers: endpoint.externalService ? endpoint.customHeader : headers,\n          method: endpoint.method,\n          mode: \"cors\",\n        })\n          .then((result) => {\n            const isJsonResponse = result.headers\n              .get(\"content-type\")\n              ?.match(\"application/json\");\n            const status = result.status;\n            if (status < 400) {\n              if (status === 204 || !isJsonResponse) {\n                return Promise.resolve();\n              } else {\n                return Promise.resolve(result.json());\n              }\n            } else if (result.status > 400) {\n              return Promise.reject();\n            }\n          })\n          // .then(result => Promise.resolve(result))\n          .catch((exception) => {\n            console.warn(\n              \"Something is wrong while fetch: \",\n              requestUrl,\n              exception\n            );\n            return Promise.reject(exception);\n          })\n      );\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (endpoint: Endpoint) => {\n    return !endpoint.isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\",\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  console.debug(\"get mock response:\", serviceName);\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    case ServiceName.GET_SERVER_HEALTH:\n      return GET_SERVICE_HEALTH;\n    case ServiceName.GET_USER_PROFILE:\n      return GET_USER_PROFILE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      createdBy: {\n        id: 0,\n        name: \"Mock User\",\n        imageUrl:\n          \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n        oAuthProvider: OAuthProvider.GOOGLE,\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582,\n      likedCount: 1378,\n      verifiedLikedUserCount: 521,\n      liked: false,\n    },\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      description:\n        \"The content of ExpansionPanels is mounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n    {\n      id: 2,\n      address: \"Mock Address 2\",\n      attendCount: 0,\n      description:\n        \"STTSTSDFounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n  ],\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n];\n\nconst GET_SERVICE_HEALTH = {\n  up: true,\n};\n\nconst GET_USER_PROFILE = {\n  id: 0,\n  name: \"Mock User\",\n  imageUrl:\n    \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n  oAuthProvider: \"GOOGLE\",\n};\n","import AppContext from \"./appContext\";\nimport { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  constructor(private readonly _lables: any) {}\n  timeDifferentCalcualtor(timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return this._lables.date.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(timeDifference: number): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${this._lables.date.day}`\n      : this._lables.date.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport chineseTraditionalLabel from \"../content/labels/chinese.traditional.json\";\nimport { Feature } from \"./feature/feature\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer(this.labels);\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get features(): Feature[] {\n    return [\n      Feature.CREATE_DEAL_DRAFT,\n      Feature.CONTACT_SHOW_EMAIL,\n      Feature.HEADER_MENU,\n      Feature.LOGIN_GOOGLE_OAUTH,\n      Feature.LOGIN_WECHAT_OAUTH,\n    ];\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION,\n    };\n  }\n\n  get labels() {\n    return chineseTraditionalLabel;\n  }\n\n  get isMock(): boolean {\n    return false;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get oAuthRedirectUrl(): string {\n    return this.isProd ? \"https://liuda.site\" : \"http://127.0.0.1:3000\";\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import Resizer from \"react-image-file-resizer\";\nimport loadImage from \"blueimp-load-image\";\n\nexport default class ImageProcessor {\n  public imageCompress(\n    file: File,\n    imageType: string,\n    height: number,\n    width: number,\n    quality: number\n  ): Promise<File> {\n    return new Promise((resolve, reject) => {\n      const callBackFunction = (processedImage: File) => {\n        resolve(processedImage);\n      };\n      Resizer.imageFileResizer(\n        file,\n        width / 5,\n        height,\n        imageType,\n        quality,\n        0,\n        callBackFunction,\n        \"blob\"\n      );\n    });\n  }\n\n  public async getImageInfo(\n    file: File\n  ): Promise<{ height: number; size: number; type: string; width: number }> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = URL.createObjectURL(file);\n      image.onload = () => {\n        return resolve({\n          height: image.height,\n          size: file.size,\n          type: file.type,\n          width: image.width,\n        });\n      };\n    });\n  }\n\n  public async imagePrecprocess(file: any): Promise<File> {\n    let blob = await this.transferToBlob(file);\n    const { height, size, type, width } = await this.getImageInfo(blob);\n    console.debug(\"original image size:\", size);\n    const imageCompressQuality = size > 100000 ? 10 : 100;\n    const imageNameSplit = type.split(\"/\");\n    const processedImage = await this.imageCompress(\n      blob,\n      imageNameSplit[imageNameSplit.length - 1],\n      height,\n      width,\n      imageCompressQuality\n    );\n    await this.getImageInfo(processedImage);\n    return Promise.resolve(processedImage);\n  }\n\n  protected transferToBlob(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return fetch(file)\n        .then((originalImage) => originalImage.blob())\n        .then((result) => resolve(result));\n    });\n  }\n\n  public fixRotation(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      loadImage(\n        file,\n        (img: any) => {\n          return resolve(img.toDataURL(this.guessImageMime(file)));\n        },\n        { orientation: true }\n      );\n    });\n  }\n\n  guessImageMime(data: string): string {\n    if (data.charAt(0) === \"/\") {\n      return \"image/jpeg\";\n    } else if (data.charAt(0) === \"R\") {\n      return \"image/gif\";\n    } else if (data.charAt(0) === \"i\") {\n      return \"image/png\";\n    } else {\n      return \"\";\n    }\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\nimport { OAuthProvider } from \"../modal/oAuthProvider\";\nimport ImageProcessor from \"./imageProcessor\";\nimport AppState from \"../common/context/appState\";\nimport AppStateInterface from \"./context/appStateInterface\";\nimport {\n  LOGIN_OAUTH_GOOGLE,\n  GET_CURRENT_ADDRESS,\n  GET_DEALS,\n  GET_SERVER_HEALTH,\n  GET_USER_PROFILE,\n} from \"./middleware/service\";\nimport { Coordinate, GetDealResponse, Address } from \"../modal/deal\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  static contextType = AppState;\n  private readonly _appContext: AppContext = new AppContext();\n  private readonly _imageProcessor: ImageProcessor = new ImageProcessor();\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n\n  get appState(): AppStateInterface {\n    return this.context;\n  }\n\n  get imageProcessor(): ImageProcessor {\n    return this._imageProcessor;\n  }\n\n  public checkOAuth(): {\n    authorizationCode: string;\n    oAuthProvider: OAuthProvider;\n  } {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const state = params.get(\"state\");\n    const code = params.get(\"code\");\n    let oAuthProvider: OAuthProvider = OAuthProvider.NONE;\n    let authorizationCode: string = \"\";\n    if (state === OAuthProvider.GOOGLE) {\n      oAuthProvider = OAuthProvider.GOOGLE;\n      authorizationCode = code ?? \"\";\n    }\n    return {\n      authorizationCode,\n      oAuthProvider,\n    };\n  }\n\n  public onOAuthLoginComplete() {\n    window.history.pushState(null, document.title, \"/\");\n  }\n\n  async executeInit() {\n    let value = await Promise.all([\n      this.getServerStatus().then((result) => result),\n      this.setCurrentPosition(),\n    ]);\n    if (value[0]) {\n      this.checkOAuthFromUrl();\n      this.getUserProfile();\n      await this.setCurrentAddress();\n      await this.executeGetDeals();\n    }\n    return value[0];\n  }\n\n  protected checkOAuthFromUrl() {\n    const { authorizationCode, oAuthProvider } = this.checkOAuth();\n    if (oAuthProvider === OAuthProvider.GOOGLE) {\n      this.appContext.serviceExecutor\n        .execute(\n          LOGIN_OAUTH_GOOGLE(\n            authorizationCode,\n            this.appContext.oAuthRedirectUrl\n          )\n        )\n        .then(() => {\n          this.onOAuthLoginComplete();\n          this.getUserProfile();\n        });\n    }\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          this.appState.position.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.appState.position.coordinate,\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.appState.address.setPredicteAddresses(addresses);\n          this.appState.position.setLoadingPosition(false);\n          this.appState.address.setSelectedAddress(addresses[0]);\n          return resolve();\n        });\n    });\n  }\n\n  protected executeGetDeals = () => {\n    if (this.appState.address.selectedAddress?.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.appState.address.selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.appState.deal.setDeals(getDealResponse.deals);\n        });\n    }\n  };\n\n  protected async getServerStatus() {\n    return this.appContext.serviceExecutor\n      .execute(GET_SERVER_HEALTH())\n      .then((result) => {\n        this.appState.service.setServiceUp(result.up);\n        return Promise.resolve(result.up);\n      })\n      .catch((ex) => {\n        this.appState.service.setServiceUp(false);\n        return Promise.reject(false);\n      });\n  }\n\n  protected getUserProfile() {\n    this.appContext.serviceExecutor\n      .execute(GET_USER_PROFILE())\n      .then((result) => {\n        return this.appState.user.setUserProfile(result);\n      });\n  }\n}\n","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst AUTHORIZATION_CODE_PARAMETER: string = \"authorizationCode\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\nconst REDIRECT_URL_PARAMETER: string = \"redirectUrl\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_PRESIGNED_URL = \"GET_PRESIGNED_URL\",\n  GET_SERVER_HEALTH = \"GET_SERVER_HEALTH\",\n  GET_USER_PROFILE = \"GET_USER_PROFILE\",\n  LOGIN_OAUTH_GOOGLE = \"LOGIN_OAUTH_GOOGLE\",\n  LOGOUT_OAUTH = \"LOGOUT_OAUTH\",\n  TEST = \"TEST\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\",\n  UPLOAD_IMAGE_SIGNED_URL = \"UPLOAD_IMAGE_SIGNED_URL\",\n  VOTE_CHANGE = \"VOTE_CHANGE\",\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL,\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    externalService: false,\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS,\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS,\n  };\n};\n\nexport const GET_PRESIGNED_URL = (\n  fileType: string,\n  fileName: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/file\",\n    optionalRequestParam: () => `?contentType=${fileType}&fileName=${fileName}`,\n    serviceName: ServiceName.GET_PRESIGNED_URL,\n  };\n};\n\nexport const GET_SERVER_HEALTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/health\",\n  serviceName: ServiceName.GET_SERVER_HEALTH,\n});\n\nexport const GET_USER_PROFILE = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/userProfile\",\n  serviceName: ServiceName.GET_USER_PROFILE,\n});\n\nexport const LOGIN_OAUTH_GOOGLE = (\n  authorizationCode: string,\n  redirectUrl: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/oauth/google\",\n    optionalRequestParam: () =>\n      generateMultipleUrlParameters([\n        AUTHORIZATION_CODE_PARAMETER,\n        authorizationCode,\n        REDIRECT_URL_PARAMETER,\n        redirectUrl,\n      ]),\n    serviceName: ServiceName.LOGIN_OAUTH_GOOGLE,\n  };\n};\n\nexport const LOGOUT_OAUTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"DELETE\",\n  url: \"/oauth\",\n  serviceName: ServiceName.LOGOUT_OAUTH,\n});\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE,\n  };\n};\n\nexport const UPLOAD_IMAGE_SIGNED_URL = (\n  image: File,\n  signedUrl: string\n): Endpoint => {\n  return {\n    body: image,\n    customHeader: { \"Content-Type\": image.type },\n    externalService: true,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"PUT\",\n    url: signedUrl,\n    serviceName: ServiceName.UPLOAD_IMAGE_SIGNED_URL,\n  };\n};\n\nexport const VOTE_CHANGE = (dealId: number, liked?: boolean) => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"PUT\",\n    optionalRequestParam: () => {\n      let parameters = [\"dealId\", dealId.toString()];\n      if (liked !== undefined) {\n        parameters.push(\"liked\");\n        parameters.push(liked.toString());\n      }\n      return generateMultipleUrlParameters(parameters);\n    },\n    url: \"/deals\",\n    serviceName: ServiceName.VOTE_CHANGE,\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateMultipleUrlParameters = (keyAndValue: string[]): string => {\n  let parameter: string = \"?\";\n  if (keyAndValue.length % 2 === 0) {\n    for (let i = 0; i < keyAndValue.length; i += 2) {\n      if (i !== 0) {\n        parameter += \"&\";\n      }\n      parameter += `${keyAndValue[i]}=${keyAndValue[i + 1]}`;\n    }\n  }\n  console.debug(\"generateUrlParameter:\", parameter);\n  return parameter;\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  customHeader?: {};\n  errorReturn?: any;\n  externalService: boolean;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport Box, { BoxProps } from \"@material-ui/core/Box\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: (any?: any) => void;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","export enum Feature {\n  CONTACT_SHOW_EMAIL = \"CONTACT_SHOW_EMAIL\",\n  HEADER_MENU = \"HEADER_MENU\",\n  CREATE_DEAL_DRAFT = \"CREATE_DEAL_DRAFT\",\n  LOGIN_GOOGLE_OAUTH = \"LOGIN_GOOGLE_OAUTH\",\n  LOGIN_WECHAT_OAUTH = \"LOGIN_WECHAT_OAUTH\",\n  USER_PROFILE_IN_HEADER = \"USER_PROFILE_IN_HEADER\",\n  USER_PROFILE_IN_HEADER_MENU = \"USER_PROFILE_IN_HEADER_MENU\",\n}\n"],"sourceRoot":""}