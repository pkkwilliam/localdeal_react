{"version":3,"sources":["common/textButton.tsx","common/modal.tsx","common/stylesheet.ts","common/view.tsx","common/h1.tsx"],"names":["TextButton","additionalStyle","this","props","underline","styles","color","buttonType","styleSchema","primaryColor","secondaryColor","onClick","style","buttonStyle","variant","message","Component","marginBottom","marginTop","paddingBottom","paddingTop","textDecoration","Modal","ButtonSelection","primaryButtonMessage","secondaryButtonMessage","onClickPrimaryButton","rootContainer","contentContainer","messageTextContainer","borderTop","isFlexDirectionRow","buttonsContainer","alignItems","borderColor","greyTransparent","justifyContent","marginLeft","marginRight","width","dimension","FILL_ALL_WIDTH","button","padding","borderRadius","backgroundColor","white","outline","display","ORANGE_GRADIENT","black","blueTransparent","blueTransparentSemi","green","greenMedium","greyDark","greyLight","orange","orangeGradient","orangeTransparent","primaryGradient","primaryColorTransparent","red","redDark","secondaryColorTransparent","systemError","systemInform","systemSuccess","systemWarn","common","FILL_ALL_HEIGHT","font","fontSize","primaryFont","remind","textField","borderWidth","View","flexDirection","children","ApplicationComponent","H1","getColor","getDefaultStyle","getDefaultColor","defaultStyle","getStyle","text","margin","fontFamily","fontWeight"],"mappings":"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","file":"static/js/15.1a96c619.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport { styleSchema } from \"./stylesheet\";\n\ninterface Props extends ButtonProps {\n  buttonType: \"primary\" | \"secondary\";\n  onClick: () => void;\n  message: string;\n  underline?: boolean;\n}\n\nexport default class TextButton extends Component<Props> {\n  render() {\n    const additionalStyle = this.props.underline ? styles.underline : \"\";\n    const color = {\n      color:\n        this.props.buttonType === \"primary\"\n          ? styleSchema.color.primaryColor\n          : styleSchema.color.secondaryColor,\n    };\n\n    return (\n      <Button\n        onClick={this.props.onClick}\n        style={{ ...color, ...styles.buttonStyle, ...additionalStyle }}\n        variant=\"text\"\n        {...this.props}\n      >\n        {this.props.message}\n      </Button>\n    );\n  }\n}\n\nconst styles = {\n  buttonStyle: {\n    marginBottom: 5,\n    marginTop: 5,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  underline: {\n    textDecoration: \"underline\",\n  },\n};\n","import React, { Component } from \"react\";\nimport {\n  default as MaterialUIModal,\n  ModalProps,\n} from \"@material-ui/core/Modal\";\nimport View from \"./view\";\nimport { styleSchema } from \"./stylesheet\";\nimport H1 from \"./h1\";\nimport TextButton from \"./textButton\";\n\ninterface Props extends ModalProps {\n  onClickPrimaryButton?: () => void;\n  onClickSecondaryButton?: () => void;\n  primaryButtonMessage: string;\n  message: string;\n  secondaryButtonMessage?: string;\n}\n\nexport default class Modal extends Component<Props> {\n  render() {\n    const props = this.props;\n    return (\n      <MaterialUIModal style={styles.rootContainer} {...this.props}>\n        <View style={styles.contentContainer}>\n          <View style={styles.messageTextContainer}>\n            <H1>{props.message}</H1>\n          </View>\n          <View\n            borderTop={1}\n            isFlexDirectionRow\n            style={styles.buttonsContainer}\n          >\n            <this.ButtonSelection />\n          </View>\n        </View>\n      </MaterialUIModal>\n    );\n  }\n\n  ButtonSelection = () => {\n    const props = this.props;\n    if (props.primaryButtonMessage && props.secondaryButtonMessage) {\n      return <></>;\n    } else if (props.onClickPrimaryButton && props.primaryButtonMessage) {\n      return (\n        <TextButton\n          buttonType=\"primary\"\n          onClick={props.onClickPrimaryButton}\n          message={props.primaryButtonMessage}\n        />\n      );\n    } else {\n      return null;\n    }\n  };\n}\n\nconst styles = {\n  buttonsContainer: {\n    alignItems: \"center\",\n    borderColor: styleSchema.color.greyTransparent,\n    justifyContent: \"center\",\n    marginLeft: 10,\n    marginRight: 10,\n    width: styleSchema.dimension.FILL_ALL_WIDTH,\n  },\n  button: {\n    color: styleSchema.color.primaryColor,\n    padding: 10,\n    width: \"inherit\",\n  },\n  contentContainer: {\n    alignItems: \"center\",\n    borderRadius: 10,\n    backgroundColor: styleSchema.color.white,\n    justifyContent: \"center\",\n    outline: \"none\",\n    width: \"inherit\",\n  },\n  messageTextContainer: {\n    alignItems: \"center\",\n    padding: 35,\n    paddingBottom: 20,\n    paddingTop: 20,\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n};\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst BLUE_TRANSPARENT_SEMI = \"rgba(16, 137, 254,1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_GRADIENT = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"EA4335\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\nconst SYSTEM_ERROR = \"#F44436\";\nconst SYSTEM_INFORM = \"#2196F3\";\nconst SYSTEM_SUCCESS = \"#4CAF51\";\nconst SYSTEM_WARN = \"#FF9800\";\n\n// dimension\nconst FILL_ALL_HEIGHT = \"-webkit-fill-available\";\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst PRIMARY_FONT = \"sans-serif\";\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    blueTransparentSemi: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeGradient: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryGradient: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    systemError: string;\n    systemInform: string;\n    systemSuccess: string;\n    systemWarn: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_HEIGHT: string;\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    primaryFont: string;\n  };\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius,\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    blueTransparentSemi: BLUE_TRANSPARENT_SEMI,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeGradient: ORANGE_GRADIENT,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryGradient: ORANGE_GRADIENT,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    systemError: SYSTEM_ERROR,\n    systemInform: SYSTEM_INFORM,\n    systemSuccess: SYSTEM_SUCCESS,\n    systemWarn: SYSTEM_WARN,\n    white: WHITE,\n  },\n  common: {\n    borderColor: GREY_LIGHT,\n  },\n  dimension: {\n    FILL_ALL_HEIGHT,\n    FILL_ALL_WIDTH,\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    primaryFont: PRIMARY_FONT,\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE,\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2,\n  },\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport Box, { BoxProps } from \"@material-ui/core/Box\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: (any?: any) => void;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport interface Props {\n  color?: \"primary\" | \"secondary\" | \"black\" | \"white\";\n  style?: any;\n}\n\nexport default class H1<ChildProps extends Props = Props> extends Component<\n  ChildProps\n> {\n  render() {\n    return (\n      <span\n        style={{\n          color: this.getColor(),\n          ...this.getDefaultStyle(),\n          ...this.props.style,\n        }}\n      >\n        {this.props.children}\n      </span>\n    );\n  }\n\n  protected getColor(): string {\n    switch (this.props.color) {\n      case \"primary\":\n        return styles.primaryColor.color;\n      case \"secondary\":\n        return styles.secondaryColor.color;\n      case \"black\":\n        return styles.black.color;\n      case \"white\":\n        return styles.white.color;\n      default:\n        return this.getDefaultColor();\n    }\n  }\n\n  protected getDefaultColor() {\n    return styles.black.color;\n  }\n\n  protected getDefaultStyle() {\n    return { ...styles.defaultStyle, ...this.getStyle() };\n  }\n\n  protected getStyle(): any {\n    return styles.text;\n  }\n}\n\nconst styles = {\n  defaultStyle: {\n    margin: 0,\n  },\n  text: {\n    fontFamily: styleSchema.font.primaryFont,\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  primaryColor: {\n    color: styleSchema.color.primaryColor,\n  },\n  secondaryColor: {\n    color: styleSchema.color.secondaryColor,\n  },\n  black: {\n    color: styleSchema.color.black,\n  },\n  white: {\n    color: styleSchema.color.white,\n  },\n};\n"],"sourceRoot":""}