{"version":3,"sources":["resouces/logo_icon_character-min.png","common/middleware/service.ts","common/redux/action.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/applicationComponent.tsx","common/addressDisplay.tsx","common/stylesheet.ts","common/cardBottomVote.tsx","common/h4.tsx","common/h5.tsx","common/localDealCard.tsx","common/localDealTextField.tsx","common/richTextEditor.tsx","common/twinButton.tsx","common/view.tsx","component/landingPage/landingPage.view.tsx","component/landingPage/landingPage.tsx","common/redux/reducers.ts","common/redux/store.ts","component/createDealLandingPage/createDealLandingPage.view.tsx","component/createDealLandingPage/createDealLandingPage.tsx","component/addressPrediction/addressPrediction.tsx","component/header/header.view.tsx","component/header/header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ServiceName","ReduxActopnTypes","CREATE_DEAL","deal","body","JSON","stringify","hasMock","isMultipartFileRequest","method","url","serviceName","GET_DEALS","address","optionalRequestParam","generateParameter","area","UPLOAD_IMAGE","image","generateCurrentAreaRequestParameter","currentArea","console","debug","areaName","coordinate","latitude","longitude","warn","key","value","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","this","Promise","resolve","getResponse","requestParam","requestUrl","fetch","mode","then","result","status","json","catch","exception","reject","response","parse","ex","GET_DEALS_RESPONSE","GET_CURRENT_ADDRESS","GET_POSITION_RESPONSE","deals","id","street1","street2","city","state","zipCode","country","description","title","timestamp","formattedAddress","Transformer","_lables","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","date","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","labels","isAllowDealRefresh","XMADTAPPID","XMADTAPPVERSION","chineseTraditionalLabel","isProd","ApplicationComponent","_appContext","Component","AddressDisplay","isFlexDirectionRow","generateAddressWithSpace","props","input","styleSchema","button","borderRadius","color","black","primaryColor","secondaryColor","lightGrey","white","dimension","FILL_ALL_WIDTH","font","fontSize","remind","textField","borderColor","borderWidth","CardBottomVote","ThumbUp","style","ThumbDown","H4","styles","textStyle","children","margin","H5","text","LocalDealCard","contentRef","BottomToolBar","log","bottonToolBar","alignSelf","ExpandSign","ExpandLessSign","ExpandLess","onClick","onClickedContent","ExpandMoreSign","ExpandMore","contentNeedCollapse","isCollapsed","ContentBody","content","contentCollapsedStyle","contentOpenedStyle","contentContainer","width","ref","setState","clientHeight","borderBottom","rootContainer","contents","justifyContent","height","overflow","backgroundColor","padding","textFieldStyle","marginLeft","marginRight","LocalDealTextField","onBlurFunction","onBlur","onFocusFunction","onFocus","TextField","InputProps","classes","notchedOutline","label","onChange","target","defaultValue","variant","withStyles","textFieldStyles","overrideStyles","richTextEditorOptions","background","header","list","RichTextEditor","quillRef","imageHandler","a","async","document","createElement","setAttribute","click","onchange","files","file","range","getSelection","getImageInfo","size","type","imageResize","processedImage","formData","FormData","append","appContext","serviceExecutor","execute","imageUrl","insertEmbed","index","setSelection","getEditor","modules","getModules","onChangeValue","toolbar","container","handlers","Image","URL","createObjectURL","src","info","imageType","quality","Resizer","imageFileResizer","TwinButton","onClickPrimaryButton","onClickSecondaryButton","primaryButtonLabel","secondaryButtonLabel","Button","alignItem","View","Box","display","flexDirection","alignItems","LandingPageView","BodySection","DealsSection","dealsCard","map","generateCardContent","onClickCard","downVoteCount","vote","downVote","onClickDownVote","onClickUpVote","upVoteCount","upVote","boxShadow","length","onClickDealSection","dealSectionContainer","NoDealInArea","noDealInAreaContainer","landingPage","noDeal","SearchButton","showSearchButton","onClickSearch","searchButton","TextFieldArea","textFieldValue","onBlurTextField","onChangeSearchTextField","onFocusTextField","category","discussions","timeAvailable","cardContainer","transformer","timeDifferentCalcualtor","detailSectionContainer","dangerouslySetInnerHTML","__html","circularProgress","createNewButton","textAlign","locationButtonContainer","searchMethodLabel","paddingBottom","paddingTop","manual","topBarContainer","setDeals","getDealsResponse","dispatch","SET_DEALS","payload","LandingPage","onClickedCard","onClickedDealSection","isCreateDealDrawerOpen","useAutoLocation","setCurrentPosition","setCurrentAddress","getCurrentLocation","setGeolocation","addresses","setAddressPrediction","setLoadingPosition","inputDeals","sort","deal1","deal2","sortDeals","selectedAddress","connect","addressesPrediction","SET_ADDRESS_PREDICTION","SET_GEOLOCATION","isLoadingPosition","disptach","SET_LOADING_POSITION","initialState","setPosition","setSelectedAddress","middleWare","thunk","store","createStore","action","SET_SELECTED_ADDRESS","applyMiddleware","CreateDealLandingPageView","AddressSection","useAutoPosition","AddressAutoPositionDisplay","AddressTextField","currentAddress","ButtonSection","createDealPage","onClickSubmit","onClickClose","create","cancel","DescriptionTextField","onChangeRichTextValue","HeaderSection","headerContainer","headerText","close","HourOfOperationSection","TitleTextField","onChangeTitleTextField","textFieldTitle","marginTop","CreateDealLandingPage","richTextValue","generateDeal","getDealResponse","AddressPrediction","onSelectAddress","addressPrediction","setDefaultSelectedAddress","isPositionLoading","HeaderView","CreateDealDrawer","Drawer","anchor","open","onClose","onCloseCreateDeal","CreateNewDealButton","onClickCreateDeal","createDealButton","HeaderTextAndLogo","alt","logo","LocationButton","showCircularProgressor","disabled","onClickLocationButton","geolocationProvider","CircularProgress","TopBarSection","buttonContainer","Header","App","className","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64e0d0fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_icon_character-min.f8d459b6.png\";","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\"\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS\n  };\n};\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  errorReturn?: any;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","import { Coordinate, GetDealResponse, Address } from \"../../modal/deal\";\nimport { type } from \"os\";\n\nexport enum ReduxActopnTypes {\n  SET_ADDRESS_PREDICTION = \"SET_ADDRESS_PREDICTION\",\n  SET_DEALS = \"SET_DEAL\",\n  SET_LOADING_POSITION = \"SET_LOADING_POSITION\",\n  SET_GEOLOCATION = \"SET_GEOLOCATION\",\n  SET_SELECTED_ADDRESS = \"SET_SELECTED_ADDRESS\"\n}\n\nexport const setAddressPrediction = (addresses: Address[]) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_ADDRESS_PREDICTION,\n      payload: addresses\n    });\n  };\n};\n\nexport const setGeolocation = (coordinate: Coordinate) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_GEOLOCATION,\n      payload: coordinate\n    });\n  };\n};\n\nexport const setLoadingPosition = (isLoadingPosition: boolean) => {\n  return function(disptach: any) {\n    disptach({\n      type: ReduxActopnTypes.SET_LOADING_POSITION,\n      payload: isLoadingPosition\n    });\n  };\n};\n\nexport const setDeals = (getDealsResponse: GetDealResponse) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_DEALS,\n      payload: getDealsResponse\n    });\n  };\n};\n\nexport const setSelectedAddress = (address: Address) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_SELECTED_ADDRESS,\n      payload: address\n    });\n  };\n};\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint.isMultipartFileRequest);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = this.serviceUrl + endpoint.url + requestParam;\n      return fetch(requestUrl, {\n        body: endpoint.body,\n        headers,\n        method: endpoint.method,\n        mode: \"cors\"\n      })\n        .then(result => {\n          if (result.status === 204) {\n            return Promise.resolve();\n          } else {\n            return result.json();\n          }\n        })\n        .then(result => Promise.resolve(result))\n        .catch(exception => {\n          console.warn(\n            \"Something is wrong while fetch: \",\n            requestUrl,\n            exception\n          );\n          return Promise.reject(exception);\n        });\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (isMultipartFileRequest: boolean) => {\n    return !isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\"\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582\n    },\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul>',\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332\n    },\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul>',\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1577872407269\n    }\n  ]\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門馬交石巷信昌工業大廈\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  }\n];\n","import AppContext from \"./appContext\";\nimport { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  constructor(private readonly _lables: any) {}\n  timeDifferentCalcualtor(timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return this._lables.date.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(timeDifference: number): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${this._lables.date.day}`\n      : this._lables.date.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport chineseTraditionalLabel from \"../content/labels/chinese.traditional.json\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer(this.labels);\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION\n    };\n  }\n\n  get labels() {\n    return chineseTraditionalLabel;\n  }\n\n  get isMock(): boolean {\n    return false;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\n// import { connect } from \"react-redux\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  private readonly _appContext: AppContext = new AppContext();\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Address } from \"../modal/deal\";\nimport { H5, View } from \".\";\n\nexport interface Props {\n  address: Address;\n}\n\nexport default class AddressDisplay extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View isFlexDirectionRow={true}>\n        <H5>{this.generateAddressWithSpace(this.props.address)}</H5>\n      </View>\n    );\n  }\n\n  protected generateAddressWithSpace(address: Address): string {\n    let { street1, street2, city, state, zipCode, country } = address;\n    // return `\n    // ${this.removeNotValidAddress(street1 || \"\")}\n    // ${this.removeNotValidAddress(street2 || \"\")}\n    // ${this.removeNotValidAddress(city || \"\")}\n    // ${this.removeNotValidAddress(state || \"\")}\n    // ${this.removeNotValidAddress(zipCode || \"\")}\n    // ${this.removeNotValidAddress(country)}`;\n    return address.formattedAddress || \"\";\n  }\n\n  protected removeNotValidAddress(input: string): string {\n    return input ? `${input} ` : \"\";\n  }\n}\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#78C5EF\";\nconst DARK_GREY = \"#7D7D7D\";\nconst GREEN = \"#5CC928\";\nconst LIGHT_GREY = \"#f6f6f6\";\nconst WHITE = \"#FFFFFF\";\n\n// dimension\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    lightGrey: string;\n    primaryColor: string;\n    secondaryColor: string;\n    white: string;\n  };\n  dimension: {\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    white: string;\n  };\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius\n  },\n  color: {\n    black: BLACK,\n    primaryColor: BLUE,\n    secondaryColor: DARK_GREY,\n    lightGrey: LIGHT_GREY,\n    white: WHITE\n  },\n  dimension: {\n    FILL_ALL_WIDTH\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    white: WHITE\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2\n  }\n};\n","import ApplicationComponent from \"./applicationComponent\";\nimport React from \"react\";\nimport { View } from \".\";\nimport { ThumbDown, ThumbUp } from \"@material-ui/icons\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport interface Props {\n  downVoteCount: number;\n  onClickDownVote: () => void;\n  onClickUpVote: () => void;\n  upVoteCount: number;\n}\n\nexport interface State {}\n\nexport default class CardBottomVote extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View isFlexDirectionRow>\n        <ThumbUp style={{ color: styleSchema.color.primaryColor }} />\n        <ThumbDown style={{ color: styleSchema.color.primaryColor }} />\n      </View>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\ninterface Props {\n  style?: any;\n}\n\nexport default class H4 extends Component<Props> {\n  render() {\n    return (\n      <h4 style={this.props.style ? this.props.style : styles.textStyle}>\n        {this.props.children}\n      </h4>\n    );\n  }\n}\n\nconst styles = {\n  textStyle: {\n    margin: 0\n  }\n};\n","import React, { Component } from \"react\";\nimport { styleSchema } from \"./\";\nimport color from \"@material-ui/core/colors/amber\";\n\ninterface Props {\n  color?: string;\n}\n\nexport default class H5 extends Component<Props> {\n  render() {\n    let color = {\n      color: this.props.color\n        ? this.props.color\n        : styleSchema.color.secondaryColor\n    };\n    return <h5 style={{ ...styles.text, ...color }}>{this.props.children}</h5>;\n  }\n}\n\nconst styles = {\n  text: {\n    margin: 0\n  }\n};\n","import React, { Component, ReactNode } from \"react\";\nimport { ExpandMore, ExpandLess } from \"@material-ui/icons\";\nimport { View } from \".\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport interface Props {\n  children?: React.ReactNode;\n  collapsedHeight?: number;\n  contents: React.ReactNode;\n  onClick: (any?: any) => void;\n  title?: string;\n}\n\nexport interface State {\n  contentNeedCollapse: boolean;\n  isCollapsed: boolean;\n}\n\nexport default class LocalDealCard extends Component<Props, State> {\n  private contentRef: HTMLDivElement | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      contentNeedCollapse: true,\n      isCollapsed: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      contentNeedCollapse: (this.contentRef?.clientHeight ?? 0) > 180\n    });\n    console.log(this.state.contentNeedCollapse);\n  }\n\n  render() {\n    return (\n      <View borderBottom={1} style={styles.rootContainer}>\n        <this.ContentBody\n          content={this.props.contents}\n          contentNeedCollapse={this.state.contentNeedCollapse}\n          isCollapsed={this.state.isCollapsed}\n        />\n        <this.BottomToolBar />\n      </View>\n    );\n  }\n\n  protected BottomToolBar = () => {\n    const expandSign: React.ReactNode = () => {};\n    console.log(expandSign);\n    return (\n      <View isFlexDirectionRow style={styles.bottonToolBar}>\n        <View style={{ alignSelf: \"flex-start\" }}>{this.props.children}</View>\n        <View style={{ alignSelf: \"flex-end\" }}>\n          <this.ExpandSign />\n        </View>\n      </View>\n    );\n  };\n\n  protected ExpandLessSign = () => {\n    return (\n      <ExpandLess\n        onClick={this.onClickedContent}\n        style={{ color: styleSchema.color.secondaryColor }}\n      />\n    );\n  };\n\n  protected ExpandMoreSign = () => {\n    return (\n      <ExpandMore\n        onClick={this.onClickedContent}\n        style={{ color: styleSchema.color.secondaryColor }}\n      />\n    );\n  };\n\n  protected ExpandSign = () => {\n    if (this.state.contentNeedCollapse) {\n      return this.state.isCollapsed ? (\n        <this.ExpandMoreSign />\n      ) : (\n        <this.ExpandLessSign />\n      );\n    } else {\n      return null;\n    }\n  };\n\n  protected ContentBody = ({\n    content,\n    contentNeedCollapse,\n    isCollapsed\n  }: {\n    content: ReactNode;\n    contentNeedCollapse: boolean;\n    isCollapsed: boolean;\n  }) => {\n    const style =\n      contentNeedCollapse && isCollapsed\n        ? styles.contentCollapsedStyle\n        : styles.contentOpenedStyle;\n    console.log(\"content body: \", contentNeedCollapse, isCollapsed);\n    return (\n      <View\n        style={{ ...styles.contentContainer, ...style }}\n        onClick={this.onClickedContent}\n      >\n        <div\n          // TODO not sure if this is correct\n          style={{ width: \"inherit\" }}\n          ref={contentRef => {\n            this.contentRef = contentRef;\n          }}\n        >\n          {content}\n        </div>\n      </View>\n    );\n  };\n\n  protected onClickedContent = () => {\n    this.setState({\n      isCollapsed: !this.state.isCollapsed\n    });\n  };\n}\n\nconst styles = {\n  bottonToolBar: {\n    justifyContent: \"space-between\",\n    width: \"inherit\"\n  },\n  contentCollapsedStyle: {\n    height: \"150px\",\n    overflow: \"hidden\"\n  },\n  contentContainer: {\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  },\n  contentOpenedStyle: {},\n  rootContainer: {\n    backgroundColor: styleSchema.color.white,\n    borderColor: styleSchema.color.lightGrey,\n    padding: 20,\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styleSchema } from \"./\";\nimport { StyleSheet } from \"./stylesheet\";\n\nconst overrideStyles = (style: StyleSheet) => {\n  let textFieldStyles = style.textField;\n  return {\n    notchedOutline: {\n      borderColor: textFieldStyles.borderColor,\n      borderRadius: textFieldStyles.borderRadius,\n      borderWidth: textFieldStyles.borderWidth\n    }\n  };\n};\n\nconst styles = {\n  textFieldStyle: {\n    height: \"100%\",\n    marginLeft: 10,\n    marginRight: 10,\n    width: \"80%\"\n  }\n};\n\nexport interface Props {\n  classes?: any;\n  children?: React.ReactNode;\n  defaultValue?: string;\n  onBlur?: () => void;\n  onChange: (textInput: any) => void;\n  onFocus?: () => void;\n  text: string;\n}\n\nclass LocalDealTextField extends ApplicationComponent<Props> {\n  render() {\n    let onBlurFunction = this.props.onBlur ? this.props.onBlur : () => {};\n    let onFocusFunction = this.props.onFocus ? this.props.onFocus : () => {};\n    return (\n      <TextField\n        InputProps={{\n          classes: {\n            notchedOutline: this.props.classes.notchedOutline\n          }\n        }}\n        label={this.props.text}\n        onBlur={() => onBlurFunction()}\n        onChange={text => this.props.onChange(text.target.value)}\n        onFocus={() => onFocusFunction()}\n        style={styles.textFieldStyle}\n        defaultValue={this.props.defaultValue}\n        variant=\"outlined\"\n      >\n        {this.props.children}\n      </TextField>\n    );\n  }\n}\n\nexport default withStyles(overrideStyles(styleSchema))(LocalDealTextField);\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { UPLOAD_IMAGE } from \"./middleware/service\";\nimport Resizer from \"react-image-file-resizer\";\n\nconst richTextEditorOptions = [\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    { header: [1, 2, 3, 4, 5, 6, false] }\n    // { align: [] }\n  ], // toggled buttons\n  //   [\"blockquote\", \"code-block\"],\n  [\"image\"],\n  [\"link\"],\n  //   [{ header: 1 }, { header: 2 }], // custom button values\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  //   [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n  //   [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n  //   [{ direction: \"rtl\" }], // text direction\n\n  //   [{ size: [\"small\", \"medium\", \"large\", \"huge\"] }], // custom dropdown\n  //   [{ font: [] }],\n  [\"clean\"] // remove formatting button\n];\n\n// const modules = {\n//   toolbar\n// };\n\nexport interface Props {\n  onChangeValue: (value: string) => void;\n}\n\nexport default class RichTextEditor extends ApplicationComponent<Props> {\n  private quillRef: any;\n\n  render() {\n    return (\n      <ReactQuill\n        ref={ref => (this.quillRef = ref?.getEditor())}\n        modules={this.getModules()}\n        onChange={value => this.props.onChangeValue(value)}\n      ></ReactQuill>\n    );\n  }\n\n  getModules() {\n    return {\n      toolbar: {\n        container: richTextEditorOptions,\n        handlers: {\n          image: this.imageHandler\n        }\n      }\n    };\n  }\n\n  // this.quillRef.format() // change the current format, it will not affect anything that is already in the content area\n  // this.quillRef.formatLine() // format the whole line, usually it will affect the whole globally.\n  // this.quillRef.formatText() // this work for image as well!!! give the style for the current dom\n\n  async getImageInfo(file: File) {\n    const image = new Image();\n    image.src = await URL.createObjectURL(file);\n    console.info(\n      `input image type:${file.type} size:${file.size} height:${image.height} width:${image.width}`\n    );\n    return {\n      height: image.height,\n      size: file.size,\n      type: file.type,\n      width: image.width\n    };\n  }\n\n  async imageResize(\n    file: File,\n    imageType: string,\n    height: number,\n    width: number,\n    quality: number\n  ) {\n    let image = file;\n    await Resizer.imageFileResizer(\n      file,\n      height,\n      width,\n      imageType,\n      quality,\n      0,\n      (processedImage: File) => {\n        image = processedImage;\n      },\n      \"blob\"\n    );\n    return image;\n  }\n\n  imageHandler = async () => {\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"accept\", \"image/*\");\n    input.click();\n    input.onchange = async () => {\n      if (input.files) {\n        const file = input.files[0];\n\n        // TODO show spinner to indicate that the image is being upload\n\n        // save current cursor state\n        const range = this.quillRef.getSelection(true);\n\n        // get input image detail info\n        const { height, size, type, width } = await this.getImageInfo(file);\n\n        // resize image according to height, width and quality\n        const processedImage = await this.imageResize(file, type, 300, 300, 50);\n\n        // create a FormData object inorder to submit it as Multipart file for REST controller\n        const formData: FormData = new FormData();\n        formData.append(\"image\", processedImage, \"image\");\n\n        // upload image\n        this.appContext.serviceExecutor\n          .execute(UPLOAD_IMAGE(formData))\n          .then(response => {\n            const imageUrl: string = response.url;\n            this.quillRef.insertEmbed(range.index, \"image\", imageUrl);\n            this.quillRef.setSelection(range.index + 1);\n            this.quillRef.setSelection();\n          });\n\n        // Resizer.imageFileResizer(\n        //   file,\n        //   300,\n        //   300,\n        //   \"PNG\",\n        //   50,\n        //   0,\n        //   (uri: any) => {\n        //     // const buffer = Buffer.from(uri, \"base64\");\n        //     const formData = new FormData();\n        //     formData.append(\"image\", file, \"image\");\n        //     this.quillRef.setSelection(range.index + 2);\n        //     // this.quillRef.deleteText(range.index, 1);\n        //     this.quillRef.insertEmbed(range.index, \"image\", file);\n        //     this.quillRef.setSelection(range.index + 1);\n        //     // this.appContext.serviceExecutor\n        //     //   .execute(UPLOAD_IMAGE(formData))\n        //     //   .then(result => {\n        //     //     let imageUrl: string = result.url;\n        //     //     this.quillRef.deleteText(range.index, 1);\n        //     //     this.quillRef.insertEmbed(range.index, \"image\", imageUrl);\n        //     //     this.quillRef.setSelection(range.index + 1);\n        //     //   });\n        //   },\n        //   \"blob\"\n        // );\n\n        // // need to replace this with in app progressor!!!\n        // this.quillRef.formatLine(range.index, 1, \"align\", \"center\");\n        // this.quillRef.formatText(range.index, 1, {\n        //   align: \"center\"\n        // });\n        // this.quillRef.setSelection(range.index + 2);\n        // this.appContext.serviceExecutor\n        //   .execute(UPLOAD_IMAGE(formData))\n        //   .then(result => {\n        //     let imageUrl: string = result.url;\n        //     this.quillRef.deleteText(range.index, 1);\n        //     this.quillRef.insertEmbed(range.index, \"image\", imageUrl);\n        //     this.resizeImage(imageUrl).then(({ height, width }) => {\n        //       this.quillRef.formatText(range.index, 1, {\n        //         height,\n        //         width\n        //       });\n        //       this.quillRef.setSelection(range.index + 1);\n        //     });\n        //   });\n      }\n    };\n  };\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Button } from \"@material-ui/core\";\nimport { H5, View } from \".\";\n\nexport interface Props {\n  onClickPrimaryButton: () => void;\n  onClickSecondaryButton: () => void;\n  primaryButtonLabel: string;\n  secondaryButtonLabel: string;\n}\n\nexport default class TwinButton extends ApplicationComponent<Props> {\n  render() {\n    let {\n      onClickPrimaryButton,\n      onClickSecondaryButton,\n      primaryButtonLabel,\n      secondaryButtonLabel\n    } = this.props;\n    return (\n      <View isFlexDirectionRow={true} style={styles.rootContainer}>\n        <Button onClick={() => onClickPrimaryButton()} variant={\"outlined\"}>\n          <H5>{primaryButtonLabel}</H5>\n        </Button>\n        <Button onClick={() => onClickSecondaryButton()} variant={\"outlined\"}>\n          <H5>{secondaryButtonLabel}</H5>\n        </Button>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  rootContainer: {\n    alignItem: \"space-between\"\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Box, BoxProps } from \"@material-ui/core\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: () => void;\n  style?: any;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        style={this.props.style}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport Deal, { Address } from \"../../modal/deal\";\nimport {\n  LocalDealCard,\n  H4,\n  H5,\n  LocalDealTextField,\n  styleSchema,\n  View,\n  AddressDisplay,\n  CardBottomVote\n} from \"../../common\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface Props {\n  deals: Deal[];\n  onBlurTextField: () => void;\n  onClickCard: () => void;\n  onClickDealSection: () => void;\n  onClickSearch: () => void;\n  onChangeSearchTextField: (text: string) => void;\n  onFocusTextField: () => void;\n  selectedAddress: Address;\n  showSearchButton: boolean;\n  textFieldValue: string;\n}\n\nexport default class LandingPageView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View style={styles.rootContainer}>\n        <this.BodySection />\n      </View>\n    );\n  }\n\n  BodySection = () => {\n    return <this.DealsSection />;\n  };\n\n  DealsSection = () => {\n    const dealsContent = this.props.deals ? this.props.deals : [];\n    const dealsCard = dealsContent.map(deal => {\n      const content: React.ReactNode = this.generateCardContent(deal);\n      return (\n        <LocalDealCard\n          contents={content}\n          onClick={() => this.props.onClickCard()}\n          title={deal.title}\n        >\n          <CardBottomVote\n            downVoteCount={deal.vote?.downVote ?? 0}\n            onClickDownVote={() => console.log(\"onclick down vote\")}\n            onClickUpVote={() => console.log(\"onclick up vote\")}\n            upVoteCount={deal.vote?.upVote ?? 0}\n          />\n        </LocalDealCard>\n      );\n    });\n    return (\n      <View\n        boxShadow={dealsCard.length ? 1 : 0}\n        onClick={this.props.onClickDealSection}\n        style={styles.dealSectionContainer}\n      >\n        {dealsCard.length ? dealsCard : <this.NoDealInArea />}\n      </View>\n    );\n  };\n\n  NoDealInArea = () => {\n    return (\n      <View style={styles.noDealInAreaContainer}>\n        <H5>{this.appContext.labels.landingPage.noDeal}</H5>\n      </View>\n    );\n  };\n\n  SearchButton = () => {\n    return this.props.showSearchButton ? (\n      <Button\n        onClick={() => this.props.onClickSearch()}\n        style={styles.searchButton}\n        variant=\"outlined\"\n      >\n        <H5 color={styleSchema.font.white}>{\"Need Label - 搜尋\"}</H5>\n      </Button>\n    ) : null;\n  };\n\n  TextFieldArea = () => {\n    return (\n      <LocalDealTextField\n        defaultValue={this.props.textFieldValue}\n        onBlur={() => this.props.onBlurTextField()}\n        onChange={text => this.props.onChangeSearchTextField(text)}\n        onFocus={() => this.props.onFocusTextField()}\n        text={this.appContext.labels.landingPage.area}\n      />\n    );\n  };\n\n  protected generateCardContent = (deal: Deal): React.ReactNode => {\n    let {\n      address,\n      category,\n      discussions,\n      description,\n      title,\n      timeAvailable,\n      timestamp,\n      vote\n    } = deal;\n    return (\n      <>\n        <View isFlexDirectionRow={true} style={styles.cardContainer}>\n          <H4>{title}</H4>\n          <H5>\n            {timestamp\n              ? this.appContext.transformer.timeDifferentCalcualtor(timestamp)\n              : \"Need Label - 不明\"}\n          </H5>\n        </View>\n        <View style={styles.detailSectionContainer}>\n          <AddressDisplay address={address} />\n          <span dangerouslySetInnerHTML={{ __html: description }} />\n        </View>\n      </>\n    );\n  };\n}\n\nconst styles = {\n  cardContainer: {\n    justifyContent: \"space-between\"\n  },\n  circularProgress: {\n    marginLeft: 5\n  },\n  createNewButton: {\n    borderColor: styleSchema.color.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    borderWidth: 3\n  },\n  dealSectionContainer: {\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  detailSectionContainer: {\n    width: \"inherit\",\n    textAlign: \"justify\"\n  },\n  locationButtonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  noDealInAreaContainer: {},\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 15\n  },\n  searchButton: {\n    borderColor: styleSchema.remind.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    backgroundColor: styleSchema.remind.secondaryColor,\n    borderWidth: 3\n  },\n  searchMethodLabel: {\n    coordinate: {\n      borderColor: styleSchema.remind.primaryColor,\n      borderRadius: styleSchema.button.borderRadius,\n      backgroundColor: styleSchema.remind.primaryColor,\n      borderWidth: 3,\n      paddingBottom: 5,\n      paddingTop: 5\n    },\n    manual: {\n      borderColor: styleSchema.remind.secondaryColor,\n      borderRadius: styleSchema.button.borderRadius,\n      backgroundColor: styleSchema.remind.secondaryColor,\n      borderWidth: 3,\n      paddingBottom: 5,\n      paddingTop: 5\n    }\n  },\n  topBarContainer: {\n    justifyContent: \"space-between\",\n    paddingTop: 15,\n    width: \"100%\"\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport Deal, { Coordinate, Address } from \"../../modal/deal\";\nimport { LandingPageView } from \".\";\nimport { GET_CURRENT_ADDRESS } from \"../../common/middleware/service\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { connect } from \"react-redux\";\nimport {\n  setAddressPrediction,\n  setDeals,\n  setGeolocation,\n  setLoadingPosition\n} from \"../../common/redux/action\";\nimport { ReduxState } from \"../../common/redux/reducers\";\n\nexport interface Props {\n  addressesPrediction: Address[];\n  position: CurrentArea;\n  deals: Deal[];\n  selectedAddress: Address;\n  setAddressPrediction?: any;\n  setDeals?: any;\n  setGeolocation?: any;\n  setLoadingPosition?: any;\n}\n\nexport interface State {\n  isCreateDealDrawerOpen: boolean;\n  showSearchButton: boolean;\n  textFieldValue: string;\n  useAutoLocation: boolean;\n}\n\nexport class LandingPage extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      showSearchButton: false,\n      textFieldValue: \"\",\n      useAutoLocation: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.setCurrentPosition();\n    await this.setCurrentAddress();\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          console.debug(\"Current Coordinate: \", coordinate);\n          this.props.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.props.position.coordinate\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.props.setAddressPrediction(addresses);\n          this.props.setLoadingPosition(false);\n          return resolve();\n        });\n    });\n  }\n\n  protected onBlurTextField = () => {\n    // need to complete\n    console.log(\"onBlurTextField\");\n  };\n\n  protected onClickedCard = () => {\n    // need to complete\n    console.log(\"Card Clicked\");\n  };\n\n  protected onClickedDealSection = () => {\n    // need to complete\n    console.log(\"onClickedDealSection\");\n    this.setState({\n      showSearchButton: false\n    });\n  };\n\n  protected onClickSearch = () => {\n    // need to complete\n    console.log(\"onClickSearch\");\n    // this.setState({\n    //   showSearchButton: false\n    //   Disable this for now, user need internet to access the service anyway\n    //   useAutoLocation: false\n    // });\n    // this.getDeals();\n  };\n\n  protected onChangeSearchTextField = (textFieldValue: string) => {\n    // TODO need to think about if we need to allow user to search by area. because user will have coordinate by their location.\n    // search can be only for item!!!!!!!\n    // need to complete\n    console.log(\"onChangeSearchTextField\");\n    this.setState({\n      // currentSearchArea: { areaName: textFieldValue }\n    });\n  };\n\n  protected onFocusTextField = () => {\n    // need to complete\n    console.log(\"onFocusTextField\");\n    this.setState({\n      showSearchButton: true\n    });\n  };\n\n  protected sortDeals(inputDeals: Deal[]) {\n    inputDeals.sort((deal1, deal2) => {\n      return deal2.timestamp - deal1.timestamp;\n    });\n  }\n\n  render() {\n    let {\n      isCreateDealDrawerOpen,\n      showSearchButton,\n      textFieldValue,\n      useAutoLocation\n    } = this.state;\n    // sort deal\n    this.sortDeals(this.props.deals);\n    return (\n      <LandingPageView\n        deals={this.props.deals}\n        onBlurTextField={this.onBlurTextField}\n        onClickCard={this.onClickedCard}\n        onClickDealSection={this.onClickedDealSection}\n        onClickSearch={this.onClickSearch}\n        onChangeSearchTextField={this.onChangeSearchTextField}\n        onFocusTextField={this.onFocusTextField}\n        selectedAddress={this.props.selectedAddress}\n        showSearchButton={showSearchButton}\n        textFieldValue={textFieldValue}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressesPrediction: state.addressesPrediction,\n  deals: state.deals,\n  position: state.position,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, {\n  setAddressPrediction,\n  setDeals,\n  setGeolocation,\n  setLoadingPosition\n})(LandingPage);\n","import Deal, { Address, GetDealResponse, Coordinate } from \"../../modal/deal\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { ReduxActopnTypes } from \"./action\";\n\nexport interface ReduxState {\n  addressesPrediction: Address[];\n  deals: Deal[];\n  isLoadingPosition: boolean;\n  position: CurrentArea;\n  selectedAddress: Address;\n}\n\nconst initialState: ReduxState = {\n  addressesPrediction: [],\n  deals: [],\n  isLoadingPosition: true,\n  position: {\n    areaName: \"\",\n    coordinate: {\n      latitude: 0,\n      longitude: 0\n    }\n  },\n  selectedAddress: {\n    area: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    zipCode: \"\"\n  }\n};\n\nexport default function(state: ReduxState = initialState, action: any) {\n  console.log(\"Redux\", action.type);\n  switch (action.type) {\n    case ReduxActopnTypes.SET_ADDRESS_PREDICTION:\n      return setAddressPrediction(state, action.payload);\n    case ReduxActopnTypes.SET_DEALS:\n      return setDeals(state, action.payload);\n    case ReduxActopnTypes.SET_GEOLOCATION:\n      return setPosition(state, action.payload);\n    case ReduxActopnTypes.SET_LOADING_POSITION:\n      return setLoadingPosition(state, action.payload);\n    case ReduxActopnTypes.SET_SELECTED_ADDRESS:\n      return setSelectedAddress(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst setAddressPrediction = (\n  state: ReduxState,\n  addressesPrediction: Address[]\n) => {\n  return {\n    ...state,\n    addressesPrediction\n  };\n};\n\nconst setDeals = (\n  state: ReduxState,\n  getDealsResponse: GetDealResponse\n): ReduxState => {\n  return {\n    ...state,\n    deals: getDealsResponse.deals\n  };\n};\n\nconst setLoadingPosition = (\n  state: ReduxState,\n  isLoadingPosition: boolean\n): ReduxState => {\n  return {\n    ...state,\n    isLoadingPosition\n  };\n};\n\nconst setPosition = (state: ReduxState, coordinate: Coordinate): ReduxState => {\n  return {\n    ...state,\n    position: {\n      coordinate\n    }\n  };\n};\n\nconst setSelectedAddress = (\n  state: ReduxState,\n  selectedAddress: Address\n): ReduxState => {\n  return {\n    ...state,\n    selectedAddress\n  };\n};\n","import reducers from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\nconst middleWare = [thunk];\nexport const store = createStore(reducers, applyMiddleware(...middleWare));\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport {\n  H4,\n  H5,\n  LocalDealTextField,\n  AddressDisplay,\n  View,\n  TwinButton,\n  RichTextEditor\n} from \"../../common\";\nimport { Address } from \"../../modal/deal\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface Props {\n  currentAddress: Address;\n  onChangeRichTextValue: (value: string) => void;\n  onChangeTitleTextField: (value: string) => void;\n  onClickClose: () => void;\n  onClickSubmit: () => void;\n  useAutoPosition: boolean;\n}\n\nexport default class CreateDealLandingPageView extends ApplicationComponent<\n  Props\n> {\n  render() {\n    return (\n      <View style={styles.rootContainer}>\n        <this.HeaderSection />\n        <this.AddressSection />\n        <this.TitleTextField />\n        <this.HourOfOperationSection />\n        <this.DescriptionTextField />\n        <this.ButtonSection />\n      </View>\n    );\n  }\n\n  AddressSection = () => {\n    return (\n      <View style={{ margin: 10 }}>\n        {this.props.useAutoPosition ? (\n          <this.AddressAutoPositionDisplay />\n        ) : (\n          <this.AddressTextField />\n        )}\n      </View>\n    );\n  };\n\n  AddressAutoPositionDisplay = () => {\n    return <AddressDisplay address={this.props.currentAddress} />;\n  };\n\n  AddressTextField = () => {\n    return null;\n  };\n\n  ButtonSection = () => {\n    let label = this.appContext.labels.createDealPage;\n    return (\n      <TwinButton\n        onClickPrimaryButton={() => this.props.onClickSubmit()}\n        onClickSecondaryButton={() => this.props.onClickClose()}\n        primaryButtonLabel={label.create}\n        secondaryButtonLabel={label.cancel}\n      />\n    );\n  };\n\n  DescriptionTextField = () => {\n    return <RichTextEditor onChangeValue={this.props.onChangeRichTextValue} />;\n  };\n\n  HeaderSection = () => {\n    let label = this.appContext.labels.createDealPage;\n    return (\n      <View style={styles.headerContainer} isFlexDirectionRow={true}>\n        <H4 style={styles.headerText}>{label.header}</H4>\n        <Button onClick={() => this.props.onClickClose()}>\n          <H5>{label.close}</H5>\n        </Button>\n      </View>\n    );\n  };\n\n  HourOfOperationSection = () => {\n    return null;\n  };\n\n  TitleTextField = () => {\n    return (\n      <LocalDealTextField\n        onChange={this.props.onChangeTitleTextField}\n        text={this.appContext.labels.createDealPage.textFieldTitle}\n      />\n    );\n  };\n}\n\nconst styles = {\n  headerContainer: {\n    justifyContent: \"space-between\",\n    width: \"80%\"\n  },\n  headerText: {\n    marginTop: 10\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n    marginRight: 20\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { CreateDealLandingPageView } from \".\";\nimport Deal, { Address, GetDealResponse } from \"../../modal/deal\";\nimport { CREATE_DEAL, GET_DEALS } from \"../../common/middleware/service\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport { setDeals } from \"../../common/redux/action\";\nimport { connect } from \"react-redux\";\n\nexport interface Props {\n  currentAddress: Address;\n  onClickClose: () => void;\n  setDeals?: any;\n}\n\nexport interface State {\n  richTextValue: string;\n  title: string;\n  useAutoPosition: boolean;\n}\n\nexport class CreateDealLandingPage extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      richTextValue: \"\",\n      title: \"\",\n      useAutoPosition: true\n    };\n  }\n\n  render() {\n    return (\n      <CreateDealLandingPageView\n        currentAddress={this.props.currentAddress}\n        onChangeRichTextValue={this.onChangeRichTextValue}\n        onChangeTitleTextField={this.onChangeTitleTextField}\n        onClickClose={() => this.props.onClickClose()}\n        onClickSubmit={this.onClickSubmit}\n        useAutoPosition={this.state.useAutoPosition}\n      />\n    );\n  }\n\n  protected onChangeRichTextValue = (richTextValue: string) => {\n    this.setState({\n      richTextValue\n    });\n  };\n\n  protected onChangeTitleTextField = (title: string) => {\n    this.setState({\n      title\n    });\n  };\n\n  protected onClickSubmit = async () => {\n    await this.appContext.serviceExecutor.execute(\n      CREATE_DEAL(this.generateDeal())\n    );\n    this.props.onClickClose();\n    await this.appContext.serviceExecutor\n      .execute(GET_DEALS(this.props.currentAddress))\n      .then((getDealResponse: GetDealResponse) =>\n        this.props.setDeals(getDealResponse)\n      );\n  };\n\n  protected generateDeal(): Deal {\n    return {\n      address: this.props.currentAddress,\n      description: this.state.richTextValue,\n      timestamp: 0,\n      title: this.state.title\n    };\n  }\n}\n\nconst mapStateToProps = (state: ReduxState) => ({\n  currentAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, { setDeals })(CreateDealLandingPage);\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { AddressPredictionView } from \".\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport { connect } from \"react-redux\";\nimport { Address, GetDealResponse } from \"../../modal/deal\";\nimport { setDeals, setSelectedAddress } from \"../../common/redux/action\";\nimport { GET_DEALS } from \"../../common/middleware/service\";\n\nexport interface Props {\n  addressPrediction: Address[];\n  isPositionLoading: boolean;\n  selectedAddress: Address;\n  setDeals?: any;\n  setSelectedAddress?: any;\n}\n\nexport class AddressPrediction extends ApplicationComponent<Props> {\n  render() {\n    this.setDefaultSelectedAddress();\n    return null;\n    // <AddressPredictionView\n    //   addressPrediction={this.props.addressPrediction}\n    //   isPositionLoading={this.props.isPositionLoading}\n    //   onSelectAddress={this.onSelectAddress}\n    // />\n  }\n\n  protected setDefaultSelectedAddress() {\n    if (\n      this.props.addressPrediction.length > 0 &&\n      !this.props.selectedAddress.area\n    ) {\n      this.onSelectAddress();\n    }\n  }\n\n  protected onSelectAddress = (index: number = 0) => {\n    if (this.props.addressPrediction) {\n      const selectedAddress: Address = this.props.addressPrediction[index];\n      this.props.setSelectedAddress(selectedAddress);\n      this.setDeals(selectedAddress);\n    }\n  };\n\n  protected setDeals(selectedAddress: Address) {\n    if (selectedAddress.area !== this.props.selectedAddress?.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.props.setDeals(getDealResponse);\n        });\n    }\n  }\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressPrediction: state.addressesPrediction,\n  isPositionLoading: state.isLoadingPosition,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, { setDeals, setSelectedAddress })(\n  AddressPrediction\n);\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\n\nimport { Address } from \"../../modal/deal\";\nimport { H5, styleSchema, View, H4 } from \"../../common\";\nimport { Button, Drawer } from \"@material-ui/core\";\nimport { CreateDealLandingPage } from \"../createDealLandingPage\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { AddressPrediction } from \"../addressPrediction\";\nimport logo from \"../../resouces/logo_icon_character-min.png\";\n\nexport interface Props {\n  isCreateDealDrawerOpen: boolean;\n  onClickCreateDeal: () => void;\n  onCloseCreateDeal: () => void;\n  onClickLocationButton: () => void;\n  selectedAddress: Address;\n}\n\nexport default class HeaderView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View\n        boxShadow={1}\n        isFlexDirectionRow={true}\n        style={styles.rootContainer}\n      >\n        <AddressPrediction />\n        <this.CreateDealDrawer />\n        <this.HeaderTextAndLogo />\n        <this.TopBarSection />\n      </View>\n      // <div className=\"App-header\">\n      // </div>\n    );\n  }\n\n  CreateDealDrawer = () => {\n    return (\n      <Drawer\n        anchor={\"top\"}\n        open={this.props.isCreateDealDrawerOpen}\n        onClose={this.props.onCloseCreateDeal}\n      >\n        <CreateDealLandingPage onClickClose={this.props.onCloseCreateDeal} />\n      </Drawer>\n    );\n  };\n\n  CreateNewDealButton = () => {\n    return (\n      <Button\n        style={styles.createNewButton}\n        onClick={this.props.onClickCreateDeal}\n        variant=\"outlined\"\n      >\n        <H5>{this.appContext.labels.landingPage.createDealButton}</H5>\n      </Button>\n    );\n  };\n\n  HeaderTextAndLogo = () => {\n    return (\n      <View>\n        <img alt={\"app-logo\"} src={logo} style={{ width: 100 }} />\n      </View>\n    );\n    // return <H4>{this.appContext.labels.title}</H4>;\n  };\n\n  LocationButton = () => {\n    const showCircularProgressor: boolean =\n      this.props.selectedAddress && this.props.selectedAddress.area !== \"\";\n    return (\n      <Button\n        disabled={true}\n        onClick={this.props.onClickLocationButton}\n        style={styles.searchMethodLabel}\n        variant=\"outlined\"\n      >\n        <View isFlexDirectionRow={true} style={styles.locationButtonContainer}>\n          <H5 color={styleSchema.font.white}>\n            {`${this.appContext.labels.landingPage.geolocationProvider}:`}\n          </H5>\n          {showCircularProgressor ? (\n            <H5 color={styleSchema.font.white}>\n              {this.props.selectedAddress.area}\n            </H5>\n          ) : (\n            <CircularProgress\n              size={15}\n              style={styles.circularProgress}\n              variant={\"indeterminate\"}\n            />\n          )}\n        </View>\n      </Button>\n    );\n  };\n\n  TopBarSection = () => {\n    return (\n      <View isFlexDirectionRow={true} style={styles.buttonContainer}>\n        <this.LocationButton />\n        <this.CreateNewDealButton />\n      </View>\n    );\n  };\n}\n\nconst styles = {\n  buttonContainer: {\n    justifyContent: \"space-between\"\n  },\n  circularProgress: {\n    marginLeft: 5\n  },\n  createNewButton: {\n    borderColor: styleSchema.color.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    borderWidth: 3\n  },\n  locationButtonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    backgroundColor: styleSchema.color.white,\n    justifyContent: \"space-between\",\n    padding: 15\n  },\n  searchMethodLabel: {\n    backgroundColor: styleSchema.remind.primaryColor,\n    borderColor: styleSchema.remind.primaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    marginRight: 10,\n    borderWidth: 3,\n    paddingBottom: 5,\n    paddingTop: 5\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { HeaderView } from \".\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { Address } from \"../../modal/deal\";\nimport { connect } from \"react-redux\";\nimport { AddressPrediction } from \"../addressPrediction\";\n\ninterface Props {\n  addressesPrediction: Address[];\n  position: CurrentArea;\n  selectedAddress: Address;\n}\n\ninterface State {\n  isCreateDealDrawerOpen: boolean;\n  useAutoLocation: boolean;\n}\n\nexport class Header extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      useAutoLocation: true\n    };\n  }\n\n  render() {\n    return (\n      <HeaderView\n        isCreateDealDrawerOpen={this.state.isCreateDealDrawerOpen}\n        onClickCreateDeal={this.onClickCreateDeal}\n        onCloseCreateDeal={this.onCloseCreateDeal}\n        onClickLocationButton={this.onClickLocationButton}\n        selectedAddress={this.props.selectedAddress}\n      />\n    );\n  }\n\n  protected onClickCreateDeal = () => {\n    // need to complete\n    console.log(\"onClickCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: true\n    });\n  };\n\n  protected onCloseCreateDeal = () => {\n    console.log(\"onCloseCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: false\n    });\n  };\n\n  protected onClickLocationButton = () => {\n    // need to complete\n    console.log(\"onClickLocationButton\");\n    this.setState({\n      useAutoLocation: true\n    });\n  };\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressesPrediction: state.addressesPrediction,\n  position: state.position,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nimport \"./App.css\";\nimport { LandingPage } from \"./component/landingPage\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./common/redux/store\";\nimport Header from \"./component/header/header\";\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <LandingPage />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}