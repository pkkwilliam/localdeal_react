{"version":3,"sources":["lazyLoad/lazyLoadComponent.ts","common/middleware/service.ts","common/feature/oAuthProvider.ts","common/feature/feature.ts","lazyLoad/lazyLoad.ts","common/context/appState.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/imageProcessor.ts","common/applicationComponent.tsx","component/init/init.tsx","common/context/globalStateComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LazyLoadComponent","ServiceName","CREATE_DEAL","deal","body","JSON","stringify","externalService","hasMock","isMultipartFileRequest","method","url","serviceName","CREATE_VOTE","voteRequest","GET_CURRENT_ADDRESS","currentArea","optionalRequestParam","generateCurrentAreaRequestParameter","GET_DEALS","address","generateParameter","area","GET_PRESIGNED_URL","fileType","fileName","GET_USER_PROFILE","LOGIN_OAUTH_GOOGLE","authorizationCode","redirectUrl","generateMultipleUrlParameters","LOGOUT_OAUTH","UPLOAD_IMAGE_SIGNED_URL","image","signedUrl","customHeader","type","console","debug","areaName","coordinate","latitude","longitude","warn","keyAndValue","parameter","length","i","key","value","OAuthProvider","Feature","getLazyComponent","component","React","lazy","Banner","CollapseCard","CreateDeal","Drawer","Header","HeaderMenu","LandingPage","Slide","getPath","createContext","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","this","Promise","resolve","getResponse","requestParam","requestUrl","fetch","credentials","mode","then","result","isJsonResponse","get","match","status","json","reject","catch","exception","response","parse","ex","GET_DEALS_RESPONSE","GET_POSITION_RESPONSE","deals","id","street1","street2","city","formattedAddress","state","zipCode","country","description","filesUrl","serverIdentifierName","title","timestamp","name","imageUrl","oAuthProvider","Transformer","_lables","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","date","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","labels","isAllowDealRefresh","CREATE_DEAL_DRAFT","CONTACT_SHOW_EMAIL","HEADER_MENU","LOGIN_GOOGLE_OAUTH","LOGIN_WECHAT_OAUTH","XMADTAPPID","XMADTAPPVERSION","chineseTraditionalLabel","isProd","ImageProcessor","file","imageType","height","width","quality","Resizer","imageFileResizer","processedImage","Image","src","URL","createObjectURL","onload","size","transferToBlob","blob","getImageInfo","imageCompressQuality","imageNameSplit","split","log","imageCompress","originalImage","loadImage","img","toDataURL","guessImageMime","orientation","data","charAt","ApplicationComponent","_appContext","_imageProcessor","search","window","location","params","URLSearchParams","code","NONE","GOOGLE","history","pushState","document","context","Component","contextType","AppState","Init","executeGetDeals","appState","selectedAddress","appContext","serviceExecutor","execute","getDealResponse","setState","isLoading","setDeals","checkOAuthFromUrl","getUserProfile","setCurrentPosition","setCurrentAddress","checkOAuth","oAuthRedirectUrl","onOAuthLoginComplete","transformer","getCurrentLocation","setGeolocation","addresses","setPredicteAddresses","setLoadingPosition","setSelectedAddress","user","setUserProfile","GlobalStateComponent","props","removeUserProfile","userProfile","setCreateDealUploading","uploading","createDeal","setCreateDealProgressMessage","progressMessage","loadingPosition","addressesPrediction","Provider","children","App","fallback","className","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4641efc4.chunk.js","sourcesContent":["export enum LazyLoadComponent {\n  Banner = \"Banner\",\n  CollapseCard = \"CollapseCard\",\n  CreateDeal = \"CreateDeal\",\n  Drawer = \"Drawer\",\n  Header = \"Header\",\n  HeaderMenu = \"HeaderMenu\",\n  LandingPage = \"LandingPage\",\n  Slide = \"Slide\",\n}\n","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\nimport VoteRequest from \"../../modal/voteRequest\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst AUTHORIZATION_CODE_PARAMETER: string = \"authorizationCode\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\nconst REDIRECT_URL_PARAMETER: string = \"redirectUrl\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  CREATE_VOTE = \"CREATE_VOTE\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_PRESIGNED_URL = \"GET_PRESIGNED_URL\",\n  GET_USER_PROFILE = \"GET_USER_PROFILE\",\n  LOGIN_OAUTH_GOOGLE = \"LOGIN_OAUTH_GOOGLE\",\n  LOGOUT_OAUTH = \"LOGOUT_OAUTH\",\n  TEST = \"TEST\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\",\n  UPLOAD_IMAGE_SIGNED_URL = \"UPLOAD_IMAGE_SIGNED_URL\"\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL\n  };\n};\n\nexport const CREATE_VOTE = (voteRequest: VoteRequest) => {\n  return {\n    body: JSON.stringify(voteRequest),\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/vote\",\n    serviceName: ServiceName.CREATE_VOTE\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    externalService: false,\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS\n  };\n};\n\nexport const GET_PRESIGNED_URL = (\n  fileType: string,\n  fileName: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/file\",\n    optionalRequestParam: () => `?contentType=${fileType}&fileName=${fileName}`,\n    serviceName: ServiceName.GET_PRESIGNED_URL\n  };\n};\n\nexport const GET_USER_PROFILE = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/userProfile\",\n  serviceName: ServiceName.GET_USER_PROFILE\n});\n\nexport const LOGIN_OAUTH_GOOGLE = (\n  authorizationCode: string,\n  redirectUrl: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/oauth/google\",\n    optionalRequestParam: () =>\n      generateMultipleUrlParameters([\n        AUTHORIZATION_CODE_PARAMETER,\n        authorizationCode,\n        REDIRECT_URL_PARAMETER,\n        redirectUrl\n      ]),\n    serviceName: ServiceName.LOGIN_OAUTH_GOOGLE\n  };\n};\n\nexport const LOGOUT_OAUTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"DELETE\",\n  url: \"/oauth\",\n  serviceName: ServiceName.LOGOUT_OAUTH\n});\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE\n  };\n};\n\nexport const UPLOAD_IMAGE_SIGNED_URL = (\n  image: File,\n  signedUrl: string\n): Endpoint => {\n  return {\n    body: image,\n    customHeader: { \"Content-Type\": image.type },\n    externalService: true,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"PUT\",\n    url: signedUrl,\n    serviceName: ServiceName.UPLOAD_IMAGE_SIGNED_URL\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateMultipleUrlParameters = (keyAndValue: string[]): string => {\n  let parameter: string = \"?\";\n  if (keyAndValue.length % 2 === 0) {\n    for (let i = 0; i < keyAndValue.length; i += 2) {\n      if (i !== 0) {\n        parameter += \"&\";\n      }\n      parameter += `${keyAndValue[i]}=${keyAndValue[i + 1]}`;\n    }\n  }\n  console.debug(\"generateUrlParameter:\", parameter);\n  return parameter;\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  customHeader?: {};\n  errorReturn?: any;\n  externalService: boolean;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","export enum OAuthProvider {\n  GOOGLE = \"GOOGLE\",\n  WECHAT = \"WECHAT\",\n  NONE = \"NONE\"\n}\n","export enum Feature {\n  CONTACT_SHOW_EMAIL = \"CONTACT_SHOW_EMAIL\",\n  HEADER_MENU = \"HEADER_MENU\",\n  CREATE_DEAL_DRAFT = \"CREATE_DEAL_DRAFT\",\n  LOGIN_GOOGLE_OAUTH = \"LOGIN_GOOGLE_OAUTH\",\n  LOGIN_WECHAT_OAUTH = \"LOGIN_WECHAT_OAUTH\",\n  USER_PROFILE_IN_HEADER = \"USER_PROFILE_IN_HEADER\",\n  USER_PROFILE_IN_HEADER_MENU = \"USER_PROFILE_IN_HEADER_MENU\",\n}\n","import React from \"react\";\nimport { LazyLoadComponent } from \"./lazyLoadComponent\";\n\nexport const getLazyComponent = (component: LazyLoadComponent) => {\n  return React.lazy(() => getPath(component));\n};\n\nfunction getPath(component: LazyLoadComponent): any {\n  switch (component) {\n    case LazyLoadComponent.Banner:\n      return import(\"../component/banner/banner\");\n    case LazyLoadComponent.CollapseCard:\n      return import(\"../common/collapseCard\");\n    case LazyLoadComponent.CreateDeal:\n      return import(\n        \"../component/createDealLandingPage/createDealLandingPage.v2\"\n      );\n    case LazyLoadComponent.Drawer:\n      return import(\"../common/drawer\");\n    case LazyLoadComponent.Header:\n      return import(\"../component/header/header\");\n    case LazyLoadComponent.HeaderMenu:\n      return import(\"../component/menu/headerMenu\");\n    case LazyLoadComponent.LandingPage:\n      return import(\"../component/landingPage/landingPage\");\n    case LazyLoadComponent.Slide:\n      return import(\"../common/slide/slide\");\n  }\n}\n","import React from \"react\";\n\nexport default React.createContext({});\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = endpoint.externalService\n        ? endpoint.url\n        : this.serviceUrl + endpoint.url + requestParam;\n      return (\n        fetch(requestUrl, {\n          body: endpoint.body,\n          credentials: endpoint.externalService ? \"omit\" : \"include\", // this is for CORS sending cookies\n          headers: endpoint.externalService ? endpoint.customHeader : headers,\n          method: endpoint.method,\n          mode: \"cors\"\n        })\n          .then(result => {\n            const isJsonResponse = result.headers\n              .get(\"content-type\")\n              ?.match(\"application/json\");\n            const status = result.status;\n            if (status < 400) {\n              if (status === 204 || !isJsonResponse) {\n                return Promise.resolve();\n              } else {\n                return Promise.resolve(result.json());\n              }\n            } else if (result.status > 400) {\n              return Promise.reject();\n            }\n          })\n          // .then(result => Promise.resolve(result))\n          .catch(exception => {\n            console.warn(\n              \"Something is wrong while fetch: \",\n              requestUrl,\n              exception\n            );\n            return Promise.reject(exception);\n          })\n      );\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (endpoint: Endpoint) => {\n    return !endpoint.isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\"\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  console.debug(\"get mock response:\", serviceName);\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    case ServiceName.GET_USER_PROFILE:\n      return GET_USER_PROFILE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      id: 0,\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        formattedAddress: \"澳門漁翁街24號\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582\n    },\n    {\n      id: 1,\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        formattedAddress: \"澳門漁翁街24號\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        \"The content of ExpansionPanels is mounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\"\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332\n    },\n    {\n      id: 2,\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        formattedAddress: \"澳門漁翁街24號\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        \"The content of ExpansionPanels is mounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332\n    }\n  ]\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  }\n];\n\nconst GET_USER_PROFILE = {\n  id: 0,\n  name: \"Mock User\",\n  imageUrl:\n    \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n  oAuthProvider: \"GOOGLE\"\n};\n","import AppContext from \"./appContext\";\nimport { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  constructor(private readonly _lables: any) {}\n  timeDifferentCalcualtor(timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return this._lables.date.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(timeDifference: number): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${this._lables.date.day}`\n      : this._lables.date.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport chineseTraditionalLabel from \"../content/labels/chinese.traditional.json\";\nimport { Feature } from \"./feature/feature\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer(this.labels);\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get features(): Feature[] {\n    return [\n      Feature.CREATE_DEAL_DRAFT,\n      Feature.CONTACT_SHOW_EMAIL,\n      Feature.HEADER_MENU,\n      Feature.LOGIN_GOOGLE_OAUTH,\n      Feature.LOGIN_WECHAT_OAUTH,\n    ];\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION,\n    };\n  }\n\n  get labels() {\n    return chineseTraditionalLabel;\n  }\n\n  get isMock(): boolean {\n    return false;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get oAuthRedirectUrl(): string {\n    return this.isProd ? \"https://liuda.site\" : \"http://127.0.0.1:3000\";\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import Resizer from \"react-image-file-resizer\";\nimport loadImage from \"blueimp-load-image\";\n\nexport default class ImageProcessor {\n  public imageCompress(\n    file: File,\n    imageType: string,\n    height: number,\n    width: number,\n    quality: number\n  ): Promise<File> {\n    return new Promise((resolve, reject) => {\n      const callBackFunction = (processedImage: File) => {\n        resolve(processedImage);\n      };\n      Resizer.imageFileResizer(\n        file,\n        width / 5,\n        height,\n        imageType,\n        quality,\n        0,\n        callBackFunction,\n        \"blob\"\n      );\n    });\n  }\n\n  public async getImageInfo(\n    file: File\n  ): Promise<{ height: number; size: number; type: string; width: number }> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = URL.createObjectURL(file);\n      image.onload = () => {\n        return resolve({\n          height: image.height,\n          size: file.size,\n          type: file.type,\n          width: image.width,\n        });\n      };\n    });\n  }\n\n  public async imagePrecprocess(file: any): Promise<File> {\n    let blob = await this.transferToBlob(file);\n    const { height, size, type, width } = await this.getImageInfo(blob);\n    console.debug(\"original image size:\", size);\n    const imageCompressQuality = size > 100000 ? 10 : 100;\n    const imageNameSplit = type.split(\"/\");\n    console.log(imageNameSplit, imageNameSplit[imageNameSplit.length - 1]);\n    const processedImage = await this.imageCompress(\n      blob,\n      imageNameSplit[imageNameSplit.length - 1],\n      height,\n      width,\n      imageCompressQuality\n    );\n    await this.getImageInfo(processedImage);\n    return Promise.resolve(processedImage);\n  }\n\n  protected transferToBlob(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return fetch(file)\n        .then((originalImage) => originalImage.blob())\n        .then((result) => resolve(result));\n    });\n  }\n\n  public fixRotation(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      loadImage(\n        file,\n        (img: any) => {\n          return resolve(img.toDataURL(this.guessImageMime(file)));\n        },\n        { orientation: true }\n      );\n    });\n  }\n\n  guessImageMime(data: string): string {\n    if (data.charAt(0) === \"/\") {\n      return \"image/jpeg\";\n    } else if (data.charAt(0) === \"R\") {\n      return \"image/gif\";\n    } else if (data.charAt(0) === \"i\") {\n      return \"image/png\";\n    } else {\n      return \"\";\n    }\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\nimport { OAuthProvider } from \"./feature/oAuthProvider\";\nimport ImageProcessor from \"./imageProcessor\";\nimport AppState from \"../common/context/appState\";\nimport AppStateInterface from \"./context/appStateInterface\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  static contextType = AppState;\n  private readonly _appContext: AppContext = new AppContext();\n  private readonly _imageProcessor: ImageProcessor = new ImageProcessor();\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n\n  get appState(): AppStateInterface {\n    return this.context;\n  }\n\n  get imageProcessor(): ImageProcessor {\n    return this._imageProcessor;\n  }\n\n  public checkOAuth(): {\n    authorizationCode: string;\n    oAuthProvider: OAuthProvider;\n  } {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const state = params.get(\"state\");\n    const code = params.get(\"code\");\n    let oAuthProvider: OAuthProvider = OAuthProvider.NONE;\n    let authorizationCode: string = \"\";\n    if (state === OAuthProvider.GOOGLE) {\n      oAuthProvider = OAuthProvider.GOOGLE;\n      authorizationCode = code ?? \"\";\n    }\n    return {\n      authorizationCode,\n      oAuthProvider,\n    };\n  }\n\n  public onOAuthLoginComplete() {\n    window.history.pushState(null, document.title, \"/\");\n  }\n}\n","import ApplicationComponent from \"../../common/applicationComponent\";\nimport { OAuthProvider } from \"../../common/feature/oAuthProvider\";\nimport {\n  LOGIN_OAUTH_GOOGLE,\n  GET_USER_PROFILE,\n  GET_CURRENT_ADDRESS,\n  GET_DEALS,\n} from \"../../common/middleware/service\";\nimport { Coordinate, GetDealResponse, Address } from \"../../modal/deal\";\n\nexport default class Init extends ApplicationComponent {\n  render() {\n    return null;\n  }\n\n  async componentDidMount() {\n    this.checkOAuthFromUrl();\n    this.getUserProfile();\n    await this.setCurrentPosition();\n    await this.setCurrentAddress();\n    await this.executeGetDeals();\n  }\n\n  protected checkOAuthFromUrl() {\n    const { authorizationCode, oAuthProvider } = this.checkOAuth();\n    if (oAuthProvider === OAuthProvider.GOOGLE) {\n      this.appContext.serviceExecutor\n        .execute(\n          LOGIN_OAUTH_GOOGLE(\n            authorizationCode,\n            this.appContext.oAuthRedirectUrl\n          )\n        )\n        .then(() => {\n          this.onOAuthLoginComplete();\n          this.getUserProfile();\n        });\n    }\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          this.appState.position.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.appState.position.coordinate,\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.appState.address.setPredicteAddresses(addresses);\n          this.appState.position.setLoadingPosition(false);\n          this.appState.address.setSelectedAddress(addresses[0]);\n          return resolve();\n        });\n    });\n  }\n\n  protected executeGetDeals = () => {\n    if (this.appState.address.selectedAddress?.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.appState.address.selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.setState({\n            isLoading: false,\n          });\n          this.appState.deal.setDeals(getDealResponse.deals);\n        });\n    }\n  };\n\n  protected getUserProfile() {\n    this.appContext.serviceExecutor\n      .execute(GET_USER_PROFILE())\n      .then((result) => this.appState.user.setUserProfile(result));\n  }\n}\n","import React, { Component } from \"react\";\nimport AppState from \"./appState\";\nimport Deal, { Address, Coordinate } from \"../../modal/deal\";\nimport { UserProfile } from \"../../modal/userProfile\";\nimport { OAuthProvider } from \"../feature/oAuthProvider\";\n\nexport interface State {\n  address: {\n    addressesPrediction: Address[];\n    selectedAddress: Address;\n  };\n  createDeal: {\n    uploading: boolean;\n    progressMessage: string;\n  };\n  deal: {\n    dealDraft?: Deal;\n    deals: Deal[];\n  };\n  position: {\n    loadingPosition: boolean;\n    coordinate?: Coordinate;\n  };\n  user: {\n    userProfile?: UserProfile;\n  };\n}\n\nexport default class GlobalStateComponent extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      address: {\n        addressesPrediction: [],\n        selectedAddress: {\n          area: \"\",\n          street1: \"\",\n          street2: \"\",\n          city: \"\",\n          state: \"\",\n          country: \"\",\n          zipCode: \"\"\n        }\n      },\n      createDeal: {\n        uploading: false,\n        progressMessage: \"\"\n      },\n      deal: {\n        deals: []\n      },\n      position: {\n        loadingPosition: true,\n        coordinate: {\n          latitude: 0,\n          longitude: 0\n        }\n      },\n      user: {\n        userProfile: {\n          id: 0,\n          name: \"\",\n          imageUrl: \"\",\n          oAuthProvider: OAuthProvider.NONE\n        }\n      }\n    };\n  }\n\n  render() {\n    const { address, createDeal, deal, position, user } = this.state;\n    return (\n      <AppState.Provider\n        value={{\n          address: {\n            ...address,\n            setSelectedAddress: this.setSelectedAddress,\n            setPredicteAddresses: this.setPredicteAddresses\n          },\n          createDeal: {\n            ...createDeal,\n            setCreateDealUploading: this.setCreateDealUploading,\n            setCreateDealProgressMessage: this.setCreateDealProgressMessage\n          },\n          deal: { ...deal, setDeals: this.setDeals },\n          position: {\n            ...position,\n            setGeolocation: this.setGeolocation,\n            setLoadingPosition: this.setLoadingPosition\n          },\n          user: {\n            ...user,\n            removeUserProfile: this.removeUserProfile,\n            setUserProfile: this.setUserProfile\n          }\n        }}\n      >\n        {this.props.children}\n      </AppState.Provider>\n    );\n  }\n\n  protected removeUserProfile = () => {\n    const userProfile: UserProfile = {\n      id: 0,\n      imageUrl: \"\",\n      name: \"\",\n      oAuthProvider: OAuthProvider.NONE\n    };\n    this.setState({\n      user: {\n        ...this.state.user,\n        userProfile\n      }\n    });\n  };\n\n  protected setDeals = (deals: Deal[]) => {\n    this.setState({\n      deal: { ...this.state.deal, deals }\n    });\n  };\n\n  protected setCreateDealUploading = (uploading: boolean) => {\n    this.setState({\n      createDeal: { ...this.state.createDeal, uploading }\n    });\n  };\n\n  protected setCreateDealProgressMessage = (progressMessage: string) => {\n    this.setState({\n      createDeal: { ...this.state.createDeal, progressMessage }\n    });\n  };\n\n  protected setGeolocation = (coordinate: Coordinate) => {\n    this.setState({\n      position: { ...this.state.position, coordinate }\n    });\n  };\n\n  protected setLoadingPosition = (loadingPosition: boolean) => {\n    this.setState({\n      position: { ...this.state.position, loadingPosition }\n    });\n  };\n\n  protected setPredicteAddresses = (addressesPrediction: Address[]) => {\n    this.setState({\n      address: { ...this.state.address, addressesPrediction }\n    });\n  };\n\n  protected setSelectedAddress = (selectedAddress: Address) => {\n    this.setState({\n      address: { ...this.state.address, selectedAddress }\n    });\n  };\n\n  protected setUserProfile = (userProfile: UserProfile) => {\n    this.setState({\n      user: { ...this.state.user, userProfile }\n    });\n  };\n}\n","import React, { Component, Suspense } from \"react\";\nimport \"./App.css\";\nimport Init from \"./component/init/init\";\nimport GlobalStateComponent from \"./common/context/globalStateComponent\";\nimport { LazyLoadComponent } from \"./lazyLoad/lazyLoadComponent\";\nimport { getLazyComponent } from \"./lazyLoad/lazyLoad\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst Banner = getLazyComponent(LazyLoadComponent.Banner);\nconst Header = getLazyComponent(LazyLoadComponent.Header);\nconst LandingPage = getLazyComponent(LazyLoadComponent.LandingPage);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <GlobalStateComponent>\n        <Suspense fallback={<></>}>\n          <Init />\n          <div className=\"App-header\">\n            <Header />\n          </div>\n          <Banner />\n          <div className=\"Content\">\n            <LandingPage />\n          </div>\n        </Suspense>\n      </GlobalStateComponent>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}