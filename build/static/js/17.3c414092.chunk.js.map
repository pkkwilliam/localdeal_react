{"version":3,"sources":["common/slide/slide.tsx"],"names":["Slide","props","onLoadImage","index","height","document","getElementById","dealIndex","clientHeight","console","log","setState","imageHeight","state","style","styles","sliderWrapper","dots","this","lazyLoad","infinite","focusOnSelect","slidesPerRow","slidesToShow","swipe","speed","generateImages","fileUrls","map","content","alt","id","onLoad","src","getImageStlye","imageDefaultStyle","Component","minHeight","minWidth","objectFit","width"],"mappings":"+PAeqBA,G,mBACnB,WAAYC,GAAe,IAAD,8BACxB,4CAAMA,KA+CEC,YAAc,SAACC,GACvB,GAAc,IAAVA,EAAa,CAAC,IAAD,EACTC,EAAM,UAAGC,SAASC,eAAT,eACL,EAAKL,MAAMM,UADN,oBAAH,aAAG,EAEZC,aACCJ,IACFK,QAAQC,IAAIN,GACZ,EAAKO,SAAS,CACZC,YAAaR,OAtDnB,EAAKS,MAAQ,GAFW,E,sEAMxB,OACE,yBAAKC,MAAOC,EAAOC,eACjB,kBAAC,IAAD,CACEC,KAAMC,KAAKjB,MAAMgB,KACjBE,SAAS,cACTC,UAAU,EACVC,eAAe,EACfC,aAAc,EACdC,aAAc,EACdC,MAAON,KAAKjB,MAAMuB,MAClBC,MAAO,KAENP,KAAKQ,qB,uCAMc,IAAD,OACzB,OAAOR,KAAKjB,MAAM0B,SAASC,KAAI,SAACC,EAAS1B,GACvC,OACE,6BACE,yBACE2B,IAAI,OACJC,GAAE,eAAU,EAAK9B,MAAMM,UAArB,kBAAwCJ,GAC1C6B,OAAQ,kBAAM,EAAK9B,YAAYC,IAC/B8B,IAAKJ,EACLf,MAAO,EAAKoB,wB,sCAQpB,OAAIhB,KAAKL,MAAMD,YACN,eAAKG,EAAOoB,kBAAnB,CAAsC/B,OAAQc,KAAKL,MAAMD,cAElD,eAAKG,EAAOoB,uB,GA7CUC,cAgE7BrB,EAAS,CACboB,kBAAmB,CACjBE,UAAW,OACXC,SAAU,OACVC,UAAW,SAEbvB,cAAe,CACbwB,MAAO","file":"static/js/17.3c414092.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport \"./slide.css\";\n\ninterface Props {\n  dots: boolean;\n  dealIndex: number;\n  fileUrls: string[];\n  swipe: boolean;\n}\n\ninterface State {\n  imageHeight?: number;\n}\n\nexport default class Slide extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div style={styles.sliderWrapper}>\n        <Slider\n          dots={this.props.dots}\n          lazyLoad=\"progressive\"\n          infinite={false}\n          focusOnSelect={false}\n          slidesPerRow={1}\n          slidesToShow={1}\n          swipe={this.props.swipe}\n          speed={100}\n        >\n          {this.generateImages()}\n        </Slider>\n      </div>\n    );\n  }\n\n  protected generateImages() {\n    return this.props.fileUrls.map((content, index) => {\n      return (\n        <div>\n          <img\n            alt=\"post\"\n            id={`deal-${this.props.dealIndex} image-${index}`}\n            onLoad={() => this.onLoadImage(index)}\n            src={content}\n            style={this.getImageStlye()}\n          />\n        </div>\n      );\n    });\n  }\n\n  protected getImageStlye(): any {\n    if (this.state.imageHeight) {\n      return { ...styles.imageDefaultStyle, height: this.state.imageHeight };\n    } else {\n      return { ...styles.imageDefaultStyle };\n    }\n  }\n\n  protected onLoadImage = (index: number) => {\n    if (index === 0) {\n      const height = document.getElementById(\n        `deal-${this.props.dealIndex} image-0`\n      )?.clientHeight;\n      if (height) {\n        console.log(height);\n        this.setState({\n          imageHeight: height,\n        });\n      }\n    }\n  };\n}\n\nconst styles = {\n  imageDefaultStyle: {\n    minHeight: \"100%\",\n    minWidth: \"100%\",\n    objectFit: \"cover\",\n  },\n  sliderWrapper: {\n    width: \"100%\",\n  },\n};\n"],"sourceRoot":""}