{"version":3,"sources":["common/collapseCard.tsx","common/drawer.tsx","common/stylesheet.ts","common/toast/toastSeverity.ts","common/addressDisplay.tsx","common/backgroundTheme.tsx","common/cardBottomVote.tsx","common/h1.tsx","common/h4.tsx","common/h5.tsx","common/image.tsx","common/miniText.tsx","common/primaryButton.tsx","common/paragraph.tsx","common/slide/slide.tsx","common/textButton.tsx","common/toast/toast.tsx","common/view.tsx","common/index.ts","common/textField.tsx"],"names":["CollapseCard","BottomToolBar","isFlexDirectionRow","style","styles","bottonToolBar","alignSelf","props","bottomToolBarContent","ExpandSign","ExpandLessSign","color","styleSchema","primaryColor","appContext","labels","localDealCardPage","collapse","expandSignIcon","ExpandMoreSign","expand","allowExpand","onClick","onClickExpandSign","expandSignButton","expanded","rootContainer","textAlign","in","this","collapsedContentContainer","empty","children","ApplicationComponent","justifyContent","width","paddingBottom","paddingTop","backgroundColor","primaryColorTransparent","padding","paddingLeft","paddingRight","Draewer","Component","alignItems","height","dimension","FILL_ALL_WIDTH","ORANGE_GRADIENT","button","borderRadius","black","blueTransparent","green","greenMedium","greyDark","greyLight","greyTransparent","orange","orangeGradient","orangeTransparent","primaryGradient","red","redDark","secondaryColor","secondaryColorTransparent","systemError","systemInform","systemSuccess","systemWarn","white","common","borderColor","FILL_ALL_HEIGHT","font","fontSize","primaryFont","icon","marginLeft","remind","textField","borderWidth","ToastSeverity","AddressDisplay","generateAddressWithSpace","address","formattedAddress","input","BackgroundTheme","themeStyle","theme","secondaryTheme","primaryTheme","CardBottomVote","VoteButton","voteCount","voteUpIcon","buttonContainerStyle","iconStyle","state","voted","VotedButtonContainer","mainIconStyle","votedIcon","VoteButtonContainer","voteIcon","voteFunction","onPressUpVote","onPressDownVote","buttonContainer","Button","disabled","iconButton","componentStyle","createVoteRequest","upVote","a","async","deal","id","serverIdentifierName","serviceExecutor","execute","CREATE_VOTE","then","getDealResponse","setState","appState","setDeals","deals","vote","downVote","marginRight","marginTop","H1","getDefaultStyle","getDefaultColor","getColor","defaultStyle","getStyle","text","margin","fontFamily","fontWeight","H4","H5","Image","alt","src","getImageSizeStyle","size","bigImage","mediumImage","miniCircularImage","smallImage","MiniText","additionalStyle","primaryStyle","secondaryStyle","default","PrimaryButton","buttonStyle","Paragraph","Slide","sliderWrapper","dots","lazyLoad","infinite","focusOnSelect","slidesPerRow","slidesToShow","speed","generateImages","fileUrls","map","content","getImageStlye","imageDefaultStyle","minHeight","minWidth","objectFit","TextButton","underline","variant","textDecoration","marginBottom","View","Box","display","flexDirection","overrideStyles","root","borderBottomColor","TextField","withStyles","MaterialTextField","multiline","onChange","event","target","value","placeholder","rows"],"mappings":"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","file":"static/js/1.4829073b.chunk.js","sourcesContent":["import React from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport { View, H4, H5 } from \".\";\nimport { styleSchema } from \"./stylesheet\";\nimport Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ApplicationComponent from \"./applicationComponent\";\n\nexport interface Props {\n  allowExpand: boolean;\n  children?: React.ReactNode;\n  bottomToolBarContent?: React.ReactNode;\n  expanded: boolean;\n  onClickExpandSign: () => void;\n}\n\nexport default class CollapseCard extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View style={{ ...styles.rootContainer, textAlign: \"start\" }}>\n        <Collapse in={this.props.expanded}>\n          <View\n            style={\n              this.props.allowExpand\n                ? styles.collapsedContentContainer\n                : styles.empty\n            }\n          >\n            {this.props.children}\n          </View>\n        </Collapse>\n        <this.BottomToolBar />\n      </View>\n    );\n  }\n\n  protected BottomToolBar = () => {\n    return (\n      <View isFlexDirectionRow style={styles.bottonToolBar}>\n        <View style={{ alignSelf: \"flex-start\" }}>\n          {this.props.bottomToolBarContent}\n        </View>\n        <View style={{ alignSelf: \"flex-end\" }}>\n          <this.ExpandSign />\n        </View>\n      </View>\n    );\n  };\n\n  protected ExpandLessSign = () => {\n    return (\n      <>\n        <H5 style={{ color: styleSchema.color.primaryColor }}>\n          {this.appContext.labels.localDealCardPage.collapse}\n        </H5>\n        <ExpandLess style={styles.expandSignIcon} />\n      </>\n    );\n  };\n\n  protected ExpandMoreSign = () => {\n    return (\n      <>\n        <H4>{this.appContext.labels.localDealCardPage.expand}</H4>\n        <ExpandMore style={styles.expandSignIcon} />\n      </>\n    );\n  };\n\n  protected ExpandSign = () => {\n    if (this.props.allowExpand) {\n      return (\n        <Button\n          onClick={this.props.onClickExpandSign}\n          style={styles.expandSignButton}\n        >\n          {this.props.expanded ? (\n            <this.ExpandLessSign />\n          ) : (\n            <this.ExpandMoreSign />\n          )}\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  };\n}\n\nconst styles = {\n  bottonToolBar: {\n    justifyContent: \"space-between\",\n    width: \"inherit\",\n  },\n  collapsedContentContainer: {\n    paddingBottom: 15,\n    paddingTop: 15,\n  },\n  empty: {},\n  expandSignButton: {\n    backgroundColor: styleSchema.color.primaryColorTransparent,\n    padding: 0,\n    paddingLeft: 15,\n    paddingRight: 5,\n  },\n  expandSignIcon: {\n    color: styleSchema.color.primaryColor,\n  },\n  rootContainer: {\n    width: \"inherit\",\n  },\n};\n","import React, { Component } from \"react\";\nimport { default as MuiDrawer, DrawerProps } from \"@material-ui/core/Drawer\";\nimport { View } from \".\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport default class Draewer extends Component<DrawerProps> {\n  render() {\n    return (\n      <MuiDrawer {...this.props}>\n        <View style={styles.rootContainer}>{this.props.children}</View>\n      </MuiDrawer>\n    );\n  }\n}\n\nconst styles = {\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: \"inherit\",\n    paddingLeft: 15,\n    paddingRight: 15,\n    width: styleSchema.dimension.FILL_ALL_WIDTH,\n  },\n};\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_GRADIENT = \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"EA4335\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\nconst SYSTEM_ERROR = \"#F44436\";\nconst SYSTEM_INFORM = \"#2196F3\";\nconst SYSTEM_SUCCESS = \"#4CAF51\";\nconst SYSTEM_WARN = \"#FF9800\";\n\n// dimension\nconst FILL_ALL_HEIGHT = \"-webkit-fill-available\";\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst PRIMARY_FONT = \"sans-serif\";\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeGradient: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryGradient: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    systemError: string;\n    systemInform: string;\n    systemSuccess: string;\n    systemWarn: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_HEIGHT: string;\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    primaryFont: string;\n  };\n  icon: any;\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeGradient: ORANGE_GRADIENT,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryGradient: ORANGE_GRADIENT,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    systemError: SYSTEM_ERROR,\n    systemInform: SYSTEM_INFORM,\n    systemSuccess: SYSTEM_SUCCESS,\n    systemWarn: SYSTEM_WARN,\n    white: WHITE\n  },\n  common: {\n    borderColor: GREY_LIGHT\n  },\n  dimension: {\n    FILL_ALL_HEIGHT,\n    FILL_ALL_WIDTH\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    primaryFont: PRIMARY_FONT\n  },\n  icon: {\n    fontSize: 38,\n    marginLeft: 18\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2\n  }\n};\n","export enum ToastSeverity {\n  ERROR = \"ERROR\",\n  INFORM = \"INFORM\",\n  SUCCESS = \"SUCCESS\",\n  WARN = \"WARN\"\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Address } from \"../modal/deal\";\nimport { H5, View } from \".\";\n\nexport interface Props {\n  address: Address;\n}\n\nexport default class AddressDisplay extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View isFlexDirectionRow={true}>\n        <H5>{this.generateAddressWithSpace(this.props.address)}</H5>\n      </View>\n    );\n  }\n\n  protected generateAddressWithSpace(address: Address): string {\n    return address.formattedAddress || \"\";\n  }\n\n  protected removeNotValidAddress(input: string): string {\n    return input ? `${input} ` : \"\";\n  }\n}\n","import React, { Component } from \"react\";\nimport { View } from \".\";\nimport { styleSchema } from \"./stylesheet\";\n\ninterface Props {\n  styles?: any;\n  theme?: \"primary\" | \"secondary\";\n}\n\nexport default class BackgroundTheme extends Component<Props> {\n  render() {\n    const themeStyle =\n      this.props.theme === \"secondary\"\n        ? styles.secondaryTheme\n        : styles.primaryTheme;\n    return (\n      <View\n        style={{ ...styles.rootContainer, ...themeStyle, ...this.props.styles }}\n      >\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  rootContainer: {\n    alignItems: \"center\",\n    backgroundColor: styleSchema.color.primaryColorTransparent,\n    borderRadius: 8,\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  },\n  primaryTheme: {\n    backgroundColor: styleSchema.color.primaryColorTransparent\n  },\n  secondaryTheme: {\n    backgroundColor: styleSchema.color.secondaryColorTransparent\n  }\n};\n","import ApplicationComponent from \"./applicationComponent\";\nimport React from \"react\";\nimport { View, H5 } from \".\";\nimport ThumbDown from \"@material-ui/icons/ThumbDown\";\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\nimport { styleSchema } from \"./stylesheet\";\nimport Button from \"@material-ui/core/Button\";\nimport Deal, { Address, GetDealResponse } from \"../modal/deal\";\nimport { CREATE_VOTE } from \"./middleware/service\";\n\nexport interface Props {\n  deal: Deal;\n  selectedAddress?: Address;\n}\n\nexport interface State {\n  voted: boolean;\n}\n\nexport default class CardBottomVote extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      voted: false,\n    };\n  }\n\n  render() {\n    const { downVote, upVote } = this.props.deal?.vote ?? {};\n    return (\n      <View isFlexDirectionRow style={styles.rootContainer}>\n        <this.VoteButton voteCount={upVote ?? 0} voteUpIcon={true} />\n        <this.VoteButton voteCount={downVote ?? 0} voteUpIcon={false} />\n      </View>\n    );\n  }\n\n  protected VoteButton = ({\n    voteCount,\n    voteUpIcon,\n  }: {\n    voteCount: number;\n    voteUpIcon: boolean;\n  }) => {\n    let buttonContainerStyle = null;\n    let iconStyle = null;\n    if (this.state.voted) {\n      buttonContainerStyle = styles.VotedButtonContainer;\n      iconStyle = { ...styles.mainIconStyle, ...styles.votedIcon };\n    } else {\n      buttonContainerStyle = styles.VoteButtonContainer;\n      iconStyle = { ...styles.mainIconStyle, ...styles.voteIcon };\n    }\n    let voteFunction = voteUpIcon ? this.onPressUpVote : this.onPressDownVote;\n    return (\n      <View\n        isFlexDirectionRow\n        style={{ ...styles.buttonContainer, ...buttonContainerStyle }}\n      >\n        <Button\n          disabled={this.state.voted}\n          onClick={voteFunction}\n          style={styles.iconButton}\n        >\n          {voteUpIcon ? (\n            <ThumbUp style={iconStyle} />\n          ) : (\n            <ThumbDown style={iconStyle} />\n          )}\n        </Button>\n        <H5 style={styles.componentStyle}>{voteCount}</H5>\n      </View>\n    );\n  };\n\n  protected onPressDownVote = () => {\n    this.createVoteRequest(false);\n  };\n\n  protected onPressUpVote = () => {\n    this.createVoteRequest(true);\n  };\n\n  protected createVoteRequest = async (upVote: boolean) => {\n    const { id, serverIdentifierName } = this.props.deal;\n    if (!this.state.voted && id && serverIdentifierName) {\n      this.appContext.serviceExecutor\n        .execute(\n          CREATE_VOTE({\n            id,\n            upVote,\n            serverIdentifierName,\n          })\n        )\n        .then((getDealResponse: GetDealResponse) => {\n          this.setState({ voted: true });\n          this.appState.deal.setDeals(getDealResponse.deals);\n        });\n    }\n  };\n}\n\nconst styles = {\n  buttonContainer: {\n    alignItems: \"center\",\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  componentStyle: {\n    paddingRight: 10,\n  },\n  mainIconStyle: {\n    fontSize: 22,\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n  iconButton: {\n    padding: 0,\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  VotedButtonContainer: {\n    backgroundColor: styleSchema.color.secondaryColorTransparent,\n  },\n  VoteButtonContainer: {\n    backgroundColor: styleSchema.color.primaryColorTransparent,\n  },\n  votedIcon: {\n    color: styleSchema.color.secondaryColor,\n  },\n  voteIcon: {\n    color: styleSchema.color.primaryColor,\n  },\n};\n","import React, { Component } from \"react\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport interface Props {\n  style?: any;\n}\n\nexport default class H1<ChildProps extends Props = Props> extends Component<\n  ChildProps\n> {\n  render() {\n    return (\n      <p\n        style={{\n          ...this.getDefaultStyle(),\n          ...this.getDefaultColor(),\n          ...this.props.style\n        }}\n      >\n        {this.props.children}\n      </p>\n    );\n  }\n\n  protected getDefaultColor(): { color: string } {\n    return {\n      color: this.getColor()\n    };\n  }\n\n  protected getColor(): string {\n    return styleSchema.color.black;\n  }\n\n  protected getDefaultStyle() {\n    return { ...styles.defaultStyle, ...this.getStyle() };\n  }\n\n  protected getStyle(): any {\n    return styles.text;\n  }\n}\n\nconst styles = {\n  defaultStyle: {\n    margin: 0\n  },\n  text: {\n    fontFamily: styleSchema.font.primaryFont,\n    fontSize: 18,\n    fontWeight: 600\n  }\n};\n","import { H1, styleSchema } from \".\";\n\nexport default class H4 extends H1 {\n  protected getColor(): string {\n    return styleSchema.color.primaryColor;\n  }\n\n  protected getStyle(): any {\n    return styles.text;\n  }\n}\n\nconst styles = {\n  text: {\n    fontSize: 15,\n    fontWeight: 500\n  }\n};\n","import { styleSchema, H1 } from \"./\";\n\nexport default class H5 extends H1 {\n  protected getColor(): string {\n    return styleSchema.color.greyDark;\n  }\n\n  protected getStyle() {\n    return styles.text;\n  }\n}\n\nconst styles = {\n  text: {\n    fontSize: 15,\n    fontWeight: 500\n  }\n};\n","import React, { Component } from \"react\";\n\ninterface Props {\n  alt?: string;\n  src: string;\n  size?: \"big\" | \"medium\" | \"small\" | \"miniCircularImage\";\n}\n\nexport default class Image extends Component<Props> {\n  render() {\n    return (\n      <img\n        alt={this.props?.alt ?? \"image\"}\n        src={this.props.src}\n        style={{ ...styles.defaultStyle, ...this.getImageSizeStyle() }}\n      />\n    );\n  }\n\n  protected getImageSizeStyle() {\n    switch (this.props.size) {\n      case \"big\":\n        return styles.bigImage;\n      case \"medium\":\n        return styles.mediumImage;\n      case \"miniCircularImage\":\n        return styles.miniCircularImage;\n      default:\n        return styles.smallImage;\n    }\n  }\n}\n\nconst styles = {\n  bigImage: { width: 100 },\n  defaultStyle: {\n    borderRadius: 5\n  },\n  miniCircularImage: {\n    borderRadius: 30,\n    width: 35\n  },\n  mediumImage: { width: 75 },\n  smallImage: { width: 50 }\n};\n","import React, { Component } from \"react\";\nimport { styleSchema } from \"./stylesheet\";\n\ninterface Props {\n  color: \"primary\" | \"secondary\";\n}\n\nexport default class MiniText extends Component<Props> {\n  additionalStyle =\n    this.props.color === \"primary\"\n      ? styles.primaryStyle\n      : styles.secondaryStyle;\n  render() {\n    return (\n      <p style={{ ...styles.default, ...this.additionalStyle }}>\n        {this.props.children}\n      </p>\n    );\n  }\n}\n\nconst styles = {\n  default: {\n    fontFamily: styleSchema.font.primaryFont,\n    fontSize: 9,\n    margin: 0\n  },\n  primaryStyle: {\n    color: styleSchema.color.primaryColor\n  },\n  secondaryStyle: {\n    color: styleSchema.color.secondaryColor\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport default class PrimaryButton extends Component<ButtonProps> {\n  render() {\n    const color: any = {\n      backgroundColor: this.props.disabled\n        ? styleSchema.color.greyDark\n        : styleSchema.color.primaryColor\n    };\n    return (\n      <Button style={{ ...color, ...styles.buttonStyle }} {...this.props}>\n        <p style={styles.text}>{this.props.children}</p>\n      </Button>\n    );\n  }\n}\n\nconst styles = {\n  buttonStyle: {\n    borderRadius: 25,\n    marginLeft: 20,\n    marginRight: 20,\n    width: \"inherit\"\n  },\n  text: {\n    color: styleSchema.color.white,\n    fontSize: 15,\n    fontWeight: 600,\n    margin: 0\n  }\n};\n","import { H1, styleSchema } from \".\";\nimport { Props as ParentProps } from \"./h1\";\n\ninterface Props extends ParentProps {\n  color?: \"primary\" | \"secondary\" | \"black\";\n}\n\nexport default class Paragraph extends H1<Props> {\n  protected getColor(): string {\n    switch (this.props.color) {\n      case \"primary\":\n        return styles.primaryColor.color;\n      case \"secondary\":\n        return styles.secondaryColor.color;\n      case \"black\":\n        return styles.black.color;\n      default:\n        return styles.primaryColor.color;\n    }\n  }\n\n  protected getStyle(): any {\n    return styles.text;\n  }\n}\n\nconst styles = {\n  primaryColor: {\n    color: styleSchema.color.primaryColor\n  },\n  secondaryColor: {\n    color: styleSchema.color.secondaryColor\n  },\n  black: {\n    color: styleSchema.color.black\n  },\n  text: {\n    fontFamily: styleSchema.font.primaryFont,\n    fontSize: \"0.875rem\"\n  }\n};\n","import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport \"./slide.css\";\n\ninterface Props {\n  dealIndex: number;\n  height?: number;\n  fileUrls: string[];\n}\n\nexport default class Slide extends Component<Props> {\n  render() {\n    return (\n      <div style={styles.sliderWrapper}>\n        <Slider\n          dots\n          lazyLoad=\"progressive\"\n          infinite={false}\n          focusOnSelect={false}\n          slidesPerRow={1}\n          slidesToShow={1}\n          speed={100}\n        >\n          {this.generateImages()}\n        </Slider>\n      </div>\n    );\n  }\n\n  protected generateImages() {\n    return this.props.fileUrls.map(content => {\n      return (\n        <div>\n          <img alt=\"post\" src={content} style={this.getImageStlye()} />\n        </div>\n      );\n    });\n  }\n\n  protected getImageStlye(): any {\n    return { ...styles.imageDefaultStyle, height: this.props.height };\n  }\n}\n\nconst styles = {\n  imageDefaultStyle: {\n    minHeight: \"100%\",\n    minWidth: \"100%\",\n    objectFit: \"cover\"\n  },\n  sliderWrapper: {\n    width: \"100%\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport { styleSchema } from \"./stylesheet\";\n\ninterface Props extends ButtonProps {\n  onClick: () => void;\n  underline?: boolean;\n}\n\nexport default class TextButton extends Component<Props> {\n  render() {\n    const additionalStyle = this.props.underline ? styles.underline : \"\";\n    return (\n      <Button\n        onClick={this.props.onClick}\n        style={{ ...styles.buttonStyle, ...additionalStyle }}\n        variant=\"text\"\n        {...this.props}\n      >\n        {this.props.children}\n      </Button>\n    );\n  }\n}\n\nconst styles = {\n  buttonStyle: {\n    color: styleSchema.color.primaryColor,\n    paddingBottom: 2,\n    paddingTop: 2\n  },\n  underline: {\n    textDecoration: \"underline\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Snackbar, Slide } from \"@material-ui/core\";\nimport { View, P } from \"..\";\nimport { styleSchema } from \"../stylesheet\";\nimport { ToastSeverity } from \"./toastSeverity\";\n\ninterface Props {\n  autoHideDuration?: number;\n  message: string;\n  onClose: () => void;\n  open: boolean;\n  severity?: ToastSeverity;\n}\n\ninterface State {\n  open: boolean;\n}\n\nexport default class Toast extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      open: true\n    };\n  }\n\n  protected TransitionUp(props: any) {\n    return <Slide {...props} direction=\"up\" />;\n  }\n\n  render() {\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        TransitionComponent={this.TransitionUp}\n        open={this.props.open}\n        autoHideDuration={\n          this.props.autoHideDuration ? this.props.autoHideDuration : 2500\n        }\n        onClose={this.props.onClose}\n      >\n        <View\n          boxShadow={1}\n          style={{\n            ...styles.rootContainer,\n            backgroundColor: this.getBackgroundColor()\n          }}\n        >\n          <P style={{ color: \"white\" }}>{this.props.message}</P>\n        </View>\n      </Snackbar>\n    );\n  }\n\n  protected getBackgroundColor() {\n    switch (this.props.severity) {\n      case ToastSeverity.ERROR:\n        return styleSchema.color.systemError;\n      case ToastSeverity.INFORM:\n        return styleSchema.color.systemInform;\n      case ToastSeverity.SUCCESS:\n        return styleSchema.color.systemSuccess;\n      case ToastSeverity.WARN:\n        return styleSchema.color.systemWarn;\n      default:\n        return styleSchema.color.systemInform;\n    }\n  }\n}\n\nconst styles = {\n  rootContainer: {\n    padding: 5,\n    paddingLeft: 30,\n    paddingRight: 30,\n    borderRadius: 10,\n    marginBottom: 35\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport Box, { BoxProps } from \"@material-ui/core/Box\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: (any?: any) => void;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","// might need to import all first, then export\n\nexport { default as AddressDisplay } from \"./addressDisplay\";\nexport { default as BackgroundTheme } from \"./backgroundTheme\";\nexport { default as CardBottomVote } from \"./cardBottomVote\";\nexport { default as CollapseCard } from \"./collapseCard\";\nexport { default as Drawer } from \"./drawer\";\nexport { styleSchema } from \"./stylesheet\";\nexport { default as H1 } from \"./h1\";\nexport { default as H4 } from \"./h4\";\nexport { default as H5 } from \"./h5\";\nexport { default as Image } from \"./image\";\nexport { default as MiniText } from \"./miniText\";\nexport { default as PrimaryButton } from \"./primaryButton\";\nexport { default as P } from \"./paragraph\";\nexport { default as Slider } from \"./slide/slide\";\nexport { default as TextButton } from \"./textButton\";\nexport { default as TextField } from \"./textField\";\nexport { default as Toast } from \"./toast/toast\";\nexport { default as View } from \"./view\";\n","import React, { Component } from \"react\";\nimport { default as MaterialTextField } from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst overrideStyles = {\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"yellow\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"yellow\",\n      borderWidth: \"0px\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"yellow\",\n        borderWidth: \"0px\",\n      },\n    },\n  },\n};\n\ninterface Props {\n  multiline?: boolean;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  rows?: number;\n}\n\nexport default class TextField extends Component<Props> {\n  render() {\n    const StyledTextField = withStyles(overrideStyles)(MaterialTextField);\n    return (\n      <MaterialTextField\n        multiline={this.props.multiline}\n        onChange={(event) => this.props.onChange(event.target.value)}\n        placeholder={this.props.placeholder}\n        rows={this.props.rows}\n        style={styles.textField}\n      />\n    );\n  }\n}\n\nconst styles = {\n  textField: {\n    width: \"inherit\",\n  },\n};\n"],"sourceRoot":""}