{"version":3,"sources":["resouces/logo_icon_character-min.png","common/middleware/service.ts","common/redux/action.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/applicationComponent.tsx","common/addressDisplay.tsx","common/stylesheet.ts","common/cardBottomVote.tsx","common/h1.tsx","common/h5.tsx","common/localDealCard.tsx","common/localDealTextField.tsx","common/richTextEditor.tsx","common/twinButton.tsx","common/view.tsx","component/landingPage/landingPage.view.tsx","component/landingPage/landingPage.tsx","common/redux/reducers.ts","common/redux/store.ts","component/createDealLandingPage/createDealLandingPage.view.tsx","component/createDealLandingPage/createDealLandingPage.tsx","component/addressPrediction/addressPrediction.tsx","common/ToolTips.tsx","component/header/header.view.tsx","component/header/header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ServiceName","ReduxActopnTypes","CREATE_DEAL","deal","body","JSON","stringify","hasMock","isMultipartFileRequest","method","url","serviceName","CREATE_VOTE","voteRequest","GET_DEALS","address","optionalRequestParam","generateParameter","area","generateCurrentAreaRequestParameter","currentArea","console","debug","areaName","coordinate","latitude","longitude","warn","key","value","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","this","Promise","resolve","getResponse","requestParam","requestUrl","fetch","mode","then","result","status","json","catch","exception","reject","response","parse","ex","GET_DEALS_RESPONSE","GET_CURRENT_ADDRESS","GET_POSITION_RESPONSE","deals","id","street1","street2","city","state","zipCode","country","description","serverIdentifierName","title","timestamp","formattedAddress","Transformer","_lables","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","date","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","labels","isAllowDealRefresh","XMADTAPPID","XMADTAPPVERSION","chineseTraditionalLabel","isProd","ApplicationComponent","_appContext","Component","AddressDisplay","isFlexDirectionRow","generateAddressWithSpace","props","input","styleSchema","button","borderRadius","color","black","blueTransparent","green","greenMedium","greyDark","greyLight","greyTransparent","orange","orangeTransparent","primaryColor","primaryColorTransparent","red","redDark","secondaryColor","secondaryColorTransparent","white","common","borderColor","dimension","FILL_ALL_WIDTH","font","fontSize","icon","marginLeft","remind","textField","borderWidth","setDeals","getDealsResponse","dispatch","type","SET_DEALS","payload","CardBottomVote","VoteButton","voteCount","voteUpIcon","buttonContainerStyle","iconStyle","voted","styles","VotedButtonContainer","mainIconStyle","votedIcon","VoteButtonContainer","voteIcon","voteFunction","onPressUpVote","onPressDownVote","style","buttonContainer","Button","disabled","onClick","iconButton","ThumbUp","ThumbDown","componentStyle","createVoteRequest","upVote","a","async","appContext","serviceExecutor","execute","getDealResponse","setState","vote","downVote","rootContainer","connect","selectedAddress","alignItems","flexDirection","marginRight","paddingRight","paddingTop","paddingBottom","padding","marginTop","backgroundColor","H1","getStyle","getColor","children","getDefaultColor","text","margin","H5","LocalDealCard","contentRef","BottomToolBar","bottonToolBar","alignSelf","ExpandSign","ExpandLessSign","localDealCardPage","collapse","ExpandLess","expandSignIcon","ExpandMoreSign","expand","ExpandMore","contentNeedCollapse","onClickedContent","expandSignButton","isCollapsed","ContentBody","content","contentCollapsedStyle","contentOpenedStyle","contentContainer","width","ref","clientHeight","borderBottom","contents","justifyContent","height","overflow","paddingLeft","LocalDealTextField","onBlurFunction","onBlur","onFocusFunction","onFocus","TextField","defaultValue","InputProps","classes","notchedOutline","label","onChange","target","textFieldStyle","variant","withStyles","textFieldStyles","overrideStyles","RichTextEditor","quillRef","modules","toolbar","delta","source","editor","ops","length","forEach","line","isObject","insert","image","log","base64","blob","fixRotationOfFile","fixedImage","getEditor","insertEmbed","onChangeValue","file","loadImage","img","toDataURL","maxWidth","orientation","TwinButton","onClickPrimaryButton","onClickSecondaryButton","primaryButtonLabel","secondaryButtonLabel","primaryButton","primaryButtonText","View","Box","display","LandingPageView","BodySection","DealsSection","dealsCard","map","generateCardContent","onClickCard","boxShadow","dealSectionContainer","isLoadingDeals","LoadingDeals","NoDealInArea","noDealInAreaContainer","landingPage","loadingDeals","noDeal","SearchButton","showSearchButton","onClickSearch","searchButton","TextFieldArea","textFieldValue","onBlurTextField","onChangeSearchTextField","onFocusTextField","category","discussions","timeAvailable","cardContainer","transformer","timeDifferentCalcualtor","detailSectionContainer","dangerouslySetInnerHTML","__html","circularProgress","createNewButton","textAlign","locationButtonContainer","searchMethodLabel","manual","topBarContainer","LandingPage","onClickedCard","onClickedDealSection","onClickDownVote","onClickUpVote","executeGetDeals","isLoading","isCreateDealDrawerOpen","useAutoLocation","setCurrentPosition","setCurrentAddress","getCurrentLocation","setGeolocation","addresses","setAddressPrediction","setLoadingPosition","inputDeals","sort","deal1","deal2","sortedDeal","sortDeals","onClickDealSection","addressesPrediction","SET_ADDRESS_PREDICTION","SET_GEOLOCATION","isLoadingPosition","disptach","SET_LOADING_POSITION","initialState","setPosition","setSelectedAddress","middleWare","thunk","store","createStore","action","SET_SELECTED_ADDRESS","applyMiddleware","CreateDealLandingPageView","AddressSection","addressSectionContainer","useAutoPosition","AddressAutoPositionDisplay","AddressTextField","currentAddress","ButtonSection","createDealPage","onClickSubmit","onClickClose","create","cancel","buttonSection","DescriptionTextField","descriptionContainer","DescriptionMissing","onChangeRichTextValue","richTextEditor","hasDescription","MissingContentText","descriptionMissing","HeaderSection","headerContainer","header","close","HourOfOperationSection","missingContentText","TitleMissing","hasTitle","titleMissing","TitleTextField","titleTextFiledContainer","onChangeTitleTextField","textFieldTitle","titleTextField","CreateDealLandingPage","richTextValue","validateDescription","validateTitle","generateDeal","AddressPrediction","onSelectAddress","index","addressPrediction","setDefaultSelectedAddress","isPositionLoading","ToolTips","Tooltip","disableTouchListener","minWidth","HeaderView","CreateDealDrawer","Drawer","anchor","onClose","onCloseCreateDeal","open","CreateNewDealButton","Add","onClickCreateDeal","createNewDealIcon","HamburgerMenu","showHamburgerMenu","borderLeft","hamburgerMenuIconContainer","hamburgerMenuIcon","onClickHamburgerMenu","HamburgerMenuDrawer","onCloseHamburgerMenu","isHamburgerMenuDrawerOpen","LocationButton","HeaderTextAndLogo","alt","src","logo","locationIcon","TopBarSection","currentLocation","loading","Header","onClickLocationButton","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.087bf8a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_icon_character-min.f8d459b6.png\";","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\nimport VoteRequest from \"../../modal/voteRequest\";\nimport { connect } from \"http2\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  CREATE_VOTE = \"CREATE_VOTE\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\"\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL\n  };\n};\n\nexport const CREATE_VOTE = (voteRequest: VoteRequest) => {\n  return {\n    body: JSON.stringify(voteRequest),\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/vote\",\n    serviceName: ServiceName.CREATE_VOTE\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS\n  };\n};\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  errorReturn?: any;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","import { Coordinate, GetDealResponse, Address } from \"../../modal/deal\";\nimport { type } from \"os\";\n\nexport enum ReduxActopnTypes {\n  SET_ADDRESS_PREDICTION = \"SET_ADDRESS_PREDICTION\",\n  SET_DEALS = \"SET_DEAL\",\n  SET_LOADING_POSITION = \"SET_LOADING_POSITION\",\n  SET_GEOLOCATION = \"SET_GEOLOCATION\",\n  SET_SELECTED_ADDRESS = \"SET_SELECTED_ADDRESS\"\n}\n\nexport const setAddressPrediction = (addresses: Address[]) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_ADDRESS_PREDICTION,\n      payload: addresses\n    });\n  };\n};\n\nexport const setGeolocation = (coordinate: Coordinate) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_GEOLOCATION,\n      payload: coordinate\n    });\n  };\n};\n\nexport const setLoadingPosition = (isLoadingPosition: boolean) => {\n  return function(disptach: any) {\n    disptach({\n      type: ReduxActopnTypes.SET_LOADING_POSITION,\n      payload: isLoadingPosition\n    });\n  };\n};\n\nexport const setDeals = (getDealsResponse: GetDealResponse) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_DEALS,\n      payload: getDealsResponse\n    });\n  };\n};\n\nexport const setSelectedAddress = (address: Address) => {\n  return function(dispatch: any) {\n    dispatch({\n      type: ReduxActopnTypes.SET_SELECTED_ADDRESS,\n      payload: address\n    });\n  };\n};\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint.isMultipartFileRequest);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = this.serviceUrl + endpoint.url + requestParam;\n      return fetch(requestUrl, {\n        body: endpoint.body,\n        headers,\n        method: endpoint.method,\n        mode: \"cors\"\n      })\n        .then(result => {\n          if (result.status === 204) {\n            return Promise.resolve();\n          } else {\n            return result.json();\n          }\n        })\n        .then(result => Promise.resolve(result))\n        .catch(exception => {\n          console.warn(\n            \"Something is wrong while fetch: \",\n            requestUrl,\n            exception\n          );\n          return Promise.reject(exception);\n        });\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (isMultipartFileRequest: boolean) => {\n    return !isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\"\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582\n    },\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul>',\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332\n    },\n    {\n      address: {\n        id: 0,\n        street1: \"街道1\",\n        street2: \"地下B座\",\n        city: \"澳門\",\n        state: \"\",\n        zipCode: \"\",\n        country: \"澳門\",\n        coordinate: {\n          latitude: 113,\n          longitude: 234\n        }\n      },\n      description:\n        '<p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul><p>這個東西一點都不好吃啊!!!</p><p><br></p><p><img src=\"https://storage.cloud.google.com/deal_image/1577872169235\"></p><p><br></p><ul><li>都是代碼，怎麽吃啊???</li></ul>',\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1577872407269\n    }\n  ]\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門馬交石巷信昌工業大廈\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\"\n  }\n];\n","import AppContext from \"./appContext\";\nimport { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  constructor(private readonly _lables: any) {}\n  timeDifferentCalcualtor(timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return this._lables.date.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(timeDifference: number): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${this._lables.date.day}`\n      : this._lables.date.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport chineseTraditionalLabel from \"../content/labels/chinese.traditional.json\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer(this.labels);\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION\n    };\n  }\n\n  get labels() {\n    return chineseTraditionalLabel;\n  }\n\n  get isMock(): boolean {\n    return true;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get showHamburgerMenu(): boolean {\n    return false;\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\n// import { connect } from \"react-redux\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  private readonly _appContext: AppContext = new AppContext();\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n}\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Address } from \"../modal/deal\";\nimport { H5, View } from \".\";\n\nexport interface Props {\n  address: Address;\n}\n\nexport default class AddressDisplay extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View isFlexDirectionRow={true}>\n        <H5>{this.generateAddressWithSpace(this.props.address)}</H5>\n      </View>\n    );\n  }\n\n  protected generateAddressWithSpace(address: Address): string {\n    let { street1, street2, city, state, zipCode, country } = address;\n    // return `\n    // ${this.removeNotValidAddress(street1 || \"\")}\n    // ${this.removeNotValidAddress(street2 || \"\")}\n    // ${this.removeNotValidAddress(city || \"\")}\n    // ${this.removeNotValidAddress(state || \"\")}\n    // ${this.removeNotValidAddress(zipCode || \"\")}\n    // ${this.removeNotValidAddress(country)}`;\n    return address.formattedAddress || \"\";\n  }\n\n  protected removeNotValidAddress(input: string): string {\n    return input ? `${input} ` : \"\";\n  }\n}\n","// button\nconst borderRadius = 15;\n\n// color\nconst BLACK = \"black\"; // TODO replace this with HEX code\nconst BLUE = \"#007AFF\";\nconst BLUE_TRANSPARENT = \"rgba(0,132,255,.1)\";\nconst GREY_DARK = \"#7D7D7D\";\nconst GREY_LIGHT = \"#f6f6f6\";\nconst GREY_TRANSPARENT = \"rgba(12, 12, 12, .1)\";\nconst GREEN = \"#5CC928\";\nconst GREEN_MDEIUM = \"#1EA362\";\nconst ORANGE = \"#FF4F00\";\nconst ORANGE_TRANSPARENT = \"rgb(255, 168, 128, .1)\";\nconst RED = \"red\";\nconst RED_DARK = \"#DA4B3C\";\nconst WHITE = \"#FFFFFF\";\n\n// dimension\nconst FILL_ALL_WIDTH = \"-webkit-fill-available\";\n\n// font\nconst FONT_SIZE = 16;\n\nexport interface StyleSheet {\n  button: {\n    borderRadius: number;\n  };\n  color: {\n    black: string;\n    blueTransparent: string;\n    green: string;\n    greenMedium: string;\n    greyDark: string;\n    greyLight: string;\n    greyTransparent: string;\n    orange: string;\n    orangeTransparent: string;\n    primaryColor: string;\n    primaryColorTransparent: string;\n    red: string;\n    redDark: string;\n    secondaryColor: string;\n    secondaryColorTransparent: string;\n    white: string;\n  };\n  common: {\n    borderColor: string;\n  };\n  dimension: {\n    FILL_ALL_WIDTH: string;\n  };\n  font: {\n    fontSize: number;\n    white: string;\n  };\n  icon: any;\n  remind: {\n    primaryColor: string;\n    secondaryColor: string;\n  };\n  textField: {\n    borderColor: string;\n    borderRadius: number;\n    borderWidth: number;\n  };\n}\n\nexport const styleSchema: StyleSheet = {\n  button: {\n    borderRadius\n  },\n  color: {\n    black: BLACK,\n    blueTransparent: BLUE_TRANSPARENT,\n    green: GREEN,\n    greenMedium: GREEN_MDEIUM,\n    greyDark: GREY_DARK,\n    greyLight: GREY_LIGHT,\n    greyTransparent: GREY_TRANSPARENT,\n    orange: ORANGE,\n    orangeTransparent: ORANGE_TRANSPARENT,\n    primaryColor: ORANGE,\n    primaryColorTransparent: ORANGE_TRANSPARENT,\n    red: RED,\n    redDark: RED_DARK,\n    secondaryColor: GREY_DARK,\n    secondaryColorTransparent: GREY_TRANSPARENT,\n    white: WHITE\n  },\n  common: {\n    borderColor: GREY_LIGHT\n  },\n  dimension: {\n    FILL_ALL_WIDTH\n  },\n  font: {\n    fontSize: FONT_SIZE,\n    white: WHITE\n  },\n  icon: {\n    fontSize: 38,\n    marginLeft: 18\n  },\n  remind: {\n    primaryColor: GREEN,\n    secondaryColor: BLUE\n  },\n  textField: {\n    borderColor: BLUE,\n    borderRadius,\n    borderWidth: 2\n  }\n};\n","import ApplicationComponent from \"./applicationComponent\";\nimport React from \"react\";\nimport { View, H5 } from \".\";\nimport { ThumbDown, ThumbUp } from \"@material-ui/icons\";\nimport { styleSchema } from \"./stylesheet\";\nimport { Button } from \"@material-ui/core\";\nimport Deal, { Address, GetDealResponse } from \"../modal/deal\";\nimport { CREATE_VOTE } from \"./middleware/service\";\nimport { ReduxState } from \"./redux/reducers\";\nimport { setDeals } from \"./redux/action\";\nimport { connect } from \"react-redux\";\n\nexport interface Props {\n  deal: Deal;\n  selectedAddress?: Address;\n  setDeals?: any;\n}\n\nexport interface State {\n  voted: boolean;\n}\n\nexport class CardBottomVote extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      voted: false\n    };\n  }\n\n  render() {\n    const { downVote, upVote } = this.props.deal?.vote ?? {};\n    return (\n      <View isFlexDirectionRow style={styles.rootContainer}>\n        <this.VoteButton voteCount={upVote ?? 0} voteUpIcon={true} />\n        <this.VoteButton voteCount={downVote ?? 0} voteUpIcon={false} />\n      </View>\n    );\n  }\n\n  protected VoteButton = ({\n    voteCount,\n    voteUpIcon\n  }: {\n    voteCount: number;\n    voteUpIcon: boolean;\n  }) => {\n    let buttonContainerStyle = null;\n    let iconStyle = null;\n    if (this.state.voted) {\n      buttonContainerStyle = styles.VotedButtonContainer;\n      iconStyle = { ...styles.mainIconStyle, ...styles.votedIcon };\n    } else {\n      buttonContainerStyle = styles.VoteButtonContainer;\n      iconStyle = { ...styles.mainIconStyle, ...styles.voteIcon };\n    }\n    let voteFunction = voteUpIcon ? this.onPressUpVote : this.onPressDownVote;\n    return (\n      <View\n        style={{\n          ...styles.buttonContainer,\n          ...buttonContainerStyle\n        }}\n      >\n        <Button\n          disabled={this.state.voted}\n          onClick={voteFunction}\n          style={styles.iconButton}\n        >\n          {voteUpIcon ? (\n            <ThumbUp style={iconStyle} />\n          ) : (\n            <ThumbDown style={iconStyle} />\n          )}\n        </Button>\n        <H5 style={styles.componentStyle}>{voteCount}</H5>\n      </View>\n    );\n  };\n\n  protected onPressDownVote = () => {\n    this.createVoteRequest(false);\n  };\n\n  protected onPressUpVote = () => {\n    this.createVoteRequest(true);\n  };\n\n  protected createVoteRequest = async (upVote: boolean) => {\n    const { id, serverIdentifierName } = this.props.deal;\n    if (!this.state.voted && id && serverIdentifierName) {\n      this.appContext.serviceExecutor\n        .execute(\n          CREATE_VOTE({\n            id,\n            upVote,\n            serverIdentifierName\n          })\n        )\n        .then((getDealResponse: GetDealResponse) => {\n          this.setState({ voted: true });\n          this.props.setDeals(getDealResponse);\n        });\n    }\n  };\n}\n\nconst mapStateToProps = (state: ReduxState) => ({\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, { setDeals })(CardBottomVote);\n\nconst styles = {\n  buttonContainer: {\n    alignItems: \"center\",\n    borderRadius: 5,\n    flexDirection: \"row\",\n    marginLeft: 5,\n    marginRight: 5\n  },\n  componentStyle: {\n    paddingRight: 10\n  },\n  mainIconStyle: {\n    fontSize: 22,\n    paddingTop: 2,\n    paddingBottom: 2\n  },\n  iconButton: {\n    padding: 0\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  VotedButtonContainer: {\n    backgroundColor: styleSchema.color.secondaryColorTransparent\n  },\n  VoteButtonContainer: {\n    backgroundColor: styleSchema.color.primaryColorTransparent\n  },\n  votedIcon: {\n    color: styleSchema.color.secondaryColor\n  },\n  voteIcon: {\n    color: styleSchema.color.primaryColor\n  }\n};\n","import React, { Component } from \"react\";\nimport { styleSchema } from \"./stylesheet\";\n\ninterface Props {\n  color?: string;\n  style?: any;\n}\n\nexport default class H1 extends Component<Props> {\n  render() {\n    return (\n      <h4\n        style={{ ...this.getStyle(), ...this.getColor(), ...this.props.style }}\n      >\n        {this.props.children}\n      </h4>\n    );\n  }\n\n  protected getColor(): { color: string } {\n    return {\n      color: this.props.color ? this.props.color : this.getDefaultColor()\n    };\n  }\n\n  protected getStyle(): any {\n    return styles.text;\n  }\n\n  protected getDefaultColor(): string {\n    return styleSchema.color.black;\n  }\n}\n\nconst styles = {\n  text: {\n    margin: 0\n  }\n};\n","import React, { Component } from \"react\";\nimport { styleSchema, H1 } from \"./\";\n\nexport default class H5 extends H1 {\n  render() {\n    return (\n      <h5\n        style={{ ...this.getStyle(), ...this.getColor(), ...this.props.style }}\n      >\n        {this.props.children}\n      </h5>\n    );\n  }\n\n  protected getDefaultColor(): string {\n    return styleSchema.color.greyDark;\n  }\n}\n","import React, { ReactNode } from \"react\";\nimport { ExpandMore, ExpandLess } from \"@material-ui/icons\";\nimport { View, H5 } from \".\";\nimport { styleSchema } from \"./stylesheet\";\nimport { Button } from \"@material-ui/core\";\nimport ApplicationComponent from \"./applicationComponent\";\n\nexport interface Props {\n  children?: React.ReactNode;\n  collapsedHeight?: number;\n  contents: React.ReactNode;\n  onClick: (any?: any) => void;\n  title?: string;\n}\n\nexport interface State {\n  contentNeedCollapse: boolean;\n  isCollapsed: boolean;\n}\n\nexport default class LocalDealCard extends ApplicationComponent<Props, State> {\n  private contentRef: HTMLDivElement | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      contentNeedCollapse: true,\n      isCollapsed: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      contentNeedCollapse: (this.contentRef?.clientHeight ?? 0) > 180\n    });\n  }\n\n  render() {\n    return (\n      <View borderBottom={1} style={styles.rootContainer}>\n        <this.ContentBody\n          content={this.props.contents}\n          contentNeedCollapse={this.state.contentNeedCollapse}\n          isCollapsed={this.state.isCollapsed}\n        />\n        <this.BottomToolBar />\n      </View>\n    );\n  }\n\n  protected BottomToolBar = () => {\n    return (\n      <View isFlexDirectionRow style={styles.bottonToolBar}>\n        <View style={{ alignSelf: \"flex-start\" }}>{this.props.children}</View>\n        <View style={{ alignSelf: \"flex-end\" }}>\n          <this.ExpandSign />\n        </View>\n      </View>\n    );\n  };\n\n  protected ExpandLessSign = () => {\n    return (\n      <>\n        <H5 style={{ color: styleSchema.color.primaryColor }}>\n          {this.appContext.labels.localDealCardPage.collapse}\n        </H5>\n        <ExpandLess style={styles.expandSignIcon} />\n      </>\n    );\n  };\n\n  protected ExpandMoreSign = () => {\n    return (\n      <>\n        <H5 style={{ color: styleSchema.color.primaryColor }}>\n          {this.appContext.labels.localDealCardPage.expand}\n        </H5>\n        <ExpandMore style={styles.expandSignIcon} />\n      </>\n    );\n  };\n\n  protected ExpandSign = () => {\n    if (this.state.contentNeedCollapse) {\n      return (\n        <Button onClick={this.onClickedContent} style={styles.expandSignButton}>\n          {this.state.isCollapsed ? (\n            <this.ExpandMoreSign />\n          ) : (\n            <this.ExpandLessSign />\n          )}\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  protected ContentBody = ({\n    content,\n    contentNeedCollapse,\n    isCollapsed\n  }: {\n    content: ReactNode;\n    contentNeedCollapse: boolean;\n    isCollapsed: boolean;\n  }) => {\n    const style =\n      contentNeedCollapse && isCollapsed\n        ? styles.contentCollapsedStyle\n        : styles.contentOpenedStyle;\n    return (\n      <View\n        style={{ ...styles.contentContainer, ...style }}\n        onClick={this.onClickedContent}\n      >\n        <div\n          // TODO not sure if this is correct\n          style={{ width: \"inherit\" }}\n          ref={contentRef => {\n            this.contentRef = contentRef;\n          }}\n        >\n          {content}\n        </div>\n      </View>\n    );\n  };\n\n  protected onClickedContent = () => {\n    this.setState({\n      isCollapsed: !this.state.isCollapsed\n    });\n  };\n}\n\nconst styles = {\n  bottonToolBar: {\n    justifyContent: \"space-between\",\n    width: \"inherit\"\n  },\n  contentCollapsedStyle: {\n    height: \"150px\",\n    overflow: \"hidden\"\n  },\n  contentContainer: {\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  },\n  contentOpenedStyle: {},\n  expandSignButton: {\n    backgroundColor: styleSchema.color.primaryColorTransparent,\n    padding: 3,\n    paddingLeft: 15,\n    paddingRight: 5\n  },\n  expandSignIcon: {\n    color: styleSchema.color.primaryColor\n  },\n  rootContainer: {\n    backgroundColor: styleSchema.color.white,\n    borderColor: styleSchema.common.borderColor,\n    padding: 20,\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styleSchema } from \"./\";\nimport { StyleSheet } from \"./stylesheet\";\n\nconst overrideStyles = (style: StyleSheet) => {\n  let textFieldStyles = style.textField;\n  return {\n    notchedOutline: {\n      borderColor: textFieldStyles.borderColor,\n      borderRadius: textFieldStyles.borderRadius,\n      borderWidth: textFieldStyles.borderWidth\n    }\n  };\n};\n\nexport interface Props {\n  classes?: any;\n  children?: React.ReactNode;\n  defaultValue?: string;\n  onBlur?: () => void;\n  onChange: (textInput: any) => void;\n  onFocus?: () => void;\n  text: string;\n  style?: any;\n}\n\nclass LocalDealTextField extends ApplicationComponent<Props> {\n  render() {\n    let onBlurFunction = this.props.onBlur ? this.props.onBlur : () => {};\n    let onFocusFunction = this.props.onFocus ? this.props.onFocus : () => {};\n    return (\n      <TextField\n        defaultValue={this.props.defaultValue}\n        InputProps={{\n          classes: {\n            notchedOutline: this.props.classes.notchedOutline\n          }\n        }}\n        label={this.props.text}\n        onBlur={() => onBlurFunction()}\n        onChange={text => this.props.onChange(text.target.value)}\n        onFocus={() => onFocusFunction()}\n        style={{ ...styles.textFieldStyle, ...this.props.style }}\n        variant=\"outlined\"\n      >\n        {this.props.children}\n      </TextField>\n    );\n  }\n}\n\nconst styles = {\n  textFieldStyle: {\n    width: \"inherit\"\n  }\n};\n\nexport default withStyles(overrideStyles(styleSchema))(LocalDealTextField);\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { UPLOAD_IMAGE } from \"./middleware/service\";\nimport Resizer from \"react-image-file-resizer\";\nimport { isObject } from \"util\";\nimport loadImage from \"blueimp-load-image\";\n\n// var Delta = Quill.import(\"delta\");\n\n// const richTextEditorOptions = [\n//   [{ color: [] }], // dropdown with defaults from theme\n//   [\"bold\", \"italic\", \"strike\", { header: [1, false] }, { align: [] }], // toggled buttons\n//   //   [\"blockquote\", \"code-block\"],\n//   [\"image\"],\n//   [\"link\"],\n//   //   [{ header: 1 }, { header: 2 }], // custom button values\n//   [{ list: \"ordered\" }, { list: \"bullet\" }],\n//   //   [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n//   //   [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n//   //   [{ direction: \"rtl\" }], // text direction\n\n//   //   [{ size: [\"small\", \"medium\", \"large\", \"huge\"] }], // custom dropdown\n//   //   [{ font: [] }],\n//   [\"clean\"] // remove formatting button,\n// ];\n\n// const modules = {\n//   toolbar\n// };\n\n// var Parchment = Quill.import(\"parchment\");\n// var offsetAttributor = new Parchment.Attributor.Attribute(\n//   \"nameClass\",\n//   \"class\",\n//   {\n//     scope: Parchment.Scope.INLINE\n//   }\n// );\n// Quill.register(offsetAttributor);\n\nexport interface Props {\n  onChangeValue: (value: string) => void;\n  style?: any;\n}\n\nexport default class RichTextEditor extends ApplicationComponent<Props> {\n  // private line: number = 0;\n  private quillRef: any;\n\n  render() {\n    return (\n      <ReactQuill\n        ref={ref => (this.quillRef = ref)}\n        modules={{ toolbar: [\"image\"] }}\n        onChange={(content, delta, source, editor) => {\n          if (source === \"user\") {\n            if (delta.ops?.length) {\n              delta.ops.forEach(line => {\n                if (isObject(line.insert) && line.insert.image) {\n                  console.log(\"got image\");\n                  fetch(line.insert.image)\n                    .then(base64 => base64.blob())\n                    .then(blob => {\n                      this.fixRotationOfFile(blob);\n                    })\n                    .then(fixedImage => {\n                      console.log(\"about to insert!!!\", fixedImage);\n                      this.quillRef\n                        .getEditor()\n                        .insertEmbed(0, \"image\", fixedImage);\n                    });\n                }\n              });\n            }\n          }\n          this.props.onChangeValue(content);\n        }}\n        // placeholder={\n        //   this.appContext.labels.createDealPage.descriptionPlaceHolder\n        // }\n        // style={{ ...styles.quillStyle, ...this.props.style }}\n      ></ReactQuill>\n    );\n  }\n\n  protected fixRotationOfFile(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      loadImage(\n        file,\n        (img: any) => {\n          console.log(\"fixRotationOfFilee\");\n          // resolve(img.toDataURL(\"image/jpeg\"));\n          this.quillRef\n            .getEditor()\n            .insertEmbed(0, \"image\", img.toDataURL(\"image/jpeg\"));\n        },\n        { maxWidth: 300, orientation: true }\n      );\n    });\n  }\n\n  // protected createNewFormData(\n  //   content: any,\n  //   name: string = \"content\",\n  //   fileName: string = \"newFile\"\n  // ): FormData {\n  //   console.log(\"create new FormData object\");\n  //   const newFormData: FormData = new FormData();\n  //   newFormData.append(name, content, fileName);\n  //   return newFormData;\n  // }\n\n  // protected modules() {\n  //   return {\n  //     toolbar: {\n  //       container: richTextEditorOptions\n  //     }\n  //   };\n  // }\n\n  // protected getCurrentIndex(): number {\n  //   const currentIndex: number = this.quillRef.getEditor().getSelection().index;\n  //   return currentIndex;\n  // }\n\n  // protected async getImageInfo(\n  //   file: File\n  // ): Promise<{ height: number; size: number; type: string; width: number }> {\n  //   return new Promise((resolve, reject) => {\n  //     const image = new Image();\n  //     image.src = URL.createObjectURL(file);\n  //     image.onload = () => {\n  //       console.debug(\n  //         `type:${file.type} size:${file.size} height:${image.height} width:${image.width}`\n  //       );\n  //       return resolve({\n  //         height: image.height,\n  //         size: file.size,\n  //         type: file.type,\n  //         width: image.width\n  //       });\n  //     };\n  //   });\n  // }\n\n  // protected imageResize(\n  //   file: File,\n  //   imageType: string,\n  //   height: number,\n  //   width: number,\n  //   quality: number\n  // ): Promise<File> {\n  //   return new Promise((resolve, reject) => {\n  //     const callBackFunction = (processedImage: File) => {\n  //       resolve(processedImage);\n  //     };\n  //     Resizer.imageFileResizer(\n  //       file,\n  //       width,\n  //       height,\n  //       imageType,\n  //       quality,\n  //       0,\n  //       callBackFunction,\n  //       \"blob\"\n  //     );\n  //   });\n  // }\n\n  // protected centerAlignLine(): void {\n  //   const currentIndex: number = this.getCurrentIndex();\n  //   this.quillRef\n  //     .getEditor()\n  //     .formatLine(currentIndex, currentIndex + 1, \"align\", \"center\");\n  // }\n\n  // protected leftAlignLine(): void {\n  //   const currentIndex: number = this.getCurrentIndex();\n  //   this.quillRef\n  //     .getEditor()\n  //     .formatLine(currentIndex, currentIndex + 1, \"align\", \"\");\n  // }\n\n  // // protected createImageElement(imageUrl: string): HTMLImageElement {\n  // //   const image: HTMLImageElement = document.createElement(\"img\");\n  // //   image.src = imageUrl;\n  // //   image.setAttribute(\"style\", \"width:10px\");\n  // //   return image;\n  // // }\n\n  // protected createNewLine() {\n  //   this.quillRef.getEditor().insertText(this.getCurrentIndex(), \"\\n\");\n  // }\n\n  // imageHandler = async (file: any) => {\n  //   console.log(\"enter image handler function\");\n  //   console.debug(\"original\");\n  //   const originalImageInfo = await this.getImageInfo(file);\n  //   // resize image according to height, width and quality\n  //   const processedImage = await this.imageResize(\n  //     file,\n  //     originalImageInfo.type,\n  //     originalImageInfo.height,\n  //     originalImageInfo.width / 5,\n  //     10\n  //   );\n  //   // just print file detail in log, no functionality\n  //   console.debug(\"processed\");\n  //   this.getImageInfo(processedImage);\n  //   // create a FormData object inorder to submit it as Multipart file for REST controller\n  //   const formData: FormData = new FormData();\n  //   formData.append(\"image\", processedImage, \"image\");\n  //   // upload image\n  //   this.appContext.serviceExecutor\n  //     .execute(UPLOAD_IMAGE(formData))\n  //     .then(response => {\n  //       this.onImageSucceedUpload(response.url);\n  //     });\n  // };\n\n  // protected async onImageSucceedUpload(imageUrl: string) {\n  //   this.removePreviousInput();\n  //   this.quillRef\n  //     .getEditor()\n  //     .insertEmbed(this.getCurrentIndex(), \"image\", imageUrl);\n  //   this.setCursorAtNextIndex();\n  //   this.centerAlignLine();\n  //   this.createNewLine();\n  //   this.leftAlignLine();\n  // }\n\n  // protected removePreviousInput(): void {\n  //   const currentIndex: number = this.getCurrentIndex();\n  //   console.log(\"remove content at index:\", currentIndex);\n  //   this.quillRef.getEditor().deleteText(currentIndex - 1, 1);\n  // }\n\n  // protected setLine(lineNumber: number): void {\n  //   this.line = lineNumber;\n  // }\n\n  // protected setCursorAtNextIndex(): void {\n  //   const currentIndex: number = this.getCurrentIndex();\n  //   this.quillRef.getEditor().setSelection(currentIndex + 1, currentIndex + 1);\n  // }\n}\n\nconst styles = {\n  quillStyle: {\n    borderRadius: 5,\n    width: \"inherit\"\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Button } from \"@material-ui/core\";\nimport { H5, View } from \".\";\nimport { styleSchema } from \"./stylesheet\";\n\nexport interface Props {\n  onClickPrimaryButton: () => void;\n  onClickSecondaryButton: () => void;\n  primaryButtonLabel: string;\n  secondaryButtonLabel: string;\n  style?: any;\n}\n\nexport default class TwinButton extends ApplicationComponent<Props> {\n  render() {\n    let {\n      onClickPrimaryButton,\n      onClickSecondaryButton,\n      primaryButtonLabel,\n      secondaryButtonLabel\n    } = this.props;\n    return (\n      <View\n        isFlexDirectionRow={true}\n        style={{ ...styles.rootContainer, ...this.props.style }}\n      >\n        <Button\n          onClick={() => onClickPrimaryButton()}\n          style={styles.primaryButton}\n          variant={\"outlined\"}\n        >\n          <H5 style={styles.primaryButtonText}>{primaryButtonLabel}</H5>\n        </Button>\n        <Button onClick={() => onClickSecondaryButton()} variant={\"outlined\"}>\n          <H5>{secondaryButtonLabel}</H5>\n        </Button>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  rootContainer: {\n    justifyContent: \"space-around\",\n    marginLeft: 20,\n    marginRight: 20,\n    width: \"inherit\"\n  },\n  primaryButton: {\n    backgroundColor: styleSchema.color.primaryColor\n  },\n  primaryButtonText: {\n    color: styleSchema.color.white\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"./applicationComponent\";\nimport { Box, BoxProps } from \"@material-ui/core\";\n\ninterface Props extends BoxProps {\n  alignItems?: string;\n  chindren?: React.ReactNode;\n  isFlexDirectionRow?: boolean;\n  justifyContent?: string;\n  onClick?: () => void;\n  style?: any;\n}\n\nexport default class View extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection={this.props.isFlexDirectionRow ? \"row\" : \"column\"}\n        alignItems={this.props.alignItems ? this.props.alignItems : \"start\"}\n        justifyContent={\n          this.props.justifyContent ? this.props.justifyContent : \"start\"\n        }\n        onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        style={this.props.style}\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport Deal, { Address } from \"../../modal/deal\";\nimport {\n  LocalDealCard,\n  H1,\n  H5,\n  LocalDealTextField,\n  styleSchema,\n  View,\n  AddressDisplay,\n  CardBottomVote\n} from \"../../common\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface Props {\n  deals: Deal[];\n  executeGetDeals: () => void;\n  isLoadingDeals: boolean;\n  onBlurTextField: () => void;\n  onClickCard: () => void;\n  onClickDealSection: () => void;\n  onClickSearch: () => void;\n  onChangeSearchTextField: (text: string) => void;\n  onFocusTextField: () => void;\n  selectedAddress: Address;\n  showSearchButton: boolean;\n  textFieldValue: string;\n}\n\nexport default class LandingPageView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View style={styles.rootContainer}>\n        <this.BodySection />\n      </View>\n    );\n  }\n\n  BodySection = () => {\n    return <this.DealsSection />;\n  };\n\n  DealsSection = () => {\n    const dealsContent = this.props.deals ? this.props.deals : [];\n    const dealsCard = dealsContent.map(deal => {\n      const content: React.ReactNode = this.generateCardContent(deal);\n      return (\n        <LocalDealCard\n          contents={content}\n          onClick={() => this.props.onClickCard()}\n          title={deal.title}\n        >\n          <CardBottomVote deal={deal} />\n        </LocalDealCard>\n      );\n    });\n    const dealSection = () => {\n      if (dealsCard.length) {\n        return dealsCard;\n      } else if (this.props.isLoadingDeals) {\n        return <this.LoadingDeals />;\n      } else {\n        return <this.NoDealInArea />;\n      }\n    };\n    return (\n      <View\n        boxShadow={dealsCard.length ? 1 : 0}\n        style={styles.dealSectionContainer}\n      >\n        {/* {dealsCard.length ? dealsCard : <this.NoDealInArea />} */}\n        {dealSection}\n      </View>\n    );\n  };\n\n  LoadingDeals = () => {\n    return (\n      <View style={styles.noDealInAreaContainer}>\n        <H5>{this.appContext.labels.landingPage.loadingDeals}</H5>\n      </View>\n    );\n  };\n\n  NoDealInArea = () => {\n    return (\n      <View style={styles.noDealInAreaContainer}>\n        <H5>{this.appContext.labels.landingPage.noDeal}</H5>\n      </View>\n    );\n  };\n\n  SearchButton = () => {\n    return this.props.showSearchButton ? (\n      <Button\n        onClick={() => this.props.onClickSearch()}\n        style={styles.searchButton}\n        variant=\"outlined\"\n      >\n        <H5 color={styleSchema.font.white}>{\"Need Label - 搜尋\"}</H5>\n      </Button>\n    ) : null;\n  };\n\n  TextFieldArea = () => {\n    return (\n      <LocalDealTextField\n        defaultValue={this.props.textFieldValue}\n        onBlur={() => this.props.onBlurTextField()}\n        onChange={text => this.props.onChangeSearchTextField(text)}\n        onFocus={() => this.props.onFocusTextField()}\n        text={this.appContext.labels.landingPage.area}\n      />\n    );\n  };\n\n  protected generateCardContent = (deal: Deal): React.ReactNode => {\n    let {\n      address,\n      category,\n      discussions,\n      description,\n      title,\n      timeAvailable,\n      timestamp,\n      vote\n    } = deal;\n    return (\n      <>\n        <View isFlexDirectionRow={true} style={styles.cardContainer}>\n          <H1>{title}</H1>\n          <H5>\n            {timestamp\n              ? this.appContext.transformer.timeDifferentCalcualtor(timestamp)\n              : this.appContext.labels.date.unknown}\n          </H5>\n        </View>\n        <View style={styles.detailSectionContainer}>\n          <AddressDisplay address={address} />\n          <div\n            style={{ width: \"inherit\" }}\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n          {/* <ReactQuill value={description} readOnly={true} /> */}\n        </View>\n      </>\n    );\n  };\n}\n\nconst styles = {\n  cardContainer: {\n    justifyContent: \"space-between\"\n  },\n  circularProgress: {\n    marginLeft: 5\n  },\n  createNewButton: {\n    borderColor: styleSchema.color.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    borderWidth: 3\n  },\n  dealSectionContainer: {\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  detailSectionContainer: {\n    width: \"inherit\",\n    textAlign: \"justify\"\n  },\n  locationButtonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  noDealInAreaContainer: {},\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 15\n  },\n  searchButton: {\n    borderColor: styleSchema.remind.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    backgroundColor: styleSchema.remind.secondaryColor,\n    borderWidth: 3\n  },\n  searchMethodLabel: {\n    coordinate: {\n      borderColor: styleSchema.remind.primaryColor,\n      borderRadius: styleSchema.button.borderRadius,\n      backgroundColor: styleSchema.remind.primaryColor,\n      borderWidth: 3,\n      paddingBottom: 5,\n      paddingTop: 5\n    },\n    manual: {\n      borderColor: styleSchema.remind.secondaryColor,\n      borderRadius: styleSchema.button.borderRadius,\n      backgroundColor: styleSchema.remind.secondaryColor,\n      borderWidth: 3,\n      paddingBottom: 5,\n      paddingTop: 5\n    }\n  },\n  topBarContainer: {\n    justifyContent: \"space-between\",\n    paddingTop: 15,\n    width: \"100%\"\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport Deal, { Coordinate, Address, GetDealResponse } from \"../../modal/deal\";\nimport { LandingPageView } from \".\";\nimport {\n  GET_CURRENT_ADDRESS,\n  GET_DEALS\n} from \"../../common/middleware/service\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { connect } from \"react-redux\";\nimport {\n  setAddressPrediction,\n  setDeals,\n  setGeolocation,\n  setLoadingPosition\n} from \"../../common/redux/action\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport \"../../App.css\";\n\nexport interface Props {\n  addressesPrediction: Address[];\n  position: CurrentArea;\n  deals: Deal[];\n  selectedAddress: Address;\n  setAddressPrediction?: any;\n  setDeals?: any;\n  setGeolocation?: any;\n  setLoadingPosition?: any;\n}\n\nexport interface State {\n  isCreateDealDrawerOpen: boolean;\n  isLoading: boolean;\n  showSearchButton: boolean;\n  textFieldValue: string;\n  useAutoLocation: boolean;\n}\n\nexport class LandingPage extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      isLoading: true,\n      showSearchButton: false,\n      textFieldValue: \"\",\n      useAutoLocation: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.setCurrentPosition();\n    await this.setCurrentAddress();\n    await this.executeGetDeals();\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          console.debug(\"Current Coordinate: \", coordinate);\n          this.props.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.props.position.coordinate\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.props.setAddressPrediction(addresses);\n          this.props.setLoadingPosition(false);\n          return resolve();\n        });\n    });\n  }\n\n  protected onBlurTextField = () => {\n    // need to complete\n    console.log(\"onBlurTextField\");\n  };\n\n  protected onClickedCard = () => {\n    // need to complete\n    console.log(\"Card Clicked\");\n  };\n\n  protected onClickedDealSection = () => {\n    // need to complete\n    console.log(\"onClickedDealSection\");\n    this.setState({\n      showSearchButton: false\n    });\n  };\n\n  protected onClickSearch = () => {\n    // need to complete\n    console.log(\"onClickSearch\");\n    // this.setState({\n    //   showSearchButton: false\n    //   Disable this for now, user need internet to access the service anyway\n    //   useAutoLocation: false\n    // });\n    // this.getDeals();\n  };\n\n  protected onClickDownVote = () => {\n    console.log(\"onClickDownVote\");\n  };\n\n  protected onClickUpVote = () => {\n    console.log(\"onClickUpVote\");\n  };\n\n  protected onChangeSearchTextField = (textFieldValue: string) => {\n    // TODO need to think about if we need to allow user to search by area. because user will have coordinate by their location.\n    // search can be only for item!!!!!!!\n    // need to complete\n    console.log(\"onChangeSearchTextField\");\n    this.setState({\n      // currentSearchArea: { areaName: textFieldValue }\n    });\n  };\n\n  protected onFocusTextField = () => {\n    // need to complete\n    console.log(\"onFocusTextField\");\n    this.setState({\n      showSearchButton: true\n    });\n  };\n\n  protected executeGetDeals = () => {\n    if (this.props.selectedAddress.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.props.selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.props.setDeals(getDealResponse);\n          this.setState({\n            isLoading: false\n          });\n        });\n    }\n  };\n\n  protected sortDeals(inputDeals: Deal[]): Deal[] {\n    return inputDeals.sort((deal1, deal2) => {\n      return deal2.timestamp - deal1.timestamp;\n    });\n  }\n\n  render() {\n    let {\n      isCreateDealDrawerOpen,\n      showSearchButton,\n      textFieldValue,\n      useAutoLocation\n    } = this.state;\n    // sort deal\n    const sortedDeal: Deal[] = this.sortDeals(\n      this.props.deals ? this.props.deals : []\n    );\n    return (\n      <LandingPageView\n        deals={sortedDeal}\n        executeGetDeals={this.executeGetDeals}\n        isLoadingDeals={this.state.isLoading}\n        onBlurTextField={this.onBlurTextField}\n        onClickCard={this.onClickedCard}\n        onClickDealSection={this.onClickedDealSection}\n        onClickSearch={this.onClickSearch}\n        onChangeSearchTextField={this.onChangeSearchTextField}\n        onFocusTextField={this.onFocusTextField}\n        selectedAddress={this.props.selectedAddress}\n        showSearchButton={showSearchButton}\n        textFieldValue={textFieldValue}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressesPrediction: state.addressesPrediction,\n  deals: state.deals,\n  position: state.position,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, {\n  setAddressPrediction,\n  setDeals,\n  setGeolocation,\n  setLoadingPosition\n})(LandingPage);\n","import Deal, { Address, GetDealResponse, Coordinate } from \"../../modal/deal\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { ReduxActopnTypes } from \"./action\";\n\nexport interface ReduxState {\n  addressesPrediction: Address[];\n  deals: Deal[];\n  isLoadingPosition: boolean;\n  position: CurrentArea;\n  selectedAddress: Address;\n}\n\nconst initialState: ReduxState = {\n  addressesPrediction: [],\n  deals: [],\n  isLoadingPosition: true,\n  position: {\n    areaName: \"\",\n    coordinate: {\n      latitude: 0,\n      longitude: 0\n    }\n  },\n  selectedAddress: {\n    area: \"\",\n    street1: \"\",\n    street2: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    zipCode: \"\"\n  }\n};\n\nexport default function(state: ReduxState = initialState, action: any) {\n  console.log(\"Redux\", action.type);\n  switch (action.type) {\n    case ReduxActopnTypes.SET_ADDRESS_PREDICTION:\n      return setAddressPrediction(state, action.payload);\n    case ReduxActopnTypes.SET_DEALS:\n      return setDeals(state, action.payload);\n    case ReduxActopnTypes.SET_GEOLOCATION:\n      return setPosition(state, action.payload);\n    case ReduxActopnTypes.SET_LOADING_POSITION:\n      return setLoadingPosition(state, action.payload);\n    case ReduxActopnTypes.SET_SELECTED_ADDRESS:\n      return setSelectedAddress(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nconst setAddressPrediction = (\n  state: ReduxState,\n  addressesPrediction: Address[]\n) => {\n  return {\n    ...state,\n    addressesPrediction\n  };\n};\n\nconst setDeals = (\n  state: ReduxState,\n  getDealsResponse: GetDealResponse\n): ReduxState => {\n  return {\n    ...state,\n    deals: getDealsResponse.deals\n  };\n};\n\nconst setLoadingPosition = (\n  state: ReduxState,\n  isLoadingPosition: boolean\n): ReduxState => {\n  return {\n    ...state,\n    isLoadingPosition\n  };\n};\n\nconst setPosition = (state: ReduxState, coordinate: Coordinate): ReduxState => {\n  return {\n    ...state,\n    position: {\n      coordinate\n    }\n  };\n};\n\nconst setSelectedAddress = (\n  state: ReduxState,\n  selectedAddress: Address\n): ReduxState => {\n  return {\n    ...state,\n    selectedAddress\n  };\n};\n","import reducers from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\nconst middleWare = [thunk];\nexport const store = createStore(reducers, applyMiddleware(...middleWare));\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport {\n  H1,\n  H5,\n  LocalDealTextField,\n  AddressDisplay,\n  View,\n  TwinButton,\n  RichTextEditor,\n  styleSchema\n} from \"../../common\";\nimport { Address } from \"../../modal/deal\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface Props {\n  currentAddress: Address;\n  hasTitle: boolean;\n  hasDescription: boolean;\n  onChangeRichTextValue: (value: string) => void;\n  onChangeTitleTextField: (value: string) => void;\n  onClickClose: () => void;\n  onClickSubmit: () => void;\n  useAutoPosition: boolean;\n}\n\nexport default class CreateDealLandingPageView extends ApplicationComponent<\n  Props\n> {\n  render() {\n    return (\n      <View style={styles.rootContainer}>\n        <this.HeaderSection />\n        <this.AddressSection />\n        <this.TitleTextField />\n        <this.HourOfOperationSection />\n        <this.DescriptionTextField />\n        <this.ButtonSection />\n      </View>\n    );\n  }\n\n  AddressSection = () => {\n    return (\n      <View style={styles.addressSectionContainer}>\n        {this.props.useAutoPosition ? (\n          <this.AddressAutoPositionDisplay />\n        ) : (\n          <this.AddressTextField />\n        )}\n      </View>\n    );\n  };\n\n  AddressAutoPositionDisplay = () => {\n    return <AddressDisplay address={this.props.currentAddress} />;\n  };\n\n  AddressTextField = () => {\n    return null;\n  };\n\n  ButtonSection = () => {\n    let label = this.appContext.labels.createDealPage;\n    return (\n      <TwinButton\n        onClickPrimaryButton={() => this.props.onClickSubmit()}\n        onClickSecondaryButton={() => this.props.onClickClose()}\n        primaryButtonLabel={label.create}\n        secondaryButtonLabel={label.cancel}\n        style={styles.buttonSection}\n      />\n    );\n  };\n\n  DescriptionTextField = () => {\n    return (\n      <View style={styles.descriptionContainer}>\n        <this.DescriptionMissing />\n        <RichTextEditor\n          onChangeValue={this.props.onChangeRichTextValue}\n          style={styles.richTextEditor}\n        />\n      </View>\n    );\n  };\n\n  DescriptionMissing = () => {\n    return this.props.hasDescription ? null : (\n      <this.MissingContentText\n        label={this.appContext.labels.createDealPage.descriptionMissing}\n      />\n    );\n  };\n\n  HeaderSection = () => {\n    let label = this.appContext.labels.createDealPage;\n    return (\n      <View style={styles.headerContainer} isFlexDirectionRow={true}>\n        <H1>{label.header}</H1>\n        <Button onClick={() => this.props.onClickClose()}>\n          <H5>{label.close}</H5>\n        </Button>\n      </View>\n    );\n  };\n\n  HourOfOperationSection = () => {\n    return null;\n  };\n\n  MissingContentText = ({ label }: { label: string }) => {\n    return <H5 style={styles.missingContentText}>{label}</H5>;\n  };\n\n  TitleMissing = () => {\n    return this.props.hasTitle ? null : (\n      <this.MissingContentText\n        label={this.appContext.labels.createDealPage.titleMissing}\n      />\n    );\n  };\n\n  TitleTextField = () => {\n    return (\n      <View style={styles.titleTextFiledContainer}>\n        <this.TitleMissing />\n        <LocalDealTextField\n          onChange={this.props.onChangeTitleTextField}\n          text={this.appContext.labels.createDealPage.textFieldTitle}\n          style={styles.titleTextField}\n        />\n      </View>\n    );\n  };\n}\n\nconst styles = {\n  addressSectionContainer: {\n    marginTop: 5,\n    width: \"inherit\"\n  },\n  buttonSection: {\n    margin: 10\n  },\n  headerContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: 10,\n    width: \"100%\"\n  },\n  missingContentText: {\n    color: styleSchema.color.red,\n    marginTop: 5\n  },\n  descriptionContainer: {\n    marginTop: 10,\n    width: \"inherit\"\n  },\n  richTextEditor: {\n    marginTop: 5\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: 20,\n    marginRight: 20,\n    width: styleSchema.dimension.FILL_ALL_WIDTH\n  },\n  titleTextField: {\n    marginTop: 5\n  },\n  titleTextFiledContainer: {\n    justifyContent: \"center\",\n    marginTop: 10,\n    width: \"inherit\"\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { CreateDealLandingPageView } from \".\";\nimport Deal, { Address, GetDealResponse } from \"../../modal/deal\";\nimport { CREATE_DEAL, GET_DEALS } from \"../../common/middleware/service\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport { setDeals } from \"../../common/redux/action\";\nimport { connect } from \"react-redux\";\n\nexport interface Props {\n  currentAddress: Address;\n  onClickClose: () => void;\n  setDeals?: any;\n}\n\nexport interface State {\n  hasTitle: boolean;\n  hasDescription: boolean;\n  richTextValue: string;\n  title: string;\n  useAutoPosition: boolean;\n}\n\nexport class CreateDealLandingPage extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasTitle: true,\n      hasDescription: true,\n      richTextValue: \"\",\n      title: \"\",\n      useAutoPosition: true\n    };\n  }\n\n  render() {\n    return (\n      <CreateDealLandingPageView\n        currentAddress={this.props.currentAddress}\n        hasDescription={this.state.hasDescription}\n        hasTitle={this.state.hasTitle}\n        onChangeRichTextValue={this.onChangeRichTextValue}\n        onChangeTitleTextField={this.onChangeTitleTextField}\n        onClickClose={() => this.props.onClickClose()}\n        onClickSubmit={this.onClickSubmit}\n        useAutoPosition={this.state.useAutoPosition}\n      />\n    );\n  }\n\n  protected onChangeRichTextValue = (richTextValue: string) => {\n    this.setState({\n      richTextValue\n    });\n  };\n\n  protected onChangeTitleTextField = (title: string) => {\n    this.setState({\n      title\n    });\n  };\n\n  protected onClickSubmit = async () => {\n    await this.validateDescription();\n    await this.validateTitle();\n    if (this.state.hasDescription && this.state.hasTitle) {\n      await this.appContext.serviceExecutor.execute(\n        CREATE_DEAL(this.generateDeal())\n      );\n      this.props.onClickClose();\n      await this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.props.currentAddress))\n        .then((getDealResponse: GetDealResponse) =>\n          this.props.setDeals(getDealResponse)\n        );\n    }\n  };\n\n  protected generateDeal(): Deal {\n    return {\n      address: this.props.currentAddress,\n      description: this.state.richTextValue,\n      serverIdentifierName: \"\", // TODO - this might not be correct!!!\n      timestamp: 0,\n      title: this.state.title\n    };\n  }\n\n  protected validateDescription() {\n    this.setState({\n      hasDescription: this.state.richTextValue.length > 0\n    });\n  }\n\n  protected validateTitle() {\n    this.setState({\n      hasTitle: this.state.title.length > 0\n    });\n  }\n}\n\nconst mapStateToProps = (state: ReduxState) => ({\n  currentAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, { setDeals })(CreateDealLandingPage);\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport { AddressPredictionView } from \".\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport { connect } from \"react-redux\";\nimport { Address, GetDealResponse } from \"../../modal/deal\";\nimport { setDeals, setSelectedAddress } from \"../../common/redux/action\";\nimport { GET_DEALS } from \"../../common/middleware/service\";\n\nexport interface Props {\n  addressPrediction: Address[];\n  isPositionLoading: boolean;\n  selectedAddress: Address;\n  setDeals?: any;\n  setSelectedAddress?: any;\n}\n\nexport class AddressPrediction extends ApplicationComponent<Props> {\n  render() {\n    this.setDefaultSelectedAddress();\n    return null;\n    // <AddressPredictionView\n    //   addressPrediction={this.props.addressPrediction}\n    //   isPositionLoading={this.props.isPositionLoading}\n    //   onSelectAddress={this.onSelectAddress}\n    // />\n  }\n\n  protected setDefaultSelectedAddress() {\n    if (\n      this.props.addressPrediction.length > 0 &&\n      !this.props.selectedAddress.area\n    ) {\n      this.onSelectAddress();\n    }\n  }\n\n  protected onSelectAddress = (index: number = 0) => {\n    if (this.props.addressPrediction) {\n      const selectedAddress: Address = this.props.addressPrediction[index];\n      this.props.setSelectedAddress(selectedAddress);\n    }\n  };\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressPrediction: state.addressesPrediction,\n  isPositionLoading: state.isLoadingPosition,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps, { setDeals, setSelectedAddress })(\n  AddressPrediction\n);\n","import React, { Component } from \"react\";\nimport { Tooltip, Button } from \"@material-ui/core\";\n\ninterface Props {\n  children: React.ReactNode;\n  title: string;\n}\n\nexport default class ToolTips extends Component<Props> {\n  render() {\n    return (\n      <Tooltip disableTouchListener title={this.props.title}>\n        <Button style={{ padding: 0, minWidth: 0 }}>\n          {this.props.children}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React, { ReactNode, ReactElement } from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\n\nimport { Address } from \"../../modal/deal\";\nimport { H5, styleSchema, View, H4 } from \"../../common\";\nimport { Drawer } from \"@material-ui/core\";\nimport { CreateDealLandingPage } from \"../createDealLandingPage\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { AddressPrediction } from \"../addressPrediction\";\nimport logo from \"../../resouces/logo_icon_character-min.png\";\nimport {\n  Add as AddIcon,\n  Menu as HamburgerMenuIcon,\n  Room as LocationIcon\n} from \"@material-ui/icons\";\nimport ToolTips from \"../../common/ToolTips\";\n\nexport interface Props {\n  isCreateDealDrawerOpen: boolean;\n  isHamburgerMenuDrawerOpen: boolean;\n  onClickCreateDeal: () => void;\n  onClickHamburgerMenu: () => void;\n  onCloseCreateDeal: () => void;\n  onCloseHamburgerMenu: () => void;\n  onClickLocationButton: () => void;\n  selectedAddress: Address;\n}\n\nexport default class HeaderView extends ApplicationComponent<Props> {\n  render() {\n    return (\n      <View\n        boxShadow={1}\n        isFlexDirectionRow={true}\n        style={styles.rootContainer}\n      >\n        <AddressPrediction />\n        <this.CreateDealDrawer />\n        <this.HamburgerMenuDrawer />\n        <this.HeaderTextAndLogo />\n        <this.TopBarSection />\n      </View>\n      // <div className=\"App-header\">\n      // </div>\n    );\n  }\n\n  CreateDealDrawer = () => {\n    return (\n      <Drawer\n        anchor={\"top\"}\n        onClose={this.props.onCloseCreateDeal}\n        open={this.props.isCreateDealDrawerOpen}\n      >\n        <CreateDealLandingPage onClickClose={this.props.onCloseCreateDeal} />\n      </Drawer>\n    );\n  };\n\n  CreateNewDealButton = () => {\n    return (\n      <AddIcon\n        onClick={this.props.onClickCreateDeal}\n        style={styles.createNewDealIcon}\n      />\n    );\n    // return (\n    //   <Button\n    //     style={styles.createNewButton}\n    //     onClick={this.props.onClickCreateDeal}\n    //     variant=\"text\"\n    //   >\n    //     <H4>{this.appContext.labels.landingPage.createDealButton}</H4>\n    //   </Button>\n    // );\n  };\n\n  HamburgerMenu = () => {\n    if (this.appContext.showHamburgerMenu) {\n      return (\n        <View borderLeft={1} style={styles.hamburgerMenuIconContainer}>\n          <HamburgerMenuIcon\n            style={styles.hamburgerMenuIcon}\n            onClick={this.props.onClickHamburgerMenu}\n          />\n        </View>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  HamburgerMenuDrawer = () => {\n    return (\n      <Drawer\n        anchor={\"right\"}\n        onClose={this.props.onCloseHamburgerMenu}\n        open={this.props.isHamburgerMenuDrawerOpen}\n      >\n        <View>\n          <this.LocationButton />\n          <this.CreateNewDealButton />\n        </View>\n      </Drawer>\n    );\n  };\n\n  HeaderTextAndLogo = () => {\n    return (\n      <View>\n        <img alt={\"app-logo\"} src={logo} style={{ width: 100 }} />\n      </View>\n    );\n  };\n\n  LocationButton = () => {\n    const showCircularProgressor: boolean =\n      this.props.selectedAddress && this.props.selectedAddress.area !== \"\";\n    return (\n      <LocationIcon style={styles.locationIcon} />\n      // <Button\n      //   disabled={true}\n      //   onClick={this.props.onClickLocationButton}\n      //   style={styles.searchMethodLabel}\n      //   variant=\"outlined\"\n      // >\n      //   <View isFlexDirectionRow={true} style={styles.locationButtonContainer}>\n      //     <H5 color={styleSchema.font.white}>\n      //       {`${this.appContext.labels.landingPage.geolocationProvider}:`}\n      //     </H5>\n      //     {showCircularProgressor ? (\n      //       <H5 color={styleSchema.font.white}>\n      //         {this.props.selectedAddress.area}\n      //       </H5>\n      //     ) : (\n      //       <CircularProgress\n      //         size={15}\n      //         style={styles.circularProgress}\n      //         variant={\"indeterminate\"}\n      //       />\n      //     )}\n      //   </View>\n      // </Button>\n    );\n  };\n\n  TopBarSection = () => {\n    const label = this.appContext.labels.header;\n    return (\n      <View isFlexDirectionRow={true} style={styles.buttonContainer}>\n        <this.CreateNewDealButton />\n        <ToolTips\n          title={`${label.currentLocation} ${\n            this.props.selectedAddress.area\n              ? this.props.selectedAddress.area\n              : label.loading\n          }`}\n        >\n          <this.LocationButton />\n        </ToolTips>\n        <this.HamburgerMenu />\n      </View>\n    );\n  };\n}\n\nconst styles = {\n  buttonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  circularProgress: {\n    marginLeft: 5\n  },\n  createNewDealIcon: {\n    color: styleSchema.color.primaryColor,\n    ...styleSchema.icon\n  },\n  createNewButton: {\n    borderColor: styleSchema.color.secondaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    borderWidth: 3\n  },\n  hamburgerMenuIconContainer: {\n    borderColor: styleSchema.color.greyTransparent,\n    marginLeft: 18\n  },\n  hamburgerMenuIcon: {\n    color: styleSchema.color.greyDark,\n    ...styleSchema.icon\n  },\n  locationButtonContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  locationIcon: {\n    color: styleSchema.color.greenMedium,\n    ...styleSchema.icon\n  },\n  rootContainer: {\n    alignItems: \"center\",\n    backgroundColor: styleSchema.color.white,\n    borderColor: styleSchema.color.greyDark,\n    justifyContent: \"space-between\",\n    padding: 15\n  },\n  searchMethodLabel: {\n    backgroundColor: styleSchema.remind.primaryColor,\n    borderColor: styleSchema.remind.primaryColor,\n    borderRadius: styleSchema.button.borderRadius,\n    marginRight: 10,\n    borderWidth: 3,\n    paddingBottom: 5,\n    paddingTop: 5\n  }\n};\n","import React from \"react\";\nimport ApplicationComponent from \"../../common/applicationComponent\";\nimport \"../../App.css\";\nimport { HeaderView } from \".\";\nimport { ReduxState } from \"../../common/redux/reducers\";\nimport CurrentArea from \"../../modal/currentArea\";\nimport { Address } from \"../../modal/deal\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  addressesPrediction: Address[];\n  position: CurrentArea;\n  selectedAddress: Address;\n}\n\ninterface State {\n  isCreateDealDrawerOpen: boolean;\n  isHamburgerMenuDrawerOpen: boolean;\n  useAutoLocation: boolean;\n}\n\nexport class Header extends ApplicationComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isCreateDealDrawerOpen: false,\n      isHamburgerMenuDrawerOpen: false,\n      useAutoLocation: true\n    };\n  }\n\n  render() {\n    return (\n      <HeaderView\n        isCreateDealDrawerOpen={this.state.isCreateDealDrawerOpen}\n        isHamburgerMenuDrawerOpen={this.state.isHamburgerMenuDrawerOpen}\n        onClickCreateDeal={this.onClickCreateDeal}\n        onClickHamburgerMenu={this.onClickHamburgerMenu}\n        onCloseCreateDeal={this.onCloseCreateDeal}\n        onCloseHamburgerMenu={this.onCloseHamburgerMenu}\n        onClickLocationButton={this.onClickLocationButton}\n        selectedAddress={this.props.selectedAddress}\n      />\n    );\n  }\n\n  protected onClickCreateDeal = () => {\n    console.debug(\"onClickCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: true\n    });\n  };\n\n  protected onClickHamburgerMenu = () => {\n    console.debug(\"onClickHamburgerMenu\");\n    this.setState({\n      isHamburgerMenuDrawerOpen: true\n    });\n  };\n\n  protected onCloseCreateDeal = () => {\n    console.debug(\"onCloseCreateDeal\");\n    this.setState({\n      isCreateDealDrawerOpen: false\n    });\n  };\n\n  protected onCloseHamburgerMenu = () => {\n    console.debug(\"onCloseHamburgerMenu\");\n    this.setState({\n      isHamburgerMenuDrawerOpen: false\n    });\n  };\n\n  protected onClickLocationButton = () => {\n    // need to complete\n    console.debug(\"onClickLocationButton\");\n    this.setState({\n      useAutoLocation: true\n    });\n  };\n}\n\nconst mapStateToProps = (state: ReduxState): Props => ({\n  addressesPrediction: state.addressesPrediction,\n  position: state.position,\n  selectedAddress: state.selectedAddress\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nimport \"./App.css\";\nimport { LandingPage } from \"./component/landingPage\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./common/redux/store\";\nimport Header from \"./component/header/header\";\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App-header\">\n        <Header />\n      </div>\n      <div className=\"Content\">\n        <LandingPage />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}