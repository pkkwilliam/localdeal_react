{"version":3,"sources":["lazyLoad/lazyLoadComponent.ts","common/middleware/service.ts","modal/oAuthProvider.ts","common/feature/feature.ts","lazyLoad/lazyLoad.ts","common/context/appState.ts","common/localStorage.ts","common/middleware/serviceExecutor.ts","common/transformer.ts","common/appContext.ts","common/imageProcessor.ts","common/middleware/labelService.ts","common/applicationComponent.tsx","common/context/globalStateComponent.tsx","init.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LazyLoadComponent","ServiceName","CREATE_DEAL","deal","body","JSON","stringify","externalService","hasMock","isMultipartFileRequest","method","url","serviceName","GET_CURRENT_ADDRESS","currentArea","optionalRequestParam","generateCurrentAreaRequestParameter","GET_DEALS","address","generateParameter","area","GET_LABEL","fileName","generateMultipleUrlParameters","GET_PRESIGNED_URL","fileType","GET_SERVER_HEALTH","GET_USER_PROFILE","LOGIN_OAUTH_GOOGLE","authorizationCode","redirectUrl","LOGOUT_OAUTH","UPDATE_NICKNAME","nickname","UPLOAD_IMAGE_SIGNED_URL","image","signedUrl","customHeader","type","VOTE_CHANGE","dealId","liked","parameters","toString","undefined","push","console","debug","areaName","coordinate","latitude","longitude","warn","keyAndValue","parameter","length","i","key","value","OAuthProvider","Feature","getLazyComponent","component","React","lazy","Announcement","Banner","CollapseCard","CreateDeal","Drawer","Header","HeaderMenu","LandingPage","Modal","Slide","getPath","createContext","StorageType","ServiceExecutor","isMock","serviceUrl","headers","generateHeaders","endpoint","this","Promise","resolve","getResponse","requestParam","requestUrl","fetch","credentials","mode","then","result","isJsonResponse","get","match","status","json","reject","catch","exception","response","parse","ex","GET_DEALS_RESPONSE","GET_POSITION_RESPONSE","GET_SERVICE_HEALTH","deals","id","attendCount","createdBy","dealCreated","likedSum","name","imageUrl","oAuthProvider","GOOGLE","description","filesUrl","serverIdentifierName","title","timestamp","likedCount","verifiedLikedUserCount","formattedAddress","country","city","up","Transformer","dateLabel","currentDate","Date","dateCreated","timeDifference","getTime","getLabelAccrodingToTimeDifference","unknown","dayDifferent","Math","round","HOUR","day","today","callBack","navigator","geolocation","getCurrentPosition","position","coords","AppContext","ALLOW_DEAL_REFRESH","DEAL_REFRESH_TIME","APIKEY","X_MADT_APPID","X_MADT_APP_VERSION","_serviceExecutor","_transformer","isAllowDealRefresh","CREATE_DEAL_DRAFT","CONTACT_SHOW_EMAIL","HEADER_MENU","LOGIN_GOOGLE_OAUTH","LOGIN_WECHAT_OAUTH","XMADTAPPID","XMADTAPPVERSION","isProd","ImageProcessor","file","imageType","height","width","quality","Resizer","imageFileResizer","processedImage","Image","src","URL","createObjectURL","onload","size","transferToBlob","blob","getImageInfo","imageCompressQuality","imageNameSplit","split","imageCompress","originalImage","loadImage","img","toDataURL","guessImageMime","orientation","data","charAt","LabelService","localStorage","serviceExecutor","checkLabelVersion","labelName","getRequestParamLabelName","getLanguage","localStorageLabel","getLabel","localLabel","getRemoteLabelVersion","remoteLabelVersionObject","version","labelVersion","setNewLabel","getRemoteLabel","label","setLabel","execute","language","LocalStorage","clear","getItem","hideAnnouncement","hide","setItem","Label","ApplicationComponent","_localStorage","_appContext","_imageProcessor","_labelService","appContext","executeGetDeals","appState","selectedAddress","getDealResponse","setDeals","search","window","location","params","URLSearchParams","state","code","NONE","history","pushState","document","all","getServerStatus","setCurrentPosition","checkOAuthFromUrl","getUserProfile","setCurrentAddress","checkOAuth","oAuthRedirectUrl","onOAuthLoginComplete","transformer","getCurrentLocation","setGeolocation","addresses","setPredicteAddresses","setLoadingPosition","setSelectedAddress","service","setServiceUp","user","setUserProfile","context","labelLoaded","getLabels","labels","setLabels","Component","contextType","AppState","GlobalStateComponent","props","removeUserProfile","userProfile","setState","setShowBanner","show","banner","setBannerProgressMessage","progressMessage","loadingPosition","addressesPrediction","serviceUp","street1","street2","zipCode","chinese_label","Provider","children","Init","executeInit","fallback","className","App","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50552c2f.chunk.js","sourcesContent":["export enum LazyLoadComponent {\n  Announcement = \"Announcement\",\n  Banner = \"Banner\",\n  CollapseCard = \"CollapseCard\",\n  CreateDeal = \"CreateDeal\",\n  Drawer = \"Drawer\",\n  Header = \"Header\",\n  HeaderMenu = \"HeaderMenu\",\n  LandingPage = \"LandingPage\",\n  Modal = \"Modal\",\n  Slide = \"Slide\",\n}\n","import CurrentArea from \"../../modal/currentArea\";\nimport Deal, { Address } from \"../../modal/deal\";\n\nconst AREA_NAME_URL_PARAMETER: string = \"areaName\";\nconst AUTHORIZATION_CODE_PARAMETER: string = \"authorizationCode\";\nconst LATITUDE_URL_PARAMETER: string = \"latitude\";\nconst LONGITUDE_URL_PARAMETER: string = \"longitude\";\nconst REDIRECT_URL_PARAMETER: string = \"redirectUrl\";\n\nexport enum ServiceName {\n  CREATE_DEAL = \"CREATE_DEAL\",\n  GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\",\n  GET_LABEL = \"GET_LABEL\",\n  GET_DEALS = \"GET_DEALS\",\n  GET_PRESIGNED_URL = \"GET_PRESIGNED_URL\",\n  GET_SERVER_HEALTH = \"GET_SERVER_HEALTH\",\n  GET_USER_PROFILE = \"GET_USER_PROFILE\",\n  LOGIN_OAUTH_GOOGLE = \"LOGIN_OAUTH_GOOGLE\",\n  LOGOUT_OAUTH = \"LOGOUT_OAUTH\",\n  UPDATE_NICKNAME = \"UPDATE_NICKNAME\",\n  UPLOAD_IMAGE = \"UPLOAD_IMAGE\",\n  UPLOAD_IMAGE_SIGNED_URL = \"UPLOAD_IMAGE_SIGNED_URL\",\n  VOTE_CHANGE = \"VOTE_CHANGE\",\n}\n\nexport const CREATE_DEAL = (deal: Deal): Endpoint => {\n  return {\n    body: JSON.stringify(deal),\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/deals\",\n    serviceName: ServiceName.CREATE_DEAL,\n  };\n};\n\nexport const GET_CURRENT_ADDRESS = (currentArea: CurrentArea) => {\n  return {\n    externalService: false,\n    method: \"GET\",\n    hasMock: true,\n    isMultipartFileRequest: false,\n    url: \"/position\",\n    optionalRequestParam: () =>\n      generateCurrentAreaRequestParameter(currentArea),\n    serviceName: ServiceName.GET_CURRENT_ADDRESS,\n  };\n};\n\nexport const GET_DEALS = (address: Address): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: true,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/deals\",\n    optionalRequestParam: () =>\n      `?${generateParameter(AREA_NAME_URL_PARAMETER, address.area || \"\")}`,\n    serviceName: ServiceName.GET_DEALS,\n  };\n};\n\nexport const GET_LABEL = (fileName: string): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/persistence\",\n    optionalRequestParam: () =>\n      generateMultipleUrlParameters([\"fileName\", fileName]),\n    serviceName: ServiceName.GET_LABEL,\n  };\n};\n\nexport const GET_PRESIGNED_URL = (\n  fileType: string,\n  fileName: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"GET\",\n    url: \"/file\",\n    optionalRequestParam: () => `?contentType=${fileType}&fileName=${fileName}`,\n    serviceName: ServiceName.GET_PRESIGNED_URL,\n  };\n};\n\nexport const GET_SERVER_HEALTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/health\",\n  serviceName: ServiceName.GET_SERVER_HEALTH,\n});\n\nexport const GET_USER_PROFILE = (): Endpoint => ({\n  externalService: false,\n  hasMock: true,\n  isMultipartFileRequest: false,\n  method: \"GET\",\n  url: \"/userProfile\",\n  serviceName: ServiceName.GET_USER_PROFILE,\n});\n\nexport const LOGIN_OAUTH_GOOGLE = (\n  authorizationCode: string,\n  redirectUrl: string\n): Endpoint => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"POST\",\n    url: \"/oauth/google\",\n    optionalRequestParam: () =>\n      generateMultipleUrlParameters([\n        AUTHORIZATION_CODE_PARAMETER,\n        authorizationCode,\n        REDIRECT_URL_PARAMETER,\n        redirectUrl,\n      ]),\n    serviceName: ServiceName.LOGIN_OAUTH_GOOGLE,\n  };\n};\n\nexport const LOGOUT_OAUTH = (): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"DELETE\",\n  url: \"/oauth\",\n  serviceName: ServiceName.LOGOUT_OAUTH,\n});\n\nexport const UPDATE_NICKNAME = (nickname: string): Endpoint => ({\n  externalService: false,\n  hasMock: false,\n  isMultipartFileRequest: false,\n  method: \"PUT\",\n  optionalRequestParam: () =>\n    generateMultipleUrlParameters([\"nickname\", nickname]),\n  url: \"/userProfile/nickname\",\n  serviceName: ServiceName.UPDATE_NICKNAME,\n});\n\nexport const UPLOAD_IMAGE = (image: any): Endpoint => {\n  return {\n    body: image,\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"POST\",\n    url: \"/file/multipart\",\n    serviceName: ServiceName.UPLOAD_IMAGE,\n  };\n};\n\nexport const UPLOAD_IMAGE_SIGNED_URL = (\n  image: File,\n  signedUrl: string\n): Endpoint => {\n  return {\n    body: image,\n    customHeader: { \"Content-Type\": image.type },\n    externalService: true,\n    hasMock: false,\n    isMultipartFileRequest: true,\n    method: \"PUT\",\n    url: signedUrl,\n    serviceName: ServiceName.UPLOAD_IMAGE_SIGNED_URL,\n  };\n};\n\nexport const VOTE_CHANGE = (dealId: number, liked?: boolean) => {\n  return {\n    externalService: false,\n    hasMock: false,\n    isMultipartFileRequest: false,\n    method: \"PUT\",\n    optionalRequestParam: () => {\n      let parameters = [\"dealId\", dealId.toString()];\n      if (liked !== undefined) {\n        parameters.push(\"liked\");\n        parameters.push(liked.toString());\n      }\n      return generateMultipleUrlParameters(parameters);\n    },\n    url: \"/deals\",\n    serviceName: ServiceName.VOTE_CHANGE,\n  };\n};\n\nconst generateCurrentAreaRequestParameter = (\n  currentArea: CurrentArea\n): string => {\n  console.debug(\n    \"service.ts: generateCurrentAreaRequestParameter -\",\n    currentArea\n  );\n  if (currentArea.areaName) {\n    return `?${generateParameter(\n      AREA_NAME_URL_PARAMETER,\n      currentArea.areaName\n    )}`;\n  } else if (currentArea.coordinate) {\n    return `?${LATITUDE_URL_PARAMETER}=${currentArea.coordinate.latitude}&${LONGITUDE_URL_PARAMETER}=${currentArea.coordinate.longitude}`;\n  } else {\n    console.warn(\"CurrentArea input might be invalid\");\n    return \"\";\n  }\n};\n\nconst generateMultipleUrlParameters = (keyAndValue: string[]): string => {\n  let parameter: string = \"?\";\n  if (keyAndValue.length % 2 === 0) {\n    for (let i = 0; i < keyAndValue.length; i += 2) {\n      if (i !== 0) {\n        parameter += \"&\";\n      }\n      parameter += `${keyAndValue[i]}=${keyAndValue[i + 1]}`;\n    }\n  }\n  console.debug(\"generateUrlParameter:\", parameter);\n  return parameter;\n};\n\nconst generateParameter = (key: string, value: string) => {\n  return `${key}=${value}`;\n};\n\nexport interface Endpoint {\n  body?: any;\n  customHeader?: {};\n  errorReturn?: any;\n  externalService: boolean;\n  hasMock: boolean;\n  isMultipartFileRequest: boolean;\n  method: string;\n  url: string;\n  optionalRequestParam?: () => string;\n  serviceName: ServiceName;\n}\n","export interface OAuthDetail {\n  iconUrl: string;\n  provider: OAuthProvider;\n  requestUrl: string;\n  requestUrlNonProd: string;\n}\n\nexport enum OAuthProvider {\n  GOOGLE = \"GOOGLE\",\n  WECHAT = \"WECHAT\",\n  NONE = \"NONE\",\n}\n","export enum Feature {\n  CONTACT_SHOW_EMAIL = \"CONTACT_SHOW_EMAIL\",\n  HEADER_MENU = \"HEADER_MENU\",\n  CREATE_DEAL_DRAFT = \"CREATE_DEAL_DRAFT\",\n  LOGIN_GOOGLE_OAUTH = \"LOGIN_GOOGLE_OAUTH\",\n  LOGIN_WECHAT_OAUTH = \"LOGIN_WECHAT_OAUTH\",\n  USER_PROFILE_IN_HEADER = \"USER_PROFILE_IN_HEADER\",\n  USER_PROFILE_IN_HEADER_MENU = \"USER_PROFILE_IN_HEADER_MENU\",\n}\n","import React from \"react\";\nimport { LazyLoadComponent } from \"./lazyLoadComponent\";\n\nexport const getLazyComponent = (component: LazyLoadComponent) => {\n  return React.lazy(() => getPath(component));\n};\n\nfunction getPath(component: LazyLoadComponent): any {\n  switch (component) {\n    case LazyLoadComponent.Announcement:\n      return import(\"../component/announcement/announcement\");\n    case LazyLoadComponent.Banner:\n      return import(\"../component/banner/banner\");\n    case LazyLoadComponent.CollapseCard:\n      return import(\"../common/collapseCard\");\n    case LazyLoadComponent.CreateDeal:\n      return import(\n        \"../component/createDealLandingPage/createDealLandingPage.v2\"\n      );\n    case LazyLoadComponent.Drawer:\n      return import(\"../common/drawer\");\n    case LazyLoadComponent.Header:\n      return import(\"../component/header/header\");\n    case LazyLoadComponent.HeaderMenu:\n      return import(\"../component/menu/headerMenu\");\n    case LazyLoadComponent.LandingPage:\n      return import(\"../component/landingPage/landingPage\");\n    case LazyLoadComponent.Modal:\n      return import(\"../common/modal\");\n    case LazyLoadComponent.Slide:\n      return import(\"../common/slide/slide\");\n  }\n}\n","import React from \"react\";\n\nexport default React.createContext({});\n","enum StorageType {\n  hideAnnouncement = \"hideAnnouncement\",\n  Label = \"Label\",\n}\n\nexport default class LocalStorage {\n  clear() {\n    localStorage.clear();\n  }\n\n  getHideAnnouncement(): boolean {\n    const value = localStorage.getItem(StorageType.hideAnnouncement);\n    return value !== null && value === \"true\";\n  }\n\n  setHideAnnouncement(hide: boolean) {\n    localStorage.setItem(StorageType.hideAnnouncement, hide.toString());\n  }\n\n  getLabel(): any {\n    const label = localStorage.getItem(StorageType.Label);\n    return label;\n  }\n\n  setLabel(label: any) {\n    localStorage.setItem(StorageType.Label, label);\n  }\n}\n","import { Endpoint, ServiceName } from \"./service\";\nimport { GetDealResponse, Address } from \"../../modal/deal\";\nimport { OAuthProvider } from \"../../modal/oAuthProvider\";\n\nexport default class ServiceExecutor {\n  constructor(\n    private readonly isMock: boolean,\n    private readonly serviceUrl: string,\n    private readonly headers: any\n  ) {}\n\n  public async execute(endpoint: Endpoint): Promise<any> {\n    if (this.isMock && endpoint.hasMock) {\n      return Promise.resolve(getResponse(endpoint.serviceName));\n    } else {\n      let headers = this.generateHeaders(endpoint);\n      let requestParam: string = endpoint.optionalRequestParam\n        ? endpoint.optionalRequestParam()\n        : \"\";\n      let requestUrl = endpoint.externalService\n        ? endpoint.url\n        : this.serviceUrl + endpoint.url + requestParam;\n      return (\n        fetch(requestUrl, {\n          body: endpoint.body,\n          credentials: endpoint.externalService ? \"omit\" : \"include\", // this is for CORS sending cookies\n          headers: endpoint.externalService ? endpoint.customHeader : headers,\n          method: endpoint.method,\n          mode: \"cors\",\n        })\n          .then((result) => {\n            const isJsonResponse = result.headers\n              .get(\"content-type\")\n              ?.match(\"application/json\");\n            const status = result.status;\n            if (status < 400) {\n              if (status === 204 || !isJsonResponse) {\n                return Promise.resolve();\n              } else {\n                return Promise.resolve(result.json());\n              }\n            } else if (result.status > 400) {\n              return Promise.reject();\n            }\n          })\n          // .then(result => Promise.resolve(result))\n          .catch((exception) => {\n            console.warn(\n              \"Something is wrong while fetch: \",\n              requestUrl,\n              exception\n            );\n            return Promise.reject(exception);\n          })\n      );\n    }\n  }\n\n  protected isJsonResponse(response: string): boolean {\n    try {\n      JSON.parse(response);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  protected generateHeaders = (endpoint: Endpoint) => {\n    return !endpoint.isMultipartFileRequest\n      ? {\n          ...this.headers,\n          \"Content-Type\": \"application/json\",\n        }\n      : { ...this.headers };\n  };\n}\n\nconst getResponse = (serviceName: ServiceName): any => {\n  console.debug(\"get mock response:\", serviceName);\n  switch (serviceName) {\n    case ServiceName.GET_DEALS:\n      return GET_DEALS_RESPONSE;\n    case ServiceName.GET_CURRENT_ADDRESS:\n      return GET_POSITION_RESPONSE;\n    case ServiceName.GET_SERVER_HEALTH:\n      return GET_SERVICE_HEALTH;\n    case ServiceName.GET_USER_PROFILE:\n      return GET_USER_PROFILE;\n    default:\n      return Promise.reject();\n  }\n};\n\nconst GET_DEALS_RESPONSE: GetDealResponse = {\n  deals: [\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      createdBy: {\n        id: 0,\n        dealCreated: [9, 8, 2],\n        likedSum: 0,\n        name: \"Mock User\",\n        imageUrl:\n          \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n        oAuthProvider: OAuthProvider.GOOGLE,\n      },\n      description:\n        '<p><img src=\"https://storage.cloud.google.com/deal_image/1577871875967\"></p>',\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 蛋逹王子\",\n      timestamp: 1577872077582,\n      likedCount: 1378,\n      verifiedLikedUserCount: 521,\n      liked: false,\n    },\n    {\n      id: 1,\n      address: \"Mock Address 2\",\n      attendCount: 5,\n      description:\n        \"The content of ExpansionPanels is mounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n    {\n      id: 2,\n      address: \"Mock Address 2\",\n      attendCount: 0,\n      description:\n        \"STTSTSDFounted by default even if the panel is not expanded. This default behavior has server-side rendering and SEO in mind. If you render expensive component trees inside your panels or simply render many panels it might be a good idea to change this default behavior by enabling the unmountOnExit in TransitionProps:\",\n      filesUrl: [\n        \"https://open-shelf.ca/wp-content/uploads/2015/03/twitter-logo-small-1024x576@2x.jpg\",\n        \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n      ],\n      serverIdentifierName: \"MACAU\",\n      title: \"澳門 CRAZY 蛋逹王子\",\n      timestamp: 1576871229332,\n      likedCount: 0,\n      verifiedLikedUserCount: 0,\n      liked: false,\n    },\n  ],\n};\n\nconst GET_POSITION_RESPONSE: Address[] = [\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街166號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街148號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門漁翁街90號\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門花地瑪堂區\",\n    city: \"花地瑪堂區\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n  {\n    id: 0,\n    area: \"澳門\",\n    formattedAddress: \"澳門\",\n    country: \"澳門\",\n  },\n];\n\nconst GET_SERVICE_HEALTH = {\n  up: true,\n};\n\nconst GET_USER_PROFILE = {\n  id: 0,\n  dealCreated: [1, 3, 4],\n  likedSum: 1923,\n  name: \"Mock User\",\n  imageUrl:\n    \"https://www.picclickimg.com/d/l400/pict/163647152800_/Cubd-Collectibles-Disney-Frozen-Elsa-Small-Soft-Stuffed.jpg\",\n  oAuthProvider: \"GOOGLE\",\n};\n","import { Coordinate } from \"../modal/deal\";\n\nconst HOUR = 1000 * 60 * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\nexport default class Transformer {\n  timeDifferentCalcualtor(dateLabel: any, timestamp: number): string {\n    if (timestamp) {\n      let currentDate: Date = new Date();\n      let dateCreated: Date = new Date(timestamp);\n      let timeDifference: number =\n        currentDate.getTime() - dateCreated.getTime();\n      return this.getLabelAccrodingToTimeDifference(dateLabel, timeDifference);\n    } else {\n      console.warn(\"timestamp error: \", timestamp);\n      return dateLabel.unknown;\n    }\n  }\n\n  getLabelAccrodingToTimeDifference(\n    dateLabel: any,\n    timeDifference: number\n  ): string {\n    // Determine if display detail days needed.\n    const dayDifferent = Math.round(timeDifference / DAY);\n    return dayDifferent > 0\n      ? `${dayDifferent}${dateLabel.day}`\n      : dateLabel.today;\n  }\n\n  getCurrentLocation(callBack: any): void {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      let { latitude, longitude } = position.coords;\n      let currentPosition: Coordinate = {\n        latitude,\n        longitude,\n      };\n      callBack(currentPosition);\n    });\n  }\n}\n","import ServiceExecutor from \"./middleware/serviceExecutor\";\nimport Transformer from \"./transformer\";\nimport { Feature } from \"./feature/feature\";\n\nexport default class AppContext {\n  // Deal Refresh\n  private ALLOW_DEAL_REFRESH: boolean = false;\n  private readonly DEAL_REFRESH_TIME: number = 5 * 1000;\n\n  // API Headers\n  private readonly APIKEY = \"vKZywb959gExXaEHSwdzdq7MfZu3Nb\";\n  private readonly X_MADT_APPID: string = \"localdeal\";\n  private readonly X_MADT_APP_VERSION: string = \"0.0.1\";\n\n  private readonly _serviceExecutor: ServiceExecutor = new ServiceExecutor(\n    this.isMock,\n    this.serviceUrl,\n    this.headers\n  );\n\n  private readonly _transformer: Transformer = new Transformer();\n\n  get allowDealRefresh(): boolean {\n    return this.ALLOW_DEAL_REFRESH;\n  }\n\n  set allowDealRefresh(isAllowDealRefresh: boolean) {\n    this.ALLOW_DEAL_REFRESH = isAllowDealRefresh;\n  }\n\n  get dealRefreshTime(): number {\n    return this.DEAL_REFRESH_TIME;\n  }\n\n  get features(): Feature[] {\n    return [\n      Feature.CREATE_DEAL_DRAFT,\n      Feature.CONTACT_SHOW_EMAIL,\n      Feature.HEADER_MENU,\n      Feature.LOGIN_GOOGLE_OAUTH,\n      Feature.LOGIN_WECHAT_OAUTH,\n    ];\n  }\n\n  get headers() {\n    let { APIKEY, X_MADT_APPID, X_MADT_APP_VERSION } = this;\n    return {\n      APIKEY: APIKEY,\n      XMADTAPPID: X_MADT_APPID,\n      XMADTAPPVERSION: X_MADT_APP_VERSION,\n    };\n  }\n\n  get isMock(): boolean {\n    return false;\n  }\n\n  get isProd(): boolean {\n    return true;\n  }\n\n  get oAuthRedirectUrl(): string {\n    return this.isProd ? \"https://liuda.site\" : \"http://127.0.0.1:3000\";\n  }\n\n  get serviceExecutor(): ServiceExecutor {\n    return this._serviceExecutor;\n  }\n\n  get serviceUrl(): string {\n    // TODO need prod url\n    return this.isProd ? \"https://liuda.site:8082\" : \"http://127.0.0.1:8081\";\n  }\n\n  get transformer(): Transformer {\n    return this._transformer;\n  }\n}\n","import Resizer from \"react-image-file-resizer\";\nimport loadImage from \"blueimp-load-image\";\n\nexport default class ImageProcessor {\n  public imageCompress(\n    file: File,\n    imageType: string,\n    height: number,\n    width: number,\n    quality: number\n  ): Promise<File> {\n    return new Promise((resolve, reject) => {\n      const callBackFunction = (processedImage: File) => {\n        resolve(processedImage);\n      };\n      Resizer.imageFileResizer(\n        file,\n        width / 5,\n        height,\n        imageType,\n        quality,\n        0,\n        callBackFunction,\n        \"blob\"\n      );\n    });\n  }\n\n  public async getImageInfo(\n    file: File\n  ): Promise<{ height: number; size: number; type: string; width: number }> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = URL.createObjectURL(file);\n      image.onload = () => {\n        return resolve({\n          height: image.height,\n          size: file.size,\n          type: file.type,\n          width: image.width,\n        });\n      };\n    });\n  }\n\n  public async imagePrecprocess(file: any): Promise<File> {\n    let blob = await this.transferToBlob(file);\n    const { height, size, type, width } = await this.getImageInfo(blob);\n    console.debug(\"original image size:\", size);\n    const imageCompressQuality = size > 100000 ? 10 : 100;\n    const imageNameSplit = type.split(\"/\");\n    const processedImage = await this.imageCompress(\n      blob,\n      imageNameSplit[imageNameSplit.length - 1],\n      height,\n      width,\n      imageCompressQuality\n    );\n    await this.getImageInfo(processedImage);\n    return Promise.resolve(processedImage);\n  }\n\n  protected transferToBlob(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return fetch(file)\n        .then((originalImage) => originalImage.blob())\n        .then((result) => resolve(result));\n    });\n  }\n\n  public fixRotation(file: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      loadImage(\n        file,\n        (img: any) => {\n          return resolve(img.toDataURL(this.guessImageMime(file)));\n        },\n        { orientation: true }\n      );\n    });\n  }\n\n  guessImageMime(data: string): string {\n    if (data.charAt(0) === \"/\") {\n      return \"image/jpeg\";\n    } else if (data.charAt(0) === \"R\") {\n      return \"image/gif\";\n    } else if (data.charAt(0) === \"i\") {\n      return \"image/png\";\n    } else {\n      return \"\";\n    }\n  }\n}\n","import { GET_LABEL } from \"./service\";\nimport LocalStorage from \"../localStorage\";\nimport ServiceExecutor from \"./serviceExecutor\";\n\nexport default class LabelService {\n  constructor(\n    readonly localStorage: LocalStorage,\n    readonly serviceExecutor: ServiceExecutor\n  ) {}\n\n  getLabels() {\n    return this.checkLabelVersion();\n  }\n\n  async checkLabelVersion() {\n    const labelName = this.getRequestParamLabelName(this.getLanguage());\n    const localStorageLabel: any = this.localStorage.getLabel();\n    if (localStorageLabel !== null) {\n      const localLabel = JSON.parse(localStorageLabel);\n      const remoteLabelVersionObject = await this.getRemoteLabelVersion();\n      if (\n        localLabel.labelName !== labelName ||\n        remoteLabelVersionObject.version !== localLabel.labelVersion\n      ) {\n        this.setNewLabel();\n      } else {\n        return localLabel;\n      }\n    } else {\n      this.setNewLabel();\n    }\n  }\n\n  async setNewLabel() {\n    const label = await this.getRemoteLabel();\n    this.localStorage.setLabel(JSON.stringify(label));\n    this.checkLabelVersion();\n  }\n\n  getLanguage() {\n    return \"chinese_traditional\";\n  }\n\n  getRemoteLabel() {\n    return this.serviceExecutor.execute(\n      GET_LABEL(this.getRequestParamLabelName(this.getLanguage()))\n    );\n  }\n\n  getRemoteLabelVersion() {\n    const requestParam =\n      this.getRequestParamLabelName(this.getLanguage()) + \"_version\";\n    return this.serviceExecutor.execute(GET_LABEL(requestParam));\n  }\n\n  getRequestParamLabelName(language: string) {\n    switch (language) {\n      default:\n        return \"label_chinese_traditional\";\n    }\n  }\n}\n","import { Component } from \"react\";\nimport AppContext from \"./appContext\";\nimport { OAuthProvider } from \"../modal/oAuthProvider\";\nimport ImageProcessor from \"./imageProcessor\";\nimport AppState from \"../common/context/appState\";\nimport AppStateInterface from \"./context/appStateInterface\";\nimport LabelService from \"./middleware/labelService\";\nimport {\n  LOGIN_OAUTH_GOOGLE,\n  GET_CURRENT_ADDRESS,\n  GET_DEALS,\n  GET_SERVER_HEALTH,\n  GET_USER_PROFILE,\n} from \"./middleware/service\";\nimport LocalStorage from \"../common/localStorage\";\nimport { Coordinate, GetDealResponse, Address } from \"../modal/deal\";\n\nexport default class ApplicationComponent<\n  ChildProps = {},\n  ChildState = {}\n> extends Component<ChildProps, ChildState> {\n  static contextType = AppState;\n  private static labelLoaded = false;\n  private readonly _localStorage = new LocalStorage();\n  private readonly _appContext: AppContext = new AppContext();\n  private readonly _imageProcessor: ImageProcessor = new ImageProcessor();\n  private readonly _labelService: LabelService = new LabelService(\n    this._localStorage,\n    this.appContext.serviceExecutor\n  );\n\n  get appContext(): AppContext {\n    return this._appContext;\n  }\n\n  get appState(): AppStateInterface {\n    return this.context;\n  }\n\n  get imageProcessor(): ImageProcessor {\n    return this._imageProcessor;\n  }\n\n  get labels(): any {\n    if (!ApplicationComponent.labelLoaded) {\n      this._labelService.getLabels().then((result) => {\n        this.appState.labels.setLabels(result);\n      });\n      ApplicationComponent.labelLoaded = true;\n    }\n    return this.appState.labels;\n  }\n\n  get localStorage(): LocalStorage {\n    return this._localStorage;\n  }\n\n  public checkOAuth(): {\n    authorizationCode: string;\n    oAuthProvider: OAuthProvider;\n  } {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const state = params.get(\"state\");\n    const code = params.get(\"code\");\n    let oAuthProvider: OAuthProvider = OAuthProvider.NONE;\n    let authorizationCode: string = \"\";\n    if (state === OAuthProvider.GOOGLE) {\n      oAuthProvider = OAuthProvider.GOOGLE;\n      authorizationCode = code ?? \"\";\n    }\n    return {\n      authorizationCode,\n      oAuthProvider,\n    };\n  }\n\n  public onOAuthLoginComplete() {\n    window.history.pushState(null, document.title, \"/\");\n  }\n\n  async executeInit() {\n    let value = await Promise.all([\n      this.getServerStatus().then((result) => result),\n      this.setCurrentPosition(),\n    ]);\n    if (value[0]) {\n      this.checkOAuthFromUrl();\n      this.getUserProfile();\n      await this._labelService.checkLabelVersion();\n      await this.setCurrentAddress();\n      await this.executeGetDeals();\n    }\n    return value[0];\n  }\n\n  protected checkOAuthFromUrl() {\n    const { authorizationCode, oAuthProvider } = this.checkOAuth();\n    if (oAuthProvider === OAuthProvider.GOOGLE) {\n      this.appContext.serviceExecutor\n        .execute(\n          LOGIN_OAUTH_GOOGLE(\n            authorizationCode,\n            this.appContext.oAuthRedirectUrl\n          )\n        )\n        .then(() => {\n          this.onOAuthLoginComplete();\n          this.getUserProfile();\n        });\n    }\n  }\n\n  protected async setCurrentPosition() {\n    if (this.appContext.isMock) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this.appContext.transformer.getCurrentLocation(\n        (coordinate: Coordinate) => {\n          this.appState.position.setGeolocation(coordinate);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  protected async setCurrentAddress() {\n    return new Promise((resolve, reject) => {\n      this.appContext.serviceExecutor\n        .execute(\n          GET_CURRENT_ADDRESS({\n            coordinate: this.appState.position.coordinate,\n          })\n        )\n        .then((addresses: Address[]) => {\n          this.appState.address.setPredicteAddresses(addresses);\n          this.appState.position.setLoadingPosition(false);\n          this.appState.address.setSelectedAddress(addresses[0]);\n          return resolve();\n        });\n    });\n  }\n\n  protected executeGetDeals = () => {\n    if (this.appState.address.selectedAddress?.area) {\n      this.appContext.serviceExecutor\n        .execute(GET_DEALS(this.appState.address.selectedAddress))\n        .then((getDealResponse: GetDealResponse) => {\n          this.appState.deal.setDeals(getDealResponse.deals);\n        });\n    }\n  };\n\n  protected async getServerStatus() {\n    return this.appContext.serviceExecutor\n      .execute(GET_SERVER_HEALTH())\n      .then((result) => {\n        this.appState.service.setServiceUp(result.up);\n        return Promise.resolve(result.up);\n      })\n      .catch((ex) => {\n        this.appState.service.setServiceUp(false);\n        return Promise.reject(false);\n      });\n  }\n\n  protected getUserProfile() {\n    this.appContext.serviceExecutor\n      .execute(GET_USER_PROFILE())\n      .then((result) => {\n        return this.appState.user.setUserProfile(result);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport AppState from \"./appState\";\nimport Deal, { Address, Coordinate } from \"../../modal/deal\";\nimport { UserProfile } from \"../../modal/userProfile\";\nimport { OAuthProvider } from \"../../modal/oAuthProvider\";\nimport chinese_label from \"../../content/labels/chinese.traditional.json\";\n\nexport interface State {\n  address: {\n    addressesPrediction: Address[];\n    selectedAddress: Address;\n  };\n  banner: {\n    show: boolean;\n    progressMessage: string;\n  };\n  deal: {\n    dealDraft?: Deal;\n    deals: Deal[];\n  };\n  labels: {};\n  position: {\n    loadingPosition: boolean;\n    coordinate?: Coordinate;\n  };\n  service: {\n    serviceUp: boolean;\n  };\n  user: {\n    userProfile?: UserProfile;\n  };\n}\n\nexport default class GlobalStateComponent extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      address: {\n        addressesPrediction: [],\n        selectedAddress: {\n          area: \"\",\n          street1: \"\",\n          street2: \"\",\n          city: \"\",\n          state: \"\",\n          country: \"\",\n          zipCode: \"\",\n        },\n      },\n      banner: {\n        show: false,\n        progressMessage: \"\",\n      },\n      deal: {\n        deals: [],\n      },\n      labels: chinese_label,\n      position: {\n        loadingPosition: true,\n        coordinate: {\n          latitude: 0,\n          longitude: 0,\n        },\n      },\n      service: {\n        serviceUp: true,\n      },\n      user: {\n        userProfile: {\n          id: 0,\n          dealCreated: [],\n          likedSum: 0,\n          name: \"\",\n          imageUrl: \"\",\n          oAuthProvider: OAuthProvider.NONE,\n        },\n      },\n    };\n  }\n\n  render() {\n    const {\n      address,\n      banner,\n      deal,\n      labels,\n      position,\n      service,\n      user,\n    } = this.state;\n    return (\n      <AppState.Provider\n        value={{\n          address: {\n            ...address,\n            setSelectedAddress: this.setSelectedAddress,\n            setPredicteAddresses: this.setPredicteAddresses,\n          },\n          banner: {\n            ...banner,\n            setShowBanner: this.setShowBanner,\n            setBannerProgressMessage: this.setBannerProgressMessage,\n          },\n          deal: { ...deal, setDeals: this.setDeals },\n          labels: { ...labels, setLabels: this.setLabels },\n          position: {\n            ...position,\n            setGeolocation: this.setGeolocation,\n            setLoadingPosition: this.setLoadingPosition,\n          },\n          service: {\n            ...service,\n            setServiceUp: this.setServiceUp,\n          },\n          user: {\n            ...user,\n            removeUserProfile: this.removeUserProfile,\n            setUserProfile: this.setUserProfile,\n          },\n        }}\n      >\n        {this.props.children}\n      </AppState.Provider>\n    );\n  }\n\n  protected removeUserProfile = () => {\n    const userProfile: UserProfile = {\n      id: 0,\n      dealCreated: [],\n      likedSum: 0,\n      imageUrl: \"\",\n      name: \"\",\n      oAuthProvider: OAuthProvider.NONE,\n    };\n    this.setState({\n      user: {\n        ...this.state.user,\n        userProfile,\n      },\n    });\n  };\n\n  protected setDeals = (deals: Deal[]) => {\n    this.setState({\n      deal: { ...this.state.deal, deals },\n    });\n  };\n\n  protected setLabels = (labels: {}) => {\n    this.setState({\n      labels: labels,\n    });\n  };\n\n  protected setShowBanner = (show: boolean) => {\n    this.setState({\n      banner: { ...this.state.banner, show },\n    });\n  };\n\n  protected setBannerProgressMessage = (progressMessage: string) => {\n    this.setState({\n      banner: { ...this.state.banner, progressMessage },\n    });\n  };\n\n  protected setGeolocation = (coordinate: Coordinate) => {\n    this.setState({\n      position: { ...this.state.position, coordinate },\n    });\n  };\n\n  protected setLoadingPosition = (loadingPosition: boolean) => {\n    this.setState({\n      position: { ...this.state.position, loadingPosition },\n    });\n  };\n\n  protected setPredicteAddresses = (addressesPrediction: Address[]) => {\n    this.setState({\n      address: { ...this.state.address, addressesPrediction },\n    });\n  };\n\n  protected setSelectedAddress = (selectedAddress: Address) => {\n    this.setState({\n      address: { ...this.state.address, selectedAddress },\n    });\n  };\n\n  protected setServiceUp = (serviceUp: boolean) => {\n    this.setState({\n      service: { ...this.state.service, serviceUp },\n    });\n  };\n\n  protected setUserProfile = (userProfile: UserProfile) => {\n    this.setState({\n      user: { ...this.state.user, userProfile },\n    });\n  };\n}\n","import React, { Suspense, Component } from \"react\";\nimport \"./App.css\";\nimport { LazyLoadComponent } from \"./lazyLoad/lazyLoadComponent\";\nimport { getLazyComponent } from \"./lazyLoad/lazyLoad\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport ApplicationComponent from \"./common/applicationComponent\";\n\nconst Announcement = getLazyComponent(LazyLoadComponent.Announcement);\nconst Banner = getLazyComponent(LazyLoadComponent.Banner);\nconst Header = getLazyComponent(LazyLoadComponent.Header);\nconst LandingPage = getLazyComponent(LazyLoadComponent.LandingPage);\n\nexport default class Init extends ApplicationComponent {\n  componentWillMount() {\n    this.executeInit();\n  }\n\n  render() {\n    return (\n      <Suspense fallback={<></>}>\n        <div className=\"App-header\">\n          <Header />\n        </div>\n        <Announcement />\n        <Banner />\n        <div className=\"Content\">\n          <LandingPage />\n        </div>\n      </Suspense>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport GlobalStateComponent from \"./common/context/globalStateComponent\";\nimport Init from \"./init\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <GlobalStateComponent>\n        <Init />\n      </GlobalStateComponent>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}